{"version":3,"sources":["lib/utils/functions/getEndpoint.ts","lib/assets/ButtonContent.tsx","lib/assets/GoogleIcon.tsx","lib/utils/SynapseConstants.ts","lib/utils/functions/dispatchDownloadListChangeEvent.ts","lib/utils/SynapseClient.ts","lib/containers/Login.tsx","lib/containers/Uploader.tsx","lib/containers/FileContentDownloadUploadDemo.tsx","lib/containers/StatisticsPlot.tsx","lib/utils/functions/testDownloadSpeed.ts","lib/containers/table/SynapseTableConstants.ts","lib/utils/hooks/usePrevious.ts","lib/utils/hooks/useCompare.ts","lib/containers/access_requirement_list/AccessApprovalCheckMark.tsx","lib/utils/functions/getUserData.ts","lib/containers/UserCardSmall.tsx","lib/containers/UserCardContextMenu.tsx","lib/assets/icons/CertifiedUser.tsx","lib/containers/UserCardLarge.tsx","lib/assets/icons/IconCopy.tsx","lib/assets/icons/ValidatedProfile.tsx","lib/containers/ToastMessage.tsx","lib/containers/UserCardMedium.tsx","lib/containers/UserCard.tsx","lib/containers/widgets/Bookmarks.tsx","lib/containers/widgets/SynapseImage.tsx","lib/containers/row_renderers/utils/CardFooter.tsx","lib/containers/row_renderers/utils/ChipContainer.tsx","lib/assets/themed_icons/Project.tsx","lib/containers/row_renderers/utils/Icon.tsx","lib/assets/themed_icons/Database.tsx","lib/assets/themed_icons/Publication.tsx","lib/assets/themed_icons/Study.tsx","lib/assets/themed_icons/ToolExperimental.tsx","lib/assets/themed_icons/ToolComputational.tsx","lib/assets/themed_icons/ToolClinical.tsx","lib/assets/themed_icons/Explore.tsx","lib/assets/themed_icons/Search.tsx","lib/assets/themed_icons/Chart.tsx","lib/assets/themed_icons/Filter.tsx","lib/assets/themed_icons/Download.tsx","lib/assets/themed_icons/Expand.tsx","lib/assets/themed_icons/Collapse.tsx","lib/assets/themed_icons/Close.tsx","lib/assets/themed_icons/SortUp.tsx","lib/assets/themed_icons/SortDown.tsx","lib/assets/themed_icons/Settings.tsx","lib/assets/themed_icons/Columns.tsx","lib/assets/themed_icons/ColumnsDark.tsx","lib/assets/themed_icons/VerticalDots.tsx","lib/utils/functions/colorPalette.ts","lib/containers/row_renderers/utils/ShowMore.tsx","lib/containers/ColorGradient.tsx","lib/containers/HeaderCard.tsx","lib/utils/functions/unCamelCase.ts","lib/containers/widgets/FileHandleLink.tsx","lib/containers/GenericCard.tsx","lib/utils/functions/sqlFunctions.ts","lib/containers/widgets/SynapsePlot.tsx","lib/containers/widgets/SynapseVideo.tsx","lib/containers/SignInButton.tsx","lib/containers/ErrorBanner.tsx","lib/containers/MarkdownSynapse.tsx","lib/containers/access_requirement_list/AcceptedRequirements.tsx","lib/containers/access_requirement_list/SelfSignAccessRequirement.tsx","lib/containers/access_requirement_list/TermsOfUseAccessRequirement.tsx","lib/containers/access_requirement_list/ManagedACTAccessRequirement.tsx","lib/containers/access_requirement_list/ACTAccessRequirement.tsx","lib/utils/hooks/useGetInfoFromIds.ts","lib/containers/access_requirement_list/AccessRequirementList.tsx","lib/containers/HasAccess.tsx","demo/containers/Demo.tsx","lib/utils/functions/queryUtils.ts","lib/utils/functions/calculateFriendlyFileSize.ts","lib/containers/row_renderers/Dataset.tsx","lib/containers/row_renderers/Funder.tsx","lib/utils/functions/facetUtils.ts","lib/containers/Facets.tsx","lib/utils/functions/deepLinkingUtils.ts","lib/containers/QueryWrapper.tsx","lib/utils/functions/getDataFromFromStorage.ts","lib/containers/widgets/ElementWithTooltip.tsx","lib/containers/widgets/Checkbox.tsx","lib/containers/widgets/query-filter/FacetFilterHeader.tsx","lib/containers/widgets/query-filter/EnumFacetFilter.tsx","lib/containers/widgets/Range.tsx","lib/containers/widgets/RangeSlider.tsx","lib/containers/widgets/query-filter/RangeFacetFilter.tsx","lib/containers/widgets/RadioGroup.tsx","lib/containers/widgets/query-filter/QueryFilter.tsx","lib/containers/LoadingScreen.tsx","lib/containers/widgets/facet-nav/FacetNavPanel.tsx","lib/containers/widgets/facet-nav/FacetNav.tsx","lib/containers/download_list/DownloadDetails.tsx","lib/containers/download_list/CreatePackage.tsx","lib/containers/download_list/DownloadListTable.tsx","lib/containers/download_list/DownloadConfirmation.tsx","lib/containers/EntityLink.tsx","lib/containers/synapse_table_functions/getUniqueEntities.ts","lib/containers/synapse_table_functions/getColumnIndiciesWithType.ts","lib/containers/ModalDownload.FormSchema.ts","lib/containers/ModalDownload.tsx","lib/containers/table/SynapseTable.tsx","lib/containers/table/table-top/ProgrammaticOptions.tsx","lib/utils/synapseTypes/Table/QueryFilter.ts","lib/containers/SearchV2.tsx","lib/containers/StackedBarChart.tsx","lib/containers/EntityForm.tsx","lib/containers/ExternalFileHandleLink.tsx","lib/containers/synapse_form_wrapper/types.ts","lib/containers/synapse_form_wrapper/Header.tsx","lib/containers/synapse_form_wrapper/StepsSideNav.tsx","lib/containers/synapse_form_wrapper/NavButtons.tsx","lib/containers/synapse_form_wrapper/DataDebug.tsx","lib/containers/synapse_form_wrapper/SummaryTable.tsx","lib/containers/synapse_form_wrapper/WarningModal.tsx","lib/containers/synapse_form_wrapper/SynapseForm.tsx","lib/containers/synapse_form_wrapper/SynapseFormWrapper.tsx","lib/containers/synapse_form_wrapper/SynapseFormSubmissionsGrid.tsx","lib/containers/download_list/ShowDownload.tsx","lib/utils/hooks/useGetQueryResultBundle.ts","lib/utils/hooks/useShowDesktop.ts","lib/containers/home_page/ExpandableContent.tsx","lib/containers/home_page/goals/Goals.Mobile.tsx","lib/containers/home_page/goals/Goals.tsx","lib/containers/home_page/programs/Programs.Mobile.tsx","lib/containers/home_page/resources/Resources.tsx","lib/containers/home_page/resources/Resources.Desktop.tsx","lib/containers/home_page/resources/Resources.Mobile.tsx","lib/containers/RssFeedCards.tsx","lib/containers/widgets/themes-plot/DotPlot.tsx","lib/containers/widgets/themes-plot/BarPlot.tsx","lib/containers/widgets/themes-plot/ThemesPlot.tsx","lib/containers/UserCardList.tsx","lib/containers/home_page/featured-data/FacetPlotsCard.tsx","lib/assets/icons/account-registered.svg","lib/assets/icons/account-certified.svg","lib/assets/icons/account-validated.svg","lib/containers/VisibilityObserver.tsx","lib/containers/RenderIfInView.tsx","lib/assets/icons/terms/check.svg","lib/assets/icons/terms/chat-bubbles.svg","lib/assets/icons/terms/lock.svg","lib/assets/icons/terms/scale.svg","lib/assets/icons/terms/shield.svg","lib/assets/icons/terms/people.svg","lib/assets/icons/terms/pen.svg","lib/assets/icons/terms/speaker.svg","lib/assets/icons/terms/flag.svg","lib/assets/icons/Arrow.tsx","lib/containers/Carousel.tsx","lib/containers/home_page/project_view_carousel/ProjectViewCarousel.tsx","lib/containers/home_page/project_view_carousel/ProjectViewCard.tsx","lib/assets/icons/calendar-clock.svg","lib/containers/evaluation_queues/round_limits/EvaluationRoundLimitOptions.tsx","lib/assets/icons/icon_plus_square_filled.svg","lib/assets/icons/icon_times.svg","lib/containers/evaluation_queues/round_limits/EvaluationRoundLimitOptionsList.tsx","lib/containers/evaluation_queues/EvaluationEditor.tsx","lib/containers/widgets/facet-nav/SelectionCriteriaPill.tsx","lib/containers/TotalQueryResults.tsx","lib/containers/CardContainer.tsx","lib/containers/CardContainerLogic.tsx","demo/containers/playground/CardContainerLogicDemo.tsx","lib/containers/Search.tsx","demo/containers/playground/SearchDemo.tsx","demo/containers/playground/ModalDownloadDemo.tsx","demo/containers/playground/ShowDownloadDemo.tsx","demo/containers/playground/FormServicesIntegrationDemo.tsx","demo/containers/playground/WidgetDemo.tsx","demo/containers/playground/AccessRequirementDemo.tsx","lib/containers/TemplateComponent.tsx","demo/containers/playground/TemplateComponentDemo.tsx","demo/containers/playground/SynapsePlotDemo.tsx","demo/containers/playground/SynapseHomepage.tsx","demo/containers/playground/Playground.tsx","demo/containers/App.tsx","index.tsx","lib/utils/synapseTypes/index.ts","lib/utils/synapseTypes/EvaluationQueryTable/index.ts","lib/assets/icons/file-dotted.svg","images/logo.svg","lib/assets/icons/Data2.svg","lib/assets/icons/subscribe_plus.svg","lib/utils/synapseTypes/Download/index.ts","lib/utils/synapseTypes/Table/index.ts","lib/utils/synapseTypes/Table/ColumnType.ts","lib/utils/synapseTypes/Table/SelectColumn.ts","lib/utils/synapseTypes/AccessRequirement/index.ts","lib/utils/synapseTypes/AccessRequirement/AccessRequirement.ts","lib/utils/synapseTypes/BulkFileDownloadRequest.ts","lib/utils/synapseTypes/Evaluation/index.ts","lib/utils/synapseTypes/Evaluation/Evaluation.ts","lib/utils/synapseTypes/FileDownloadSummary.ts","lib/utils/synapseTypes/FileEntity.ts","lib/utils/synapseTypes/FileHandleAssociation.ts","lib/utils/synapseTypes/ExternalFileHandleInterface.ts","lib/utils/synapseTypes/Forms.ts","lib/utils/synapseTypes/RestrictionInformation.ts","lib/utils/synapseTypes/AccessApproval.ts","lib/utils/synapseTypes/WikiPageKey.ts","lib/assets/icons/study-active.svg","lib/assets/icons/study-complete.svg","lib/assets/icons/DNA_Two.svg","lib/assets/icons/organizations.svg","lib/assets/icons/person.svg","lib/assets/icons/mouse.svg","lib/assets/icons/chart2.svg","lib/assets/icons/file.svg","lib/assets/icons/icon_plus.svg","lib/assets/icons/icon_minus.svg","lib/assets/icons/json-form-tool-no-submissions.svg","demo/containers/playground/icons/brain.svg","demo/containers/playground/icons/circle.svg","demo/containers/playground/icons/mouse.svg","demo/containers/playground/icons/resiliencead.svg","images/homepage_1.png","images/organizeResearch.svg","images/getCredit.svg","images/collaborate.svg","images/dataSharing.svg","images/rClient.svg","images/python.svg","images/terminal.svg","images/java.svg"],"names":["BackendDestinationEnum","children","style","paddingRight","fontWeight","paddingLeft","icon","paddingTop","paddingBottom","textAlign","width","active","background","borderRadius","height","xmlns","fill","fillRule","d","BUNDLE_MASK_QUERY_RESULTS","BUNDLE_MASK_QUERY_COUNT","BUNDLE_MASK_QUERY_SELECT_COLUMNS","BUNDLE_MASK_QUERY_MAX_ROWS_PER_PAGE","BUNDLE_MASK_QUERY_COLUMN_MODELS","BUNDLE_MASK_QUERY_FACETS","BUNDLE_MASK_SUM_FILES_SIZE_BYTES","ENTITY_BUNDLE_MASK_ENTITY","ENTITY_BUNDLE_MASK_ANNOTATIONS","ENTITY_BUNDLE_MASK_PERMISSIONS","ENTITY_BUNDLE_MASK_ENTITY_PATH","ENTITY_BUNDLE_MASK_HAS_CHILDREN","ENTITY_BUNDLE_MASK_ACL","ENTITY_BUNDLE_MASK_FILE_HANDLES","ENTITY_BUNDLE_MASK_TABLE_DATA","ENTITY_BUNDLE_MASK_ROOT_WIKI_ID","ENTITY_BUNDLE_MASK_BENEFACTOR_ACL","ENTITY_BUNDLE_MASK_DOI","ENTITY_BUNDLE_MASK_FILE_NAME","ENTITY_BUNDLE_MASK_THREAD_COUNT","ENTITY_BUNDLE_MASK_RESTRICTION_INFORMATION","STUDY","VALUE_NOT_SET","STUDY_ACTIVE","STUDY_COMPLETE","DATABASE","DATASET","AMP_CONSORTIUM","FUNDER","PUBLICATION","TOOL","GENERIC_CARD","COMPUTATIONAL","EXPERIMENTAL","CLINICAL","PROJECT","GRANT","ORGANIZATION","PERSON","MOUSE","EXPLORE","SEARCH","CHART","FILTER","DOWNLOAD","EXPAND","COLLAPSE","CLOSE","SORTUP","SORTDOWN","SETTINGS","COLUMNS","COLUMNSDARK","VERTICAL_DOTS","FILE","CHART2","PAGE_SIZE","SMALL_USER_CARD","MEDIUM_USER_CARD","LARGE_USER_CARD","SEPERATOR","AUTHENTICATED_USERS","_TIME_DELAY","SRC_SIGN_IN_CLASS","USER_BUNDLE_MASK_USER_PROFILE","USER_BUNDLE_MASK_ORCID","USER_BUNDLE_MASK_VERIFICATION_SUBMISSION","USER_BUNDLE_MASK_IS_CERTIFIED","USER_BUNDLE_MASK_IS_VERIFIED","USER_BUNDLE_MASK_IS_ACT_MEMBER","USER_PROFILE_STORAGE_KEY","ENTITY_HEADER_STORAGE_KEY","PRODUCTION_ENDPOINT_CONFIG","REPO","PORTAL","getEndpoint","endpoint","endpoint_config","window","SRC","OVERRIDE_ENDPOINT_CONFIG","Error","PORTAL_ENDPOINT","dispatchDownloadListChangeEvent","downloadList","downloadEvent","CustomEvent","detail","document","dispatchEvent","cookies","UniversalCookies","IS_OUTSIDE_SYNAPSE_ORG","location","hostname","toLowerCase","includes","SESSION_TOKEN_COOKIE_KEY","AUTH_PROVIDER","SYNAPSE_STORAGE_LOCATION_ID","getRootURL","portString","port","protocol","delay","t","Promise","resolve","setTimeout","bind","RETRY_STATUS_CODES","fetchWithExponentialTimeout","url","options","delayMs","fetch","then","resp","text","json","JSON","parse","ok","reject","error","catch","reason","status","indexOf","doPost","requestJsonObject","sessionToken","initCredentials","body","stringify","headers","Accept","method","mode","credentials","usedEndpoint","doGet","doDelete","doPut","putRefreshSessionToken","undefined","REPO_ENDPOINT","getVersion","addFilesToDownloadList","request","updateParentState","requestUrl","token","getAsyncResultFromJobId","data","getDownloadFromTableRequest","entityId","getFileHandleById","handleId","getActualFileHandleByIdURL","fileAssociateType","fileAssociateId","redirect","open","err","console","getFileHandleByIdURL","urlRequest","jobState","asyncJobStatus","getQueryTableResults","queryBundleRequest","getFullQueryTableResults","a","offset","query","rest","queryRequest","partMask","SynapseConstants","response","isDone","queryResult","queryResults","rows","length","maxRowsPerPage","limit","push","login","username","password","authenticationReceipt","oAuthUrlRequest","provider","redirectUrl","oAuthSessionRequest","authenticationCode","createEntity","entity","createProject","name","concreteType","getUserProfile","getUserProfileById","ownerId","getUserBundle","id","mask","getGroupHeadersBatch","ids","join","getUserProfiles","list","getEntityChildren","lookupChildEntity","getFiles","getBulkFiles","bulkFileDownloadRequest","asyncJobId","getEntity","versionNumber","getEntityHeader","references","updateEntity","deleteEntity","getEntityBundleForVersion","version","partsMask","getObjectTypeToString","key","ObjectType","getEntityWiki","wikiId","objectType","ENTITY","objectTypeString","toLocaleLowerCase","getUserFavorites","getUserTeamList","getTeamList","fragment","getWikiPageKeyForEntity","getWikiPageKeyForAccessRequirement","getWikiAttachmentsFromEntity","getWikiAttachmentsFromEvaluation","getPresignedUrlForWikiAttachment","fileName","setSessionTokenCookie","sessionCallback","remove","path","set","maxAge","_","getSessionTokenFromCookie","get","getPrincipalAliasRequest","alias","type","detectSSOCode","redirectURL","code","URL","href","searchParams","synToken","originalUrl","localStorage","getItem","removeItem","replace","signOut","uploadFile","filename","file","fileUploadResolve","fileUploadReject","partSize","Math","max","size","contentType","fileSizeBytes","partSizeBytes","storageLocationId","calculateMd5","md5","contentMD5Hex","startMultipartUpload","fileBlob","blobSlice","File","prototype","slice","chunks","ceil","spark","SparkMD5","ArrayBuffer","fileReader","FileReader","currentChunk","onload","e","log","append","result","loadNext","end","info","onerror","warn","start","readAsArrayBuffer","call","processFilePart","partNumber","multipartUploadStatus","clientSidePartsState","uploadId","presignedUploadUrlRequest","partNumbers","presignedUrlUrl","presignedUrlResponse","presignedUrl","partPresignedUrls","uploadPresignedUrl","startByte","endByte","fileSlice","uploadFilePart","addPartUrl","addPartResponse","addPartState","checkUploadComplete","fileHandleName","every","v","newStatus","fileHandleId","resultFileHandleId","partsState","split","map","bit","i","getFileEntityContent","fileEntity","fileHandleAssociationList","associateObjectId","associateObjectType","dataFileHandleId","includeFileHandles","includePreSignedURLs","includePreviewPreSignedURLs","requestedFiles","preSignedURL","fileHandle","getFileHandleContent","content","getFileEntityFileHandle","FileHandleAssociateType","FileEntity","failureCode","getFileHandleContentFromID","getFileHandleByIdPromise","getFileHandlePresignedUrlPromis","all","values","contentSize","cache","createACL","acl","submitToEvaluation","submission","etag","getEvaluationPermissions","evalId","getEvaluation","updateEvaluation","evaluation","createEvaluation","deleteEvaluation","getEvaluationRound","evalRoundId","getEvaluationRoundsList","evaluationRoundListRequest","createEvaluationRound","evaluationRound","evaluationId","updateEvaluationRound","deleteEvaluationRound","getEvaluationSubmissions","encodeURI","getOAuth2RequestDescription","oidcAuthRequest","hasUserAuthorizedOAuthClient","getOAuth2Client","clientId","consentToOAuth2Request","createFormGroup","getFormACL","formGroupId","updateFormACL","newAcl","createFormData","newFormData","updateFormData","formDataId","updatedFormData","deleteFormData","submitFormData","listFormData","listFormDataAsFormAdmin","acceptFormData","rejectFormData","formRejection","getProjectStatistics","getRestrictionInformation","getAccessRequirement","getAccessRequirementStatus","requirementId","getAllAccessRequirements","getAllOfPaginatedService","getAccessApproval","approvalId","postAccessApproval","accessApproval","getDownloadList","getDownloadOrder","zipFileName","baseURL","fn","existsMoreData","results","deleteDownloadListFiles","deleteDownloadList","updateTable","tableUpdateRequest","getTransformSqlWithFacetsRequest","transformSqlWithFacetsRequest","createPersonalAccessToken","accessTokenGenerationRequest","getPersonalAccessTokenRecords","nextPageToken","deletePersonalAccessToken","accessTokenId","Login","props","authenticationReceiptKey","state","email","errorMessage","hasLoginInFailed","isSignedIn","handleChange","handleLogin","getLoginFailureView","onGoogleSignIn","event","target","currentTarget","value","newState","this","setState","clickEvent","preventDefault","SynapseClient","setItem","className","googleRedirectUrl","authUrl","authorizationUrl","theme","googleTheme","onClick","GoogleIcon","ButtonContent","marginRight","alt","src","onSubmit","autoComplete","placeholder","onChange","React","Uploader","inputOpenFileRef","showOpenFileDlg","current","click","files","handleFilesChanged","finishedProcessingOneFile","incrementedFilesUploadedCount","filesUploadedCount","isStillUploading","totalFilesToUploadCount","isUploading","successfullyUploaded","handleUploadError","selectorFiles","Array","from","forEach","newFileEntity","parentId","parentContainerId","entityLookupRequest","entityName","existingEntity","updateEntityFile","fileUploadComplete","isCreate","ref","display","multiple","marginLeft","rel","FileContentDownloadUploadDemo","updateFileContent","targetEntity","fileContent","isLoading","newFileContent","Blob","handleContentChange","targetEntityId","Plot","createPlotlyComponent","Plotly","months","StatisticsPlot","fetchPlotlyData","isLoaded","plotData","getTrace","traceName","stats","orientation","markerColor","trace","x","y","marker","color","hovertemplate","statPoint","statPointDate","Date","rangeStart","getUTCMonth","getUTCFullYear","filesCount","showPlot","title","xtitle","ytitle","isHorizontal","xaxistype","showlegend","layout","barmode","hovermode","xaxis","yaxis","traces","fileDownloads","fileUploads","config","displayModeBar","displaylogo","modeBarButtonsToRemove","useResizeHandler","testDownloadSpeed","cachedSpeedExpireTime","cachedSpeed","getTime","Number","startMs","now","toString","ICON_STATE","usePrevious","useRef","useEffect","useCompare","val","AccessApprovalCheckMark","isCompleted","faCheck","faLock","getUserProfileWithProfilePicAttached","principalIds","withProfilePic","filter","profilePicureFileHandleId","fileHandleList","matchingPersonIndex","findIndex","el","clientPreSignedURL","getUserProfileWithProfilePic","userProfile","UserProfileAttachment","firstElement","COLORS","getColor","userName","hashedUserName","reduce","prevHash","currVal","charCodeAt","abs","hash","library","add","faCircle","UserCardSmall","img","hideText","hideTooltip","link","extraSmall","linkLocation","label","displayName","firstName","lastName","position","imgClassName","backgroundImage","data-for","data-tip","delayShow","multiline","whiteSpace","UserCardContextMenu","menuActions","aria-labelledby","menuAction","index","callback","field","listStyle","onKeyPress","svg","viewBox","UserCardLarge","isCertified","summary","industry","CertifiedUserIcon","faEllipsisV","faCopy","ToastMessage","show","autohide","classNames","timeout","enter","exit","UserCardMedium","htmlDivRef","copyToClipboard","createElement","setAttribute","left","appendChild","select","execCommand","removeChild","showModal","toggleContextMenu","_event","isContextMenuOpen","pageClick","addEventListener","removeEventListener","isLarge","hideEmail","disableLink","isValidated","company","validatedUserProfileTooltipId","mediumCard","tabIndex","place","effect","ValidatedProfileIcon","IconCopy","outline","fixedWidth","padding","border","backgroundColor","UserCard","aliasData","principalId","userProfileAtRender","preSignedURLAtRender","propsForChild","Bookmarks","renderBookmarks","matchedGroup","copyFootnotes","String","footnotes","regex","output","exec","isBeforeLastElement","dangerouslySetInnerHTML","__html","SynapseImage","getSynapseFiles","synapseId","fileResults","WikiAttachment","params","align","altText","scale","alignLowerCase","faLongArrowAltUp","faLongArrowAltDown","CardFooter","renderRowValue","columnName","match","DOI_REGEX","data-search-handle","renderRows","isDesktop","kv","hideClass","isShowMoreOn","toggleShowMore","updatePredicate","innerWidth","secondaryLabelLimit","valuesFiltered","hasMoreValuesThanLimit","Infinity","isHeader","margin","ChipContainer","chipsFormatted","chips","Project","clipPath","defaultIcons","data-icon","Data2Svg","DNA_TwoSvg","studyActiveSvg","studyCompleteSvg","clipRule","transform","organizationsSvg","personSvg","mouseSvg","mask-type","maskUnits","stroke","chart2Svg","fileSvg","Icon","iconOptions","cssClass","iconSet","datasetIconClass","COLOR_PALETTE_EVEN","COLOR_PALETTE_ODD","getColorPallette","colorPalleteSelection","textColors","colorPalette","textColor","HeaderCard","subTitle","description","iconValue","isAlignToLeftNav","descriptionLinkConfig","rgbIndex","descriptionElement","querySelector","useState","docTitle","getAttribute","docDescription","markdown","borderTop","marginTop","unCamelCase","str","facetAliases","toUpperCase","FileHandleLink","showDownloadIcon","tableEntityConcreteType","rowId","tableId","displayValue","isFileView","TableEntity","SYNAPSE_REGX","renderValueOrMultiValue","selectColumns","columnModels","strList","selectedColumnOrUndefined","find","columnType","renderLabel","args","labelLink","isMarkdown","renderInline","URLColumnName","wrapValueWithParens","GenericCard","getCutoff","previewText","summarySplit","trim","hasClickedShowMore","renderTitle","titleSearchHandle","getTitleParams","renderLongDescription","renderShortDescription","titleLink","schema","matchColumnName","indexInData","genericCardSchema","titleLinkConfig","labelLinkConfig","genericCardSchemaDefined","titleColumnModel","titleColumnType","linkValue","secondaryLabels","keyValue","showFooter","marginBottom","stubTitleSearchHandle","descriptionSubTitle","ColumnType","FILEHANDLEID","fontSize","cursor","GROUP_BY_REGEX","isGroupByInSql","sql","test","generateTokenUsingOperator","literal","operator","usedMatchForLike","substring","matchForHas","getWhereInsertIndex","tokens","existingWhereIndex","targetIndex","insertConditionsFromSearchParams","isQueryWrapperKey","startsWith","searchParamKeys","Object","keys","lexer","tokenize","foundIndex","whereClauseIndex","indexAfterWhereClause","splice","searchParamsLen","unshift","formatSQLFromParser","dotIndex","synId","synIdWithVersion","newSql","parser","synIdWithBackticks","parseEntityIdFromSqlStatement","matches","substr","resultToJson","headerColumns","rowColumns","row","column","cellIndex","SynapsePlot","queryData","widgetparamsMapped","horizontal","j","rowValues","SynapseVideo","video","setVideo","videoUrl","setVideoUrl","videoWidth","videoHeight","videoId","vimeoId","videoKey","oggSynapseId","mp4SynapseId","webmSynapseId","getVideo","RenderVideo","controls","SignInButton","ClientError","loginError","accessDenied","ErrorBanner","synapseClientError","jsError","stringError","isSynapseClientError","message","isError","isString","Alert","dismissible","variant","transition","TOC_CLASS","1","2","3","4","5","6","md","markdownit","html","MarkdownSynapse","markupRef","markdownitSynapse","init_markdown_it","markdownitSub","markdownitSup","markdownitCentertext","markdownitSynapseHeading","markdownitSynapseTable","markdownitStrikethroughAlt","markdownitContainer","markdownitEmphasisAlt","markdownitInlineComments","markdownitBr","use","markdownitMath","fileHandles","handleLinkClicks","renderMarkdown","recursiveRender","processMath","getWikiAttachments","getWikiPageMarkdown","renderWidget","renderSynapseButton","renderSynapseImage","renderVideo","renderSynapsePlot","renderSynapseTOC","createHTML","addBookmarks","addIdsToReferenceWidgets","addIdsToTocWidgets","genericElement","tagName","anchor","referenceNumber","goTo","scrollIntoView","behavior","block","inline","idOfContent","initText","render","sanitizeHtml","allowedAttributes","button","div","h1","h2","h3","h4","h5","h6","li","ol","span","table","th","thead","ul","allowedTags","querySelectorAll","element","textContent","katex","throwOnError","resetFootnotes","footnotesHtml","wikiPage","referenceCount","tocIdCount","curTocId","markup","DOMParser","parseFromString","nodeType","Node","TEXT_NODE","ELEMENT_NODE","HTMLElement","widgetParams","processHTMLWidgetMapping","attributes","attribute","item","childNodes","xml","escapedOneToXmlSpecialMap","originalMarkup","decodedWidgetParams","decodeXml","questionIndex","widgetType","keyPair","decodeURIComponent","reactKey","renderUserBadge","buttonClasses","highlight","role","elements","p1","p2","p3","p4","data-anchor","prevProps","bookmarks","AcceptedRequirements","user","accessRequirement","accessRequirementStatus","showButton","onHide","isHide","setIsHide","propsIsApproved","isApproved","setIsApproved","acceptButtonText","SUPPORTED_ACCESS_REQUIREMENTS","ManagedACTAccessRequirement","ACTAccessRequirement","gotoSynapseAccessRequirementPage","termsOfUse","actContactInfo","isTermsOfUse","TermsOfUseAccessRequirement","isActContactInfo","isActOrTermsOfUse","wikiPageId","ownerObjectId","ownerObjectType","isManagedActAr","accessApprovalRequest","submitterId","accessorId","ApprovalState","APPROVED","SelfSignAccessRequirementComponent","setWikiPage","userBundle","setUserBundle","setIsLoading","wikiPageRequirment","certificationOrVerification","bundle","getSelfSignAccessData","isCertifiedUserRequired","isValidatedProfileRequired","isVerified","TermsOfUseAccessRequirementComponent","wikiPageRequirement","getTermsOfUseData","ManagedACTAccessRequirementComponent","wikipageRequirement","getManagedACTAccessData","ACTAccessRequirementComponent","getACTAccessData","UserProfileTemplate","entityHeaderTemplate","versionLabel","benefactorId","createdOn","modifiedOn","createdBy","modifiedBy","getEntityHeaderItems","lookupList","newData","notFound","targetId","notFoundPlaceholders","getUserProfileItems","useGetInfoFromIds","setData","idProp","storageKey","curList","incomingList","newValues","uniq","without","saveToSessionStorage","dataInStorage","sessionStorage","dataInStorageAsObjectArr","dataObject","useDeepCompareEffect","newIds","newReferences","newReferencesChunks","chunk","totalData","oldData","concat","getData","faFile","GoogleCloudFileHandleEnum","isARUnsupported","SelfSignAccessRequirement","AccessRequirementList","accessRequirementFromProps","renderAsModal","accessRequirements","setAccessRequirements","setUser","entityHeaderProps","shouldUpdateData","entityInformation","sortAccessRequirementByCompletion","requirements","statuses","req","accessRequirementStatuses","requirementsAndStatuses","accessRequirementId","sortedRequirementsAndStatuses","sortBy","reqAndStatus","sortedAccessRequirements","getAccessRequirements","Boolean","Header","closeButton","Title","Body","Fragment","renderAccessRequirement","animation","centered","scrollable","faUnlockAlt","faDatabase","FileHandleDownloadTypeEnum","GIGABYTE_SIZE","getDownloadTypeForFileHandle","isInDownloadList","Accessible","TooLarge","GoogleCloudFileHandle","ExternalCloudFile","implementsExternalFileHandleInterface","ExternalFileLink","HasAccess","refresh","forceRefresh","isGettingEntityInformation","isGettingRestrictionInformation","errorOnGetRestrictionInformation","updateStateFileHandleAccessBlocked","fileHandleDownloadType","AccessBlockedByACL","AccessBlockedToAnonymous","entityVersionNumber","hasOwnProperty","NoFileHandle","restrictionInformation","restrictableObjectType","RestrictableObjectType","objectId","finally","renderIconHelper","iconProp","classColor","renderIcon","downloadType","hasUnmetAccessRequirement","faLink","handleGetAccess","set_arPropsFromHasAccess","displayAccessRequirement","renderARsLink","restrictionLevel","linkText","RestrictionLevel","OPEN","tooltipText","AccessBlockedByRestriction","viewARsLink","iconContainer","ev","isTrusted","MouseEvent","bubbles","Demo","entityFormRef","searchParamsProps","showMarkdown","onRunDownloadSpeedTest","URLSearchParams","search","submitForm","userFormDataSynId","estimatedDownloadBytesPerSecond","forceSamePage","toFixed","getFieldIndex","getNextPageOfData","cloneDeep","hasMoreData","sufixes","calculateFriendlyFileSize","bytes","floor","pow","Dataset","handleLinkClick","datasetName","tumorType","diseaseFocus","fundingAgency","fileCount","fileSize","Funder","organizationName","organizationPath","website","logoHref","logo","websiteDisplayName","charAt","showOrgLink","isOnOrgPath","getIsValueSelected","lastFacetSelection","curFacetSelection","facetValue","isSelected","selector","SELECT_SINGLE_FACET","faPlus","CheckboxGroup","facetColumnResult","showAllFacets","isAllFilterSelected","facetValues","sort","b","count","facetColumnResultValues","curColor","backgroundClass","applyChanges","checked","childrenView","getComponentSearchHashId","componentName","componentIndex","updateUrlWithNewSearchParam","stringifiedQuery","searchString","componentSearchHashId","searchFragment","patchSearchString","newURL","pathname","history","pushState","getQueryRequestFromLink","searchParamValue","getSearchParamValue","getSearchParamValueFromUrl","initQueryRequest","QueryWrapper","executeInitialQueryRequest","executeQueryRequest","getLastQueryRequest","getInitQueryRequest","isLoadingNewData","chartSelectionIndex","isAllFilterSelectedForFacet","loadNowStarted","lastQueryRequest","topLevelControlsState","showColumnFilter","showFacetFilter","showFacetVisualization","showSearchBar","showDownloadConfirmation","showColumnSelectDropdown","isColumnSelected","selectedRowIndices","loadNow","DeepLinkingUtils","clonedQueryRequest","encodeURIComponent","shouldDeepLink","facet","facets","facetType","isAllFalse","isAllTrue","isByDefaultSelected","visibleColumnCount","update","lockedFacet","childrenWithProps","child","queryWrapperChildProps","removeLockedFacetData","loadingCusrorClass","getStoredEntityHeaders","getStoredUserProfiles","ElementWithTooltip","tooltipTrigger","image","idForToolTip","callbackFn","imageColor","tooltipVisualProps","darkTheme","iconComponent","tooltipTriggerContents","svgImg","getTooltipTriggerContents","outerChild","cloneElement","aria-label","Dropdown","Toggle","Checkbox","propsChecked","isSelectAll","setChecked","FacetFilterHeader","isCollapsed","iconPlus","iconMinus","valueToLabel","profiles","entityHeaders","profile","eh","faArrowLeft","EnumFacetFilter","columnModel","onClear","containerAs","collapsed","isShowAll","setIsShowAll","setIsCollapsed","isShowDropdown","setIsShowDropdown","showSearch","setShowSearch","searchTerm","setSearchText","filteredSet","setFilteredSet","timer","textInput","selectedValuesMap","userProfiles","isDropdown","focus","inputValue","filtered","obj","handleTextInputFilterEvent","visibleItemsCount","formatFacetValuesForDisplay","isChecked","clearTimeout","onToggle","_show","metadata","source","Menu","Range","setError","initialValues","min","moment","format","setValues","isValid","flexWrap","callBackFn","handleAppyChanges","errorText","Handle","domain","handle","percent","getHandleProps","aria-valuemin","aria-valuemax","aria-valuenow","Track","getTrackProps","Tick","tick","getInitialValues","RadioValuesEnum","RangeSlider","doUpdateOnApply","stringArrToNumArr","inputArr","numDomain","ticksCount","maxTickCount","step","handleSliderChange","getRailProps","handles","right","tracks","ticks","RadioGroup","option","convertFacetToFacetColumnValuesRequest","patchRequestFacets","changedFacet","lastRequest","selections","selectedFacets","changedFacetIndex","isEmptyValuesFacet","applyChangesToValuesColumn","onChangeFn","facetName","applyMultipleChangesToValuesColumn","facetNameMap","facetNames","applyChangesToRangeColumn","columnMin","columnMax","convertFacetColumnRangeRequest","loadingScreen","loading","DownloadDetails","downloadSpeed","numFiles","numBytes","speed","timeEstimateInSeconds","friendlyTime","duration","humanize","isInactive","iconClassName","faClock","faDownload","faFolder","CreatePackage","setZipFileName","alert","setAlert","bulkFileDownloadResponse","setBulkFileDownloadResponse","updateDownloadList","createPackageHandler","fileNameWithZipExtension","downloadOrder","zipFileFormat","ZipFileFormat","Flat","downloadPackageHandler","resultZipFileHandleId","fileSummary","numfilesDownloaded","FileDownloadStatus","SUCCESS","faTrash","StatusEnum","DownloadListTable","batchFileResult","isDescending","sortedColumn","setSortedColumn","arPropsFromHasAccess","fileBeingDeleted","setFileBeingDeleted","listUpdatedCallback","ownerIdsFromHeaders","ownerIdsFromFileHandles","ownerIds","fetchData","useCallback","filesToDownload","batchFileRequest","referenceCall","batchFile","clearDownloadList","deleteFileFromList","sortColumn","itemA","itemB","sortDownLoadList","getFileHandleInfo","fileResult","fileRes","requestedFile","fileName_A","createdBy_A","createdOn_A","contentSize_A","fileName_B","createdBy_B","createdOn_B","contentSize_B","direction","localeCompare","striped","responsive","faSortAmountDown","faSortAmountUp","isCurrentlyBeingDeletedClass","canDownload","onHideModal","dialogClassName","top","zIndex","addToDownload","ERROR","StatusConstruct","INFO","infoText","closeText","PROCESSING","LOADING_INFO","SIGNED_OUT","DownloadConfirmation","fnClose","onExportTable","showDownloadList","setShowDownloadList","getFilesInformation","queryBundleRequestSizeInformation","queryCount","sumFileSizes","durationSeconds","downloadEstimate","onCancel","triggerAddToDownload","getContent","faListAlt","faTable","faThList","faArchive","EntityTypeIcon","splitType","iconType","getIconTypeForEntity","EntityLink","entityHeader","getUniqueEntities","mapIdToHeader","indicies","distinctEntities","Set","colIndex","getColumnIndiciesWithType","columnTypes","columnsOfTypeEntity","csvOption","formSchemaArray","properties","oneOf","const","Contents","items","enum","uniqueItems","formSchemaUIArray","faTimes","ModalDownload","handleSubmit","handleDownloadSetup","onDownload","formData","fileType","contents","separator","writeHeader","includeRowIdAndRowVersion","downloadFromTableRequest","csvTableDescriptor","resultsFileHandleId","onClose","Modal","uiSchema","backgroundSize","EMPTY_HEADER","SORT_STATE","RESIZER_OPTIONS","resizeMode","partialRefresh","liveDrag","headerOnly","faQuestionCircle","ProgrammaticOptions","ColumnSingleValueFilterOperator","faCaretDown","faCaretUp","faSearch","Search","searchFormRef","radioFormRef","handleClickOutsideForm","contains","didUpdateRanLast","searchText","searchable","colName","searchableColumnModels","isSupportedColumn","lastQueryRequestDeepClone","additionalFilters","indexOfColumn","columnSingleValueQueryFilter","LIKE","ENTITYID","DATE","DATE_LIST","USERID","isSupportedColumnAndInProps","some","defaultColumn","searchColumns","model","in","addEscapeCharacters","escapedSearchText","faAngleLeft","faAngleRight","faExternalLinkAlt","StepStateEnum","NavActionEnum","ExternalFileHandleLink","assertIsFileEntity","externalFileHandle","assertIsExternalFileHandle","externalURL","bodyText","isSubmitted","StepsSideNav","nonChildSteps","stepList","getIcon","isExcluded","isStatic","isSubmit","iconDef","flip","faBan","COMPLETED","faCheckCircle","faExclamationCircle","getItemClass","isInProgress","liClassName","getListItem","isWizard","isRenderChild","renderStepName","inProgress","final","excluded","static","itemClass","onStepChange","flex","isWizardMode","stepChildId","childStep","NavButtons","previousButton","previousStepIds","steps","currentStep","canGoBack","onNavAction","PREVIOUS","faChevronLeft","nextButton","NEXT","faChevronRight","saveButton","disabled","isFormSubmitted","SAVE","NextStepLink","nextStep","nextStepId","DataDebug","myData","hidden","findLabel","regex1","propArr","labelFromSchema","labelFromUi","arrayLabelFromSchema","arrayLabelFromUiSchema","indexMatch","first","isNaN","parseInt","SummaryTable","flatFormData","flatData","flatten","object","flattenedObject","prefix","isArray","isObject","prevVal","isDate","boundary","screen","order","getFlatData","prevScreenId","line","print","WarningModal","copy","confirmCopy","onConfirm","confirmButtonVariant","callbackArgs","Footer","Button","SynapseForm","excludeWarningText","excludeWarningHeader","unsavedDataWarning","formRef","formDivRef","navAction","NONE","extraErrors","isNewForm","getFirstStep","onUnload","hasUnsavedChanges","returnValue","setupBeforeUnloadListener","_setIncludedPropInFormDataNonWizard","currentState","schemaScreens","currentStateFormData","_setIncludedPropInFormDataWizard","firstStepId","newStateData","getSchema","pick","getNextStepId","rules","default","engine","Engine","run","events","next","moveStep","previousStack","errorSchema","isMoveForwardInWizardMode","currentStepState","TODO","included","saveStepState","hasValidated","doShowErrors","goPrevious","previousStepId","pop","isSubmitScreen","currentIndex","isUndefined","triggerAction","onSave","runCustomValidation","submit","triggerStepChange","GO_TO_STEP","onError","VALIDATE","modifiedSteps","setStepStatusForFailedValidation","scrollTo","isLoadingSaved","errors","currentSchemaProperties","stepsWithError","trimStart","property","stepsInCurrentSchema","performAction","showExcludeStateWarningModal","stepId","isUpdateFlattenedData","modalContext","action","toggleExcludeStep","arguments","isExclude","prevState","stp","formDataUpdated","renderNotification","SAVE_SUCCESS","SUBMIT_SUCCESS","PROGRESS","renderTextForStaticScreen","renderOptionalFormSubheader","renderHelpToggle","showHelp","checkedIcon","uncheckedIcon","offColor","allSteps","validationRules","acc","allRules","rule","paramProp","newRule","allowUndefinedFacts","stack","transformErrors","extraError","SUBMIT","parentPath","lastIndexOf","renderErrorListTemplate","currentLis","propPath","arrayLabelFromUI","renderTransformedErrorObject","stringToElementForProp","srcObject","k","navSchema","doShowHelp","shouldUpdate","callbackStatus","isSuccess","back","isEqual","hasError","when","formTitle","liveValidate","handleOnChange","form","showErrorList","ErrorList","screenId","formClass","SynapseFormWrapper","getFileEntityData","entityContent","newError","getFileEntityDataDereferenced","$RefParser","dereference","derefContent","formSchemaVersion","uiSchemaVersion","navSchemaVersion","submitted","fileData","promises","formSchemaEntityId","formUiSchemaEntityId","formNavSchemaEntityId","configData","formSchema","formUiSchema","formNavSchema","finishedProcessing","notification","saveToFile","createOrUpdateFormDataFile","fileContentsBlob","newFileHandleId","fileNamePath","errorTitle","isReadyToDisplayForm","ERROR_CRITICAL","renderLoader","Heading","renderUnauthenticatedView","SynapseFormSubmissionGrid","modalTitle","listingText","subhead","noRecords","modalCopy","getTypeFileListing","groupId","cleanUpName","filterByState","fileList","page","getMore","fileListType","statusList","requestFilter","SUBMITTED","IN_PROGRESS","getUserFileListing","deleteFile","setModalConfirmationState","renderLoading","renderSubmissionsTable","pathpart","textSource","tableTitleRow","viewMore","dataFileRecord","calendar","aria-hidden","submissionStatus","isShowInfoModal","faPhone","renderSubmissionsTables","NoSubmissionsIcon","itemNoun","WAITING_FOR_SUBMISSION","SUBMITTED_WAITING_FOR_REVIEW","ACCEPTED","REJECTED","withRouter","to","setDownloadList","showDownloadModal","setShowDownloadModal","positionClass","useGetQueryResultBundle","queryResultBundle","useShowDesktop","breakpoint","usedBreakpoint","showDesktop","setShowDesktop","listener","updatedValue","ExpandableContent","isExpanded","setIsExpanded","ExpectedColumns","ResourcesDesktop","setIndex","curIndex","ResourcesMobile","Resources","nameIndex","NAME","wikiIndex","WIKI","rssParser","Parser","getLayout","dotPlotLayoutConfig","layoutOptions","plot_bgcolor","showticklabels","range","maxValue","visible","isXAxis","isLegend","l","r","pad","zeroline","showgrid","showline","createArrayOfGroupValues","getPlotDataPoints","graphItems","plotStyle","ySorted","markerSymbols","isFakeData","groups","group","defaultSymbols","markerFill","markerLine","symbol","markerSize","DotPlot","optionsConfig","layoutConfig","xMax","pointsTypes","noop","getBarPlotDataPoints","colors","defaultColors","isTop","paper_bgcolor","hoverlabel","font","BarPlot","scrollZoom","editable","autosizable","dragmode","legend","xanchor","fixedrange","linecolor","autotick","tickcolor","gridcolor","automargin","barLayoutConfig","xField","yField","groupField","whereClause","infoField","getTotalsByProp","prop","resultObject","res","getClickTargetData","swap","pointData","points","fadeColors","opacity","ThemesPlot","dotPlot","topBarPlot","sideBarPlot","tooltipProps","onPointClick","dotPlotYAxisLabel","setIsLoaded","dotPlotQueryData","setDotPlotQueryData","topBarPlotData","setTopBarQueryData","sideBarPlotData","setSideBarQueryData","dotPlotData","xLabels","yLabelsForDotPlot","xLabelsForTopBarPlot","xMaxForDotPlot","xMaxForSideBarPlot","topBarPlotDataSorted","totalsByDotPlotY","orderBy","staticPlot","float","countLabel","UserCardList","userProfileMap","priorListOfIds","newEntries","firstNameIndex","lastNameIndex","institutionIndex","fauxUserProfilesList","manuallyExtractData","fauxUserProfileIndex","fauxUserProfile","VisibilityObserver","getObserverChildren","isVisible","renderInView","renderOutOfView","hasBeenInView","onVisibilityChange","onEnterView","onLeaveView","rootMargin","tag","Arrow","DesktopProps","clickToChange","infinite","slidesPerScroll","slidesPerPage","arrowLeft","arrowRight","addArrowClickHandler","breakpoints","1100","MobileProps","dots","Carousel","setCurrentIndex","styledChildren","Children","childClass","refreshMode","noPlaceholder","ProjectViewCard","projectName","projectDescription","domProps","ProjectViewCarousel","projects","setProjects","queryError","entityIdIndex","ID","displayNameColumnIndex","PROJECT_DISPLAY_NAME","descriptionColumnIndex","PROJECT_DESCRIPTION","nameColumnIndex","imageColumnIndex","PROJECT_IMAGE","imageFileName","project","wikiPageKey","imageUrl","LIMIT_TYPE_DISPLAY_NAME","DAILY","WEEKLY","MONTHLY","EvaluationStatus","PLANNED","SelectionCriteriaPill","innerText","facetWithSelection","onRemove","selectedMin","selectedMax","filterValue","endsWith","TotalQueryResults","unitDescription","frontText","parentLoading","showNotch","total","setTotal","facetsWithSelection","setFacetsWithSelection","getEnumFacetsWithSelections","transformEnumFacetsForSelectionDisplay","lookUpEntityHeaders","lookUpUserProfiles","filteredEnumWithSelectedValuesOnly","getDisplayValueForEntityColumn","getDisplayValueUserIdColumn","selectedValue","cloneLastQueryRequest","rangeFacetsWithSelections","enumFacetsWithSelections","rangeFacetsForDisplay","enumFacetsForDisplay","calculateTotal","removeFacetSelection","ANY","searchSelectionCriteriaPill","removeSearchQuerySelection","selectedFacet","CardContainer","showBarChart","cards","showViewMore","showViewMoreButton","userIdColumnIndex","listIds","rowData","renderCard","CardContainerLogic","defaultState","prevSearchParams","currentSearchParams","hasSearchParamsChanged","hasTokenChanged","hasSqlChanged","sqlUsed","sqlOperator","queryRequestWithoutCount","totalResultsNoFacet","defaultProps","circleSvg","brainSvg","resilienceadSvg","CardContainerLogicDemo","Program","inputRef","toggleDropdown","setDropdownIndex","dropdownIndex","highlightText","submittedSearchText","isQueryWrapperMenuChild","originalColor","searchItem","outerHTML","searchItemView","textElement","innerHTML","RegExp","clearSearchText","lastQueryRequestDeepCopy","lastSearchedFacet","searchableItem","fieldStyle","alignItems","curFacetDisplayText","lastSearchedFacetDisplayText","usedUnitDescription","borderRight","justifyContent","Item","onSelect","hintText","SearchDemo","cardConfiguration","contributor","diagnosis","ModalDownloadDemo","onOpen","ShowDownloadDemo","FormServicesIntegrationDemo","listMyFormData","formGroup","myFormDataList","listFormAdminFormData","formAdminFormDataList","onReadFormDataFileHandleContents","onCreateFormGroup","onCreateFormData","onUpdateFormData","onSubmitFormData","TokenContext","Consumer","rejectionMessage","WidgetDemo","check1","setCheck1","check2","setCheck2","optionValue","setOptionValue","rangeNumberValue","setRangeNumberValue","toISOString","rangeDateValue","setRangeDateValue","rangeSliderValue","setRangeSliderValue","CSBC","tools","datasets","publications","AccessRequirementDemo","setDisplayAccessRequirement","currentWindowLocation","setInputValue","TemplateComponent","userId","setCount","TemplateComponentDemo","SynapsePlotDemo","SynapseHomepage","homepage_1","organizeResearch","getCredit","collaborate","dataSharing","rImage","python","terminal","java","maxWidth","flexDirection","App","exact","component","updatedState","getSession","getSessionCalled","signedInState","notSignedInState","Provider","basename","process","logoSvg","renderLoginAndSignout","Playground","ReactDOM","getElementById","module","exports","EntityColumnType","ACCESS_TYPE","FileDownloadCode","AssertionError","ExternalFileHandleConcreteTypeEnum","ExternalFileHandle"],"mappings":"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mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,gBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,mBAGIiS,GAA8B,CAClC,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,gBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,iBACA,iBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,kBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,gBACA,kBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,kBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,kBACA,iBACA,iBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBACA,mBEjNK,SAASC,GACdhd,EACAJ,GAEA,IAAIqd,EAAwB,GACtBC,EAAa,GACf7lB,GAAU,EAEV2I,EAAQ,IAAM,GAChBid,EAAwBH,GACxBzlB,EAAiB,EAAR2I,IAETid,EAAwBF,GACxB1lB,EAAuB,GAAb2I,EAAQ,IAKpB,IAFA,IAAMmd,EAAyB,GAEtBlb,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","file":"static/js/main.40ed69f5.chunk.js","sourcesContent":["export enum BackendDestinationEnum {\n  REPO_ENDPOINT,\n  PORTAL_ENDPOINT,\n}\n\n// Encodes the portal and repo service destinations\ntype EndpointObject = {\n  REPO: string\n  PORTAL: string\n}\n\nexport const PRODUCTION_ENDPOINT_CONFIG: EndpointObject = {\n  REPO: 'https://repo-prod.prod.sagebase.org/',\n  PORTAL: 'https://www.synapse.org/',\n}\n\n// Given an endpoint will return the specific stack object\nexport const getEndpoint = (endpoint: BackendDestinationEnum): string => {\n  let endpoint_config = PRODUCTION_ENDPOINT_CONFIG\n  // @ts-ignore if overriding endpoint config\n  if (window.SRC && window.SRC.OVERRIDE_ENDPOINT_CONFIG) {\n    // @ts-ignore\n    endpoint_config = window.SRC && window.SRC.OVERRIDE_ENDPOINT_CONFIG\n  }\n  const { PORTAL, REPO } = endpoint_config\n  if (!PORTAL || !REPO) {\n    throw Error('Error failed to specify endpoints, cannot make call')\n  }\n  if (endpoint === BackendDestinationEnum.PORTAL_ENDPOINT) {\n    return PORTAL\n  }\n  return REPO\n}\n","import * as React from 'react'\n\nexport default ({ children, icon }: { children: any; icon?: any }) => {\n  const style: React.CSSProperties = {\n    paddingRight: 10,\n    fontWeight: 500,\n    paddingLeft: icon ? 0 : 10,\n    paddingTop: 10,\n    paddingBottom: 10,\n    textAlign: 'center',\n    width: '100%',\n  }\n  return <span style={style}>{children}</span>\n}\n","import * as React from 'react'\n// @ts-nocheck\nexport default ({ active }: { active: boolean }) => (\n  <div\n    style={{\n      background: active ? '#fff' : '#eee',\n      paddingTop: 7,\n      paddingRight: 10,\n      paddingBottom: 4,\n      paddingLeft: 10,\n      borderRadius: 2,\n    }}\n  >\n    <svg width=\"18\" height=\"18\" xmlns=\"http://www.w3.org/2000/svg\">\n      <g fill=\"#000\" fillRule=\"evenodd\">\n        <path\n          // tslint:disable-next-line:max-line-length\n          d=\"M9 3.48c1.69 0 2.83.73 3.48 1.34l2.54-2.48C13.46.89 11.43 0 9 0 5.48 0 2.44 2.02.96 4.96l2.91 2.26C4.6 5.05 6.62 3.48 9 3.48z\"\n          fill=\"#EA4335\"\n        />\n        <path\n          // tslint:disable-next-line:max-line-length\n          d=\"M17.64 9.2c0-.74-.06-1.28-.19-1.84H9v3.34h4.96c-.1.83-.64 2.08-1.84 2.92l2.84 2.2c1.7-1.57 2.68-3.88 2.68-6.62z\"\n          fill=\"#4285F4\"\n        />\n        <path\n          // tslint:disable-next-line:max-line-length\n          d=\"M3.88 10.78A5.54 5.54 0 0 1 3.58 9c0-.62.11-1.22.29-1.78L.96 4.96A9.008 9.008 0 0 0 0 9c0 1.45.35 2.82.96 4.04l2.92-2.26z\"\n          fill=\"#FBBC05\"\n        />\n        <path\n          // tslint:disable-next-line:max-line-length\n          d=\"M9 18c2.43 0 4.47-.8 5.96-2.18l-2.84-2.2c-.76.53-1.78.9-3.12.9-2.38 0-4.4-1.57-5.12-3.74L.97 13.04C2.45 15.98 5.48 18 9 18z\"\n          fill=\"#34A853\"\n        />\n        <path fill=\"none\" d=\"M0 0h18v18H0z\" />\n      </g>\n    </svg>\n  </div>\n)\n","import { UserCardSize } from '../containers/UserCard'\n\n/** QueryBundleRequest constants */\nexport const BUNDLE_MASK_QUERY_RESULTS: number = 1\nexport const BUNDLE_MASK_QUERY_COUNT: number = 2\nexport const BUNDLE_MASK_QUERY_SELECT_COLUMNS: number = 4\nexport const BUNDLE_MASK_QUERY_MAX_ROWS_PER_PAGE: number = 8\nexport const BUNDLE_MASK_QUERY_COLUMN_MODELS: number = 16\nexport const BUNDLE_MASK_QUERY_FACETS: number = 32\nexport const BUNDLE_MASK_SUM_FILES_SIZE_BYTES: number = 64\n/** EntityBundle constants */\nexport const ENTITY_BUNDLE_MASK_ENTITY: number = 1\nexport const ENTITY_BUNDLE_MASK_ANNOTATIONS: number = 2\nexport const ENTITY_BUNDLE_MASK_PERMISSIONS: number = 4\nexport const ENTITY_BUNDLE_MASK_ENTITY_PATH: number = 8\nexport const ENTITY_BUNDLE_MASK_HAS_CHILDREN: number = 32\nexport const ENTITY_BUNDLE_MASK_ACL: number = 64\nexport const ENTITY_BUNDLE_MASK_FILE_HANDLES: number = 2048\nexport const ENTITY_BUNDLE_MASK_TABLE_DATA: number = 4096\nexport const ENTITY_BUNDLE_MASK_ROOT_WIKI_ID: number = 8192\nexport const ENTITY_BUNDLE_MASK_BENEFACTOR_ACL: number = 16384\nexport const ENTITY_BUNDLE_MASK_DOI: number = 32768\nexport const ENTITY_BUNDLE_MASK_FILE_NAME: number = 65536\nexport const ENTITY_BUNDLE_MASK_THREAD_COUNT: number = 131072\nexport const ENTITY_BUNDLE_MASK_RESTRICTION_INFORMATION: number = 262144\n/** Row Types  */\nexport const STUDY: string = 'study'\n/** Unannotated value for query */\nexport const VALUE_NOT_SET = 'org.sagebionetworks.UNDEFINED_NULL_NOTSET'\n// for study icons\nexport const STUDY_ACTIVE: string = 'study active'\nexport const STUDY_COMPLETE: string = 'study complete'\nexport const DATABASE: string = 'database'\nexport const DATASET: string = 'dataset'\nexport const AMP_CONSORTIUM: string = 'AMP_Consortium'\nexport const FUNDER: string = 'funder'\nexport const PUBLICATION: string = 'publication'\nexport const TOOL: string = 'tool'\nexport const GENERIC_CARD: string = 'GENERIC_CARD'\nexport const COMPUTATIONAL: string = 'computational'\nexport const EXPERIMENTAL: string = 'experimental'\nexport const CLINICAL: string = 'clinical'\nexport const PROJECT: string = 'Project'\nexport const GRANT: string = 'Grant'\nexport const ORGANIZATION: string = 'ORGANIZATION'\nexport const PERSON: string = 'PERSON'\nexport const MOUSE: string = 'MOUSE'\nexport const EXPLORE: string = 'explore'\nexport const SEARCH: string = 'search'\nexport const CHART: string = 'chart'\nexport const FILTER: string = 'filter'\nexport const DOWNLOAD: string = 'download'\nexport const EXPAND: string = 'expand'\nexport const COLLAPSE: string = 'collapse'\nexport const CLOSE: string = 'close'\nexport const SORTUP: string = 'sortup'\nexport const SORTDOWN: string = 'sortdown'\nexport const SETTINGS: string = 'settings'\nexport const COLUMNS: string = 'columns'\nexport const COLUMNSDARK: string = 'columnsdark'\nexport const VERTICAL_DOTS: string = 'verticaldots'\nexport const FILE: string = 'file'\nexport const CHART2: string = 'chart2'\n\nexport const PAGE_SIZE: number = 25\n// For User Profile Cards\nexport const SMALL_USER_CARD: UserCardSize = 'SMALL USER CARD'\nexport const MEDIUM_USER_CARD: UserCardSize = 'MEDIUM USER CARD'\nexport const LARGE_USER_CARD: UserCardSize = 'LARGE USER CARD'\nexport const SEPERATOR = 'SEPERATOR'\nexport const AUTHENTICATED_USERS = 'AUTHENTICATED_USERS'\n// For internal testing only\nexport const _TIME_DELAY = 75\nexport const SRC_SIGN_IN_CLASS = 'SRC-SIGN-IN-CLASS'\n\n// UserBundle constants\nexport const USER_BUNDLE_MASK_USER_PROFILE = 0x1\nexport const USER_BUNDLE_MASK_ORCID = 0x2\nexport const USER_BUNDLE_MASK_VERIFICATION_SUBMISSION = 0x4\nexport const USER_BUNDLE_MASK_IS_CERTIFIED = 0x8\nexport const USER_BUNDLE_MASK_IS_VERIFIED = 0x10\nexport const USER_BUNDLE_MASK_IS_ACT_MEMBER = 0x2\n// SessionStorage keys for info from ids\nexport const USER_PROFILE_STORAGE_KEY = 'INFO_FROM_IDS_USER_PROFILE'\nexport const ENTITY_HEADER_STORAGE_KEY = 'INFO_FROM_IDS_ENTITY_HEADER'\n","import { DownloadList } from '../synapseTypes'\n\nexport const DOWNLOAD_LIST_CHANGE_EVENT = 'DOWNLOAD_LIST_UPDATED_EVENT'\n\nexport const dispatchDownloadListChangeEvent = (\n  downloadList: DownloadList | undefined,\n) => {\n  const downloadEvent = new CustomEvent(DOWNLOAD_LIST_CHANGE_EVENT, {\n    detail: downloadList,\n  })\n  document.dispatchEvent(downloadEvent)\n}\n","import SparkMD5 from 'spark-md5'\nimport { BackendDestinationEnum, getEndpoint } from './functions/getEndpoint'\nimport {\n  AccessCodeResponse,\n  AccessControlList,\n  AddFilesToDownloadListRequest,\n  AddFilesToDownloadListResponse,\n  AddPartResponse,\n  AsyncJobId,\n  BatchFileRequest,\n  BatchFileResult,\n  BatchPresignedUploadUrlRequest,\n  BatchPresignedUploadUrlResponse,\n  BulkFileDownloadRequest,\n  BulkFileDownloadResponse,\n  DownloadFromTableRequest,\n  DownloadFromTableResult,\n  DownloadList,\n  DownloadOrder,\n  Entity,\n  EntityHeader,\n  EntityLookupRequest,\n  FileEntity,\n  FileHandle,\n  FileHandleAssociation,\n  FileHandleResults,\n  FileUploadComplete,\n  FormChangeRequest,\n  FormData,\n  FormGroup,\n  FormRejection,\n  ListRequest,\n  ListResponse,\n  LoginResponse,\n  MultipartUploadRequest,\n  MultipartUploadStatus,\n  OAuthClientPublic,\n  OAuthConsentGrantedResponse,\n  OIDCAuthorizationRequest,\n  OIDCAuthorizationRequestDescription,\n  PaginatedResults,\n  ProjectFilesStatisticsRequest,\n  ProjectFilesStatisticsResponse,\n  QueryBundleRequest,\n  QueryResultBundle,\n  QueryTableResults,\n  ReferenceList,\n  RestrictionInformationRequest,\n  RestrictionInformationResponse,\n  Submission,\n  SynapseVersion,\n  UserBundle,\n  UserGroupHeaderResponsePage,\n  UserProfile,\n  WikiPage,\n  AccessRequirement,\n  AccessApproval,\n  EntityId,\n  WikiPageKey,\n  ObjectType,\n  AccessRequirementStatus,\n  FileHandleAssociateType,\n  Evaluation,\n  EvaluationRound,\n} from './synapseTypes/'\nimport UniversalCookies from 'universal-cookie'\nimport { dispatchDownloadListChangeEvent } from './functions/dispatchDownloadListChangeEvent'\nimport { TableUpdateTransactionRequest } from './synapseTypes/Table/TableUpdate'\nimport {\n  TransformSqlWithFacetsRequest,\n  SqlTransformResponse,\n} from './synapseTypes/Table/TransformSqlWithFacetsRequest'\nimport { SynapseConstants } from '.'\nimport { EvaluationRoundListRequest } from './synapseTypes/Evaluation/EvaluationRoundListRequest'\nimport { EvaluationRoundListResponse } from './synapseTypes/Evaluation/EvaluationRoundListResponse'\nimport { AccessTokenGenerationRequest } from './synapseTypes/AccessToken/AccessTokenGenerationRequest'\nimport { AccessTokenGenerationResponse } from './synapseTypes/AccessToken/AccessTokenGenerationResponse'\nimport { AccessTokenRecordList } from './synapseTypes/AccessToken/AccessTokenRecord'\nimport { UserEvaluationPermissions } from './synapseTypes/Evaluation/UserEvaluationPermissions'\n\nconst cookies = new UniversalCookies()\n\n// TODO: Create JSON response types for all return types\nexport const IS_OUTSIDE_SYNAPSE_ORG = window.location.hostname\n  .toLowerCase()\n  .includes('.synapse.org')\n  ? false\n  : true\n\nexport const SESSION_TOKEN_COOKIE_KEY =\n  'org.sagebionetworks.security.user.login.token'\n\n// Max size file that we will allow the caller to read into memory (5MB)\nconst MAX_JS_FILE_DOWNLOAD_SIZE = 5242880\nexport const AUTH_PROVIDER = 'GOOGLE_OAUTH_2_0'\n// This corresponds to the Synapse-managed S3 storage location:\nexport const SYNAPSE_STORAGE_LOCATION_ID = 1\nexport const getRootURL = () => {\n  const portString = window.location.port ? `:${window.location.port}` : ''\n  return `${window.location.protocol}//${window.location.hostname}${portString}/`\n}\n\n/**\n * Waits t number of milliseconds\n *\n * @export\n * @param {number} t milliseconds\n * @returns after t milliseconds\n */\nexport function delay(t: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve.bind(null, {}), t)\n  })\n}\n\ntype SynapseError = {\n  reason: string\n}\n\nexport interface SynapseClientError extends Error {\n  reason: string\n  status: number\n}\n\n/*\n  0 - no internet connection\n  429 - too many concurrent requests\n  500>= - any status code of 500 or more is a server side error\n*/\nconst RETRY_STATUS_CODES = [0, 429, 500, 502, 503, 504]\n\nconst fetchWithExponentialTimeout = <T>(\n  url: RequestInfo,\n  options: RequestInit,\n  delayMs: number = 1000,\n): Promise<T> => {\n  return fetch(url, options)\n    .then(resp => {\n      return resp\n        .text()\n        .then(text => {\n          // try to parse it as json\n          try {\n            const json = JSON.parse(text)\n            return resp.ok ? Promise.resolve(json) : Promise.reject<T>(json)\n          } catch (error) {\n            // failed to parse json, return text\n            return resp.ok ? Promise.resolve(text) : Promise.reject<T>(text)\n          }\n        })\n        .catch((error: SynapseError) => {\n          if (resp.ok) {\n            // possible empty response\n            return Promise.resolve({\n              reason: error,\n              status: resp.status,\n            })\n          }\n          if (error.reason && resp.status) {\n            // successful return from server but invalid call\n            return Promise.reject({\n              ...error,\n              status: resp.status,\n            })\n          }\n          // This occurs if the response is not ok and does not have json or is empty\n          return Promise.reject({\n            reason: error,\n            status: resp.status,\n          })\n        })\n    })\n    .catch(error => {\n      if (error.status && RETRY_STATUS_CODES.indexOf(error.status) !== -1) {\n        return delay(delayMs).then(() => {\n          return fetchWithExponentialTimeout<T>(url, options, delayMs * 2)\n        })\n      } else {\n        return Promise.reject(error)\n      }\n    })\n}\n\nexport const doPost = <T>(\n  url: string,\n  requestJsonObject: any,\n  sessionToken: string | undefined,\n  initCredentials: RequestInit['credentials'],\n  endpoint: BackendDestinationEnum,\n): Promise<T> => {\n  const options: RequestInit = {\n    body: JSON.stringify(requestJsonObject),\n    headers: {\n      Accept: '*/*',\n      'Access-Control-Request-Headers': 'sessiontoken',\n      'Content-Type': 'application/json',\n    },\n    method: 'POST',\n    mode: 'cors',\n    credentials: initCredentials,\n  }\n  if (sessionToken) {\n    // @ts-ignore\n    options.headers.sessionToken = sessionToken\n  }\n  const usedEndpoint = getEndpoint(endpoint)\n  return fetchWithExponentialTimeout<T>(usedEndpoint + url, options)\n}\nexport const doGet = <T>(\n  url: string,\n  sessionToken: string | undefined,\n  initCredentials: RequestInit['credentials'],\n  endpoint: BackendDestinationEnum,\n) => {\n  const options: RequestInit = {\n    headers: {\n      Accept: '*/*',\n      'Access-Control-Request-Headers': 'sessiontoken',\n    },\n    method: 'GET',\n    mode: 'cors',\n    credentials: initCredentials,\n  }\n  if (sessionToken) {\n    // @ts-ignore\n    options.headers.sessionToken = sessionToken\n  }\n  const usedEndpoint = getEndpoint(endpoint)\n  return fetchWithExponentialTimeout<T>(usedEndpoint + url, options)\n}\n\nexport const doDelete = (\n  url: string,\n  sessionToken: string | undefined,\n  initCredentials: RequestInit['credentials'],\n  endpoint: BackendDestinationEnum,\n) => {\n  const options: RequestInit = {\n    headers: {\n      Accept: '*/*',\n      'Access-Control-Request-Headers': 'sessiontoken',\n    },\n    method: 'DELETE',\n    mode: 'cors',\n    credentials: initCredentials,\n  }\n  if (sessionToken) {\n    // @ts-ignore\n    options.headers.sessionToken = sessionToken\n  }\n  const usedEndpoint = getEndpoint(endpoint)\n  return fetchWithExponentialTimeout<void>(usedEndpoint + url, options)\n}\n\nexport const doPut = <T>(\n  url: string,\n  requestJsonObject: any,\n  sessionToken: string | undefined,\n  initCredentials: RequestInit['credentials'],\n  endpoint: BackendDestinationEnum,\n): Promise<any> => {\n  const options: RequestInit = {\n    body: JSON.stringify(requestJsonObject),\n    headers: {\n      Accept: '*/*',\n      'Access-Control-Request-Headers': 'sessiontoken',\n      'Content-Type': 'application/json',\n    },\n    method: 'PUT',\n    mode: 'cors',\n    credentials: initCredentials,\n  }\n  if (sessionToken) {\n    // @ts-ignore\n    options.headers.sessionToken = sessionToken\n  }\n  const usedEndpoint = getEndpoint(endpoint)\n  return fetchWithExponentialTimeout<T>(usedEndpoint + url, options)\n}\n\nexport const putRefreshSessionToken = (sessionToken: string) => {\n  return doPut(\n    '/auth/v1/session',\n    { sessionToken },\n    undefined,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport const getVersion = (): Promise<SynapseVersion> => {\n  return doGet<SynapseVersion>(\n    '/repo/v1/version',\n    undefined,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * https://docs.synapse.org/rest/POST/download/list/add/async/start.html\n */\n//Start an asynchronous job to add files to a user's download list.\nexport const addFilesToDownloadList = (\n  request: AddFilesToDownloadListRequest,\n  sessionToken: string,\n  updateParentState?: any,\n) => {\n  return doPost<AsyncJobId>(\n    `file/v1/download/list/add/async/start`,\n    request,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n    .then((resp: AsyncJobId) => {\n      const requestUrl = `file/v1/download/list/add/async/get/${resp.token}`\n      return getAsyncResultFromJobId<AddFilesToDownloadListResponse>(\n        requestUrl,\n        sessionToken,\n        updateParentState,\n      ).then(data => {\n        dispatchDownloadListChangeEvent(data.downloadList)\n        return data\n      })\n    })\n    .catch((error: any) => {\n      throw error\n    })\n}\n\n/**\n * https://docs.synapse.org/rest/POST/entity/id/table/download/csv/async/start.html\n */\nexport const getDownloadFromTableRequest = (\n  request: DownloadFromTableRequest,\n  sessionToken: string | undefined = undefined,\n  updateParentState?: any,\n) => {\n  return doPost<AsyncJobId>(\n    `/repo/v1/entity/${request.entityId}/table/download/csv/async/start`,\n    request,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n    .then((resp: AsyncJobId) => {\n      const requestUrl = `/repo/v1/entity/${request.entityId}/table/download/csv/async/get/${resp.token}`\n      return getAsyncResultFromJobId<DownloadFromTableResult>(\n        requestUrl,\n        sessionToken,\n        updateParentState,\n      )\n    })\n    .catch((error: any) => {\n      throw error\n    })\n}\n\n/**\n * https://docs.synapse.org/rest/GET/fileHandle/handleId.html\n * Get a FileHandle using its ID.\n * Note: Only the user that created the FileHandle can access it directly.\n * @return FileHandle\n **/\nexport const getFileHandleById = (\n  handleId: string,\n  sessionToken: string | undefined = undefined,\n): Promise<FileHandle> => {\n  return doGet<FileHandle>(\n    `file/v1/fileHandle/${handleId}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * http://rest-docs.synapse.org/rest/GET/file/id.html\n * Get the actual URL of the file from with an associated object .\n * @return a short lived presignedURL to be redirected with\n **/\nexport const getActualFileHandleByIdURL = (\n  handleId: string,\n  sessionToken: string | undefined = undefined,\n  fileAssociateType: FileHandleAssociateType,\n  fileAssociateId: string,\n  redirect: boolean = true,\n) => {\n  // get the presigned URL for this file handle and open it in a new tab\n  doGet<string>(\n    `/file/v1/file/${handleId}?fileAssociateType=${fileAssociateType}&fileAssociateId=${fileAssociateId}&redirect=${redirect}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n    .then(url => {\n      window.open(url, '_blank')\n    })\n    .catch(err => {\n      console.error('Error on retrieving file handle url ', err)\n    })\n}\n\n/**\n * https://docs.synapse.org/rest/GET/fileHandle/handleId/url.html\n * Note: Only the user that created the FileHandle can use this method for download.\n * @return a short lived presignedURL to be redirected with\n **/\nexport const getFileHandleByIdURL = (\n  handleId: string,\n  sessionToken: string | undefined = undefined,\n) => {\n  // get the presigned URL for this file handle\n  return doGet<string>(\n    `file/v1/fileHandle/${handleId}/url?redirect=false`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport const getAsyncResultFromJobId = <T>(\n  urlRequest: string,\n  sessionToken: string | undefined = undefined,\n  updateParentState?: any,\n): Promise<T> => {\n  return doGet(\n    urlRequest,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n    .then((resp: any) => {\n      // is this the job status?\n      if (resp.jobState && resp.jobState !== 'FAILED') {\n        updateParentState &&\n          updateParentState({\n            asyncJobStatus: resp,\n          })\n        // still processing, wait for a second and try again\n        return delay(500).then(() => {\n          return getAsyncResultFromJobId<T>(\n            urlRequest,\n            sessionToken,\n            updateParentState,\n          )\n        })\n      }\n      // these must be the query results!\n      return resp\n    })\n    .catch(error => {\n      throw error\n    })\n}\n\n/**\n * http://docs.synapse.org/rest/POST/entity/id/table/query/nextPage/async/start.html\n * @param {*} queryBundleRequest\n * @param {*} sessionToken\n * @param {*} endpoint\n */\nexport const getQueryTableResults = (\n  queryBundleRequest: QueryBundleRequest,\n  sessionToken: string | undefined = undefined,\n  updateParentState?: any,\n): Promise<QueryResultBundle> => {\n  return doPost<AsyncJobId>(\n    `/repo/v1/entity/${queryBundleRequest.entityId}/table/query/async/start`,\n    queryBundleRequest,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n    .then(resp => {\n      return getAsyncResultFromJobId<QueryResultBundle>(\n        `/repo/v1/entity/${queryBundleRequest.entityId}/table/query/async/get/${resp.token}`,\n        sessionToken,\n        updateParentState,\n      )\n    })\n    .catch((error: any) => {\n      throw error\n    })\n}\n/**\n *  Run and return results from queryBundleRequest, queryBundle request must be of the\n *  form:\n *     {\n *        concreteType: String,\n *        query: {\n *           sql: String,\n *           partMask: Number\n *        }\n *     }\n * @param {*} queryBundleRequest\n * @param {*} [sessionToken=undefined]\n * @param {boolean} [onlyGetFacets=false] Specify if the query only needs facets and no\n * data-- (internally this limits the row count to 1 on the request)\n * @returns Full dataset from synapse table query\n */\n\nexport const getFullQueryTableResults = async (\n  queryBundleRequest: QueryBundleRequest,\n  sessionToken: string | undefined = undefined,\n): Promise<QueryResultBundle> => {\n  let data: QueryResultBundle\n  // get first page\n  let offset = 0\n  const { query, ...rest } = queryBundleRequest\n  const queryRequest: QueryBundleRequest = {\n    ...rest,\n    query: { ...query, offset: offset },\n    partMask:\n      queryBundleRequest.partMask |\n      SynapseConstants.BUNDLE_MASK_QUERY_MAX_ROWS_PER_PAGE,\n  }\n  let response = await getQueryTableResults(queryRequest, sessionToken)\n  data = response\n  // we are done if we return less than a max pagesize that the backend is willing to return.\n  let isDone =\n    response.queryResult.queryResults.rows.length < data.maxRowsPerPage!\n  offset += response.queryResult.queryResults.rows.length\n  queryRequest.query.limit = data.maxRowsPerPage // set the limit to the actual max rows per page\n\n  while (!isDone) {\n    queryRequest.query.offset = offset\n    // update the maxPageSize to the largest possible value after the first page is complete.  This is a no-op after the second page.\n\n    let response = await getQueryTableResults(queryRequest, sessionToken)\n    data.queryResult.queryResults.rows.push(\n      ...response.queryResult.queryResults.rows, // ... spread operator to push all elements on\n    )\n    isDone =\n      response.queryResult.queryResults.rows.length < queryRequest.query.limit!\n    offset += response.queryResult.queryResults.rows.length\n  }\n  return data\n}\n\n/**\n *  Log-in using the given username and password.  Will return a session token that must be used in\n *  authenticated requests.\n *  http://docs.synapse.org/rest/POST/login.html\n */\nexport const login = (\n  username: string,\n  password: string,\n  authenticationReceipt: string | null,\n  endpoint = BackendDestinationEnum.REPO_ENDPOINT,\n): Promise<LoginResponse> => {\n  return doPost(\n    '/auth/v1/login',\n    { username, password, authenticationReceipt },\n    undefined,\n    undefined,\n    endpoint,\n  )\n}\n/**\n * Get redirect url\n * https://docs.synapse.org/rest/POST/oauth2/authurl.html\n * @param {*} provider\n * @param {*} redirectUrl\n * @param {*} endpoint\n */\nexport const oAuthUrlRequest = (\n  provider: string,\n  redirectUrl: string,\n  endpoint = BackendDestinationEnum.REPO_ENDPOINT,\n) => {\n  return doPost(\n    '/auth/v1/oauth2/authurl',\n    { provider, redirectUrl },\n    undefined,\n    undefined,\n    endpoint,\n  )\n}\n/**\n * Get session token from SSO\n * https://docs.synapse.org/rest/POST/oauth2/session.html\n * @param {*} provider\n * @param {*} authenticationCode\n * @param {*} redirectUrl\n * @param {*} endpoint\n */\nexport const oAuthSessionRequest = (\n  provider: string,\n  authenticationCode: string | number,\n  redirectUrl: string,\n  endpoint: any = BackendDestinationEnum.REPO_ENDPOINT,\n) => {\n  return doPost(\n    '/auth/v1/oauth2/session',\n    { provider, authenticationCode, redirectUrl },\n    undefined,\n    undefined,\n    endpoint,\n  )\n}\n/**\n * Create an entity (Project, Folder, File, Table, View)\n * http://docs.synapse.org/rest/POST/entity.html\n */\nexport const createEntity = <T extends Entity>(\n  entity: T,\n  sessionToken: string | undefined,\n) => {\n  return doPost<T>(\n    '/repo/v1/entity',\n    entity,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n/**\n * Create a project with the given name.\n * http://docs.synapse.org/rest/POST/entity.html\n */\nexport const createProject = (\n  name: string,\n  sessionToken: string | undefined,\n): Promise<Entity> => {\n  return createEntity(\n    {\n      name,\n      concreteType: 'org.sagebionetworks.repo.model.Project',\n    },\n    sessionToken,\n  )\n}\n\n/**\n * Return this user's UserProfile\n * http://docs.synapse.org/rest/GET/userProfile.html\n */\nexport const getUserProfile = (sessionToken: string | undefined) => {\n  return doGet<UserProfile>(\n    '/repo/v1/userProfile',\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Return this user's UserProfile\n * http://docs.synapse.org/rest/GET/userProfile.html\n */\nexport const getUserProfileById = (\n  sessionToken: string | undefined,\n  ownerId: string,\n) => {\n  return doGet<UserProfile>(\n    `/repo/v1/userProfile/${ownerId}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Return this user's profile bundle\n * https://docs.synapse.org/rest/org/sagebionetworks/repo/model/UserBundle.html\n */\nexport const getUserBundle = (\n  id: string,\n  mask: number,\n  sessionToken: string | undefined,\n): Promise<UserBundle> => {\n  return doGet<UserBundle>(\n    `repo/v1/user/${id}/bundle?mask=${mask}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Return batch of user group headers\n * https://docs.synapse.org/rest/org/sagebionetworks/repo/model/UserGroupHeaderResponsePage.html\n */\nexport const getGroupHeadersBatch = (\n  ids: string[],\n  sessionToken: string | undefined,\n): Promise<UserGroupHeaderResponsePage> => {\n  return doGet<UserGroupHeaderResponsePage>(\n    `repo/v1/userGroupHeaders/batch?ids=${ids.join(',')}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport type UserProfileList = { list: UserProfile[] }\n/**\n * Return the User Profiles for the given list of user IDs\n * http://docs.synapse.org/rest/POST/userProfile.html\n */\nexport const getUserProfiles = (\n  list: string[],\n  sessionToken: string | undefined = undefined,\n): Promise<UserProfileList> => {\n  return doPost(\n    '/repo/v1/userProfile',\n    { list },\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Return the children (Files/Folders) of the given entity (Project or Folder).\n * http://docs.synapse.org/rest/POST/entity/children.html\n */\nexport const getEntityChildren = (\n  request: any,\n  sessionToken: string | undefined = undefined,\n) => {\n  return doPost(\n    '/repo/v1/entity/children',\n    request,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n/**\n * Retrieve an entityId for a given parent ID and entity name.\n * https://docs.synapse.org/rest/POST/entity/child.html\n */\nexport const lookupChildEntity = (\n  request: EntityLookupRequest,\n  sessionToken: string | undefined = undefined,\n) => {\n  return doPost<EntityId>(\n    '/repo/v1/entity/child',\n    request,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Get a batch of pre-signed URLs and/or FileHandles for the given list of FileHandleAssociations.\n * http://docs.synapse.org/rest/POST/fileHandle/batch.html\n */\nexport const getFiles = (\n  request: BatchFileRequest,\n  sessionToken: string | undefined = undefined,\n): Promise<BatchFileResult> => {\n  return doPost(\n    '/file/v1/fileHandle/batch',\n    request,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Get a batch of pre-signed URLs and/or FileHandles for the given list of FileHandleAssociations.\n * http://docs.synapse.org/rest/POST/fileHandle/batch.html\n */\nexport const getBulkFiles = (\n  bulkFileDownloadRequest: BulkFileDownloadRequest,\n  sessionToken: string | undefined = undefined,\n): Promise<BulkFileDownloadResponse> => {\n  return doPost<AsyncJobId>(\n    'file/v1/file/bulk/async/start',\n    bulkFileDownloadRequest,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n    .then((asyncJobId: AsyncJobId) => {\n      const urlRequest = `/file/v1/file/bulk/async/get/${asyncJobId.token}`\n      return getAsyncResultFromJobId<BulkFileDownloadResponse>(\n        urlRequest,\n        sessionToken,\n      )\n    })\n    .catch(err => {\n      console.error('Error on getBulkFiles ', err)\n      return err\n    })\n}\n/**\n * Bundled access to Entity and related data components.\n * An EntityBundle can be used to create, fetch, or update an Entity and associated\n * objects with a single web service request.\n * See SynapseClient.test.js for an example partsMask.\n * https://docs.synapse.org/rest/org/sagebionetworks/repo/model/Entity.html\n */\ntype GetEntity = <T extends Entity>(\n  sessionToken: string | undefined,\n  entityId: string | number,\n  versionNumber?: string,\n) => Promise<T>\n\nexport const getEntity: GetEntity = <T>(\n  sessionToken: string | undefined = undefined,\n  entityId: string | number,\n  versionNumber?: string,\n) => {\n  const url = versionNumber\n    ? `/repo/v1/entity/${entityId}/version/${versionNumber}`\n    : `/repo/v1/entity/${entityId}`\n  return doGet(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  ) as Promise<T>\n}\n\n/**\n * Get the EntityHeader for a list of references with a POST.\n * If any item in the batch fails (e.g., with a 404) it will be EXCLUDED in the result set.\n * https://docs.synapse.org/rest/POST/entity/header.html\n */\nexport const getEntityHeader = (\n  references: ReferenceList,\n  sessionToken: string | undefined = undefined,\n) => {\n  return doPost(\n    'repo/v1/entity/header',\n    { references },\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  ) as Promise<PaginatedResults<EntityHeader>>\n}\n\nexport const updateEntity = <T extends Entity>(\n  entity: T,\n  sessionToken: string | undefined = undefined,\n): Promise<T> => {\n  const url = `/repo/v1/entity/${entity.id}`\n  return doPut(\n    url,\n    entity,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport const deleteEntity = (\n  sessionToken: string | undefined = undefined,\n  entityId: string | number,\n) => {\n  const url = `/repo/v1/entity/${entityId}`\n  return doDelete(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Bundled access to Entity and related data components.\n * An EntityBundle can be used to create, fetch, or update an Entity and\n * associated objects with a single web service request.\n * See SynapseClient.test.js for an example partsMask.\n * http://docs.synapse.org/rest/GET/entity/id/version/versionNumber/bundle.html\n */\nexport const getEntityBundleForVersion = (\n  entityId: string | number,\n  version: string | number | undefined,\n  partsMask: string | number,\n  sessionToken: string | undefined = undefined,\n) => {\n  let url = `/repo/v1/entity/${entityId}`\n  if (version) {\n    url += `/version/ + ${version}`\n  }\n  url += `/bundle?mask= ${partsMask}`\n  return doGet(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  ) as Promise<any>\n}\n\n/**\n * Get a corresponding string value of ObjectType:\n **/\nfunction getObjectTypeToString(key: ObjectType) {\n  return ObjectType[key]\n}\n\n/**\n * Get Wiki page contents, call is of the form:\n * http://docs.synapse.org/rest/GET/entity/ownerId/wiki.html\n */\nexport const getEntityWiki = (\n  sessionToken: string | undefined,\n  ownerId: string | undefined,\n  wikiId: string | undefined = '',\n  objectType: ObjectType = ObjectType.ENTITY,\n) => {\n  const objectTypeString = getObjectTypeToString(objectType!)\n\n  const url = `/repo/v1/${objectTypeString?.toLocaleLowerCase()}/${ownerId}/wiki/${wikiId}`\n  return doGet<WikiPage>(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Returns synapse user favorites list given their session token\n * http://docs.synapse.org/rest/GET/favorite.html\n */\nexport const getUserFavorites = (sessionToken: string | undefined) => {\n  const url = 'repo/v1/favorite?offset=0&limit=200'\n  return doGet(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  ) as Promise<any>\n}\n\n/**\n * Get the user's list of teams they are on\n *\n * @param {*} id ownerID of the synapse user see - http://docs.synapse.org/rest/org/sagebionetworks/repo/model/UserProfile.html\n */\nexport const getUserTeamList = (\n  sessionToken: string | undefined,\n  id: string | number,\n) => {\n  const url = `repo/v1/user/${id}/team?offset=0&limit=200`\n  return doGet(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n/**\n * Get the user's list of teams they are on\n *\n * @param {*} id ownerID of the synapse user see -https://docs.synapse.org/rest/GET/teamMembers/id.html\n * @param {*} fragment (optional) a prefix of the user's first or last name or email address (optional)\n * @param {*} limit    (optional) the maximum number of members to return (default 10, max limit 50)\n * @param {*} offset   (optional) the starting index of the returned results (default 0)\n *\n */\nexport const getTeamList = (\n  sessionToken: string | undefined,\n  id: string | number,\n  fragment: string = '',\n  limit: number = 10,\n  offset: number = 0,\n) => {\n  const url = `repo/v1/teamMembers/${id}?limit=${limit}&offset=${offset}${\n    fragment ? `&fragment=${fragment}` : ''\n  }`\n  return doGet(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * https://rest-docs.synapse.org/rest/GET/entity/ownerId/wikikey.html\n * Get the root WikiPageKey for an Entity.\n * Note: The caller must be granted the ACCESS_TYPE.READ permission on the owner.\n * @return WikiPageKey\n **/\nexport const getWikiPageKeyForEntity = (\n  sessionToken: string | undefined,\n  ownerId: string | number,\n): Promise<WikiPageKey> => {\n  const url = `repo/v1/entity/${ownerId}/wikikey`\n  return doGet<WikiPageKey>(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * https://rest-docs.synapse.org/rest/GET/access_requirement/ownerId/wikikey.html\n * Get the root WikiPageKey for an Access Requirement.\n * Note: The caller must be granted the ACCESS_TYPE.READ permission on the owner.\n * @return WikiPageKey\n **/\nexport const getWikiPageKeyForAccessRequirement = (\n  sessionToken: string | undefined,\n  ownerId: string | number,\n): Promise<WikiPageKey> => {\n  const url = `repo/v1/access_requirement/${ownerId}/wikikey`\n  return doGet<WikiPageKey>(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport const getWikiAttachmentsFromEntity = (\n  sessionToken: string | undefined,\n  id: string | number,\n  wikiId: string | number,\n  objectType: ObjectType = ObjectType.ENTITY,\n): Promise<FileHandleResults> => {\n  const objectTypeString = getObjectTypeToString(objectType!)\n  const url = `repo/v1/${objectTypeString.toLocaleLowerCase()}/${id}/wiki2/${wikiId}/attachmenthandles`\n  return doGet(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\nexport const getWikiAttachmentsFromEvaluation = (\n  sessionToken: string | undefined,\n  id: string | number,\n  wikiId: string | number,\n) => {\n  const url = `repo/v1/evaluation/${id}/wiki/${wikiId}/attachmenthandles`\n  return doGet(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport const getPresignedUrlForWikiAttachment = (\n  sessionToken: string | undefined,\n  id: string | number,\n  wikiId: string | number,\n  fileName: string,\n  objectType: ObjectType = ObjectType.ENTITY,\n): Promise<string> => {\n  const objectTypeString = getObjectTypeToString(objectType!)\n  const url = `repo/v1/${objectTypeString.toLocaleLowerCase()}/${id}/wiki2/${wikiId}/attachment?fileName=${fileName}&redirect=false`\n  return doGet(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n/**\n * Set the session token cookie.  Note that this will only succeed if your app is running on\n * a .synapse.org subdomain.\n *\n * @param {*} token Session token.  If undefined, then call should instruct the browser to delete the cookie.\n */\nexport const setSessionTokenCookie = async (\n  token: string | undefined,\n  sessionCallback: Function,\n) => {\n  if (IS_OUTSIDE_SYNAPSE_ORG) {\n    if (!token) {\n      cookies.remove(SESSION_TOKEN_COOKIE_KEY, { path: '/' })\n      // See - https://github.com/reactivestack/cookies/issues/189\n      await delay(100)\n    } else {\n      // set's cookie in session storage\n      cookies.set(SESSION_TOKEN_COOKIE_KEY, token, {\n        // expires in a day\n        maxAge: 60 * 60 * 24,\n        path: '/',\n      })\n    }\n    sessionCallback()\n  } else {\n    // will set cookie in the http header\n    doPost(\n      'Portal/sessioncookie',\n      { sessionToken: token },\n      undefined,\n      'include',\n      BackendDestinationEnum.PORTAL_ENDPOINT,\n    )\n      .then(_ => {\n        sessionCallback()\n      })\n      .catch(err => {\n        console.error('Error on setting session token ', err)\n      })\n  }\n}\n/**\n * Get the current session token from a cookie.  Note that this will only succeed if your app is running on\n * a .synapse.org subdomain.\n */\nexport const getSessionTokenFromCookie = async () => {\n  if (IS_OUTSIDE_SYNAPSE_ORG) {\n    return cookies.get(SESSION_TOKEN_COOKIE_KEY)\n  }\n  return doGet<string>(\n    'Portal/sessioncookie',\n    undefined,\n    'include',\n    BackendDestinationEnum.PORTAL_ENDPOINT,\n  )\n}\n\nexport const getPrincipalAliasRequest = (\n  sessionToken: string | undefined,\n  alias: string,\n  type: string,\n) => {\n  const url = 'repo/v1/principal/alias'\n  return doPost(\n    url,\n    { alias, type },\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/*\nDuring SSO login, the authorization provider (Google) will\nsend the user back to the portal with an authorization code,\nwhich can be exchanged for a Synapse user session.\nThis function should be called whenever the root App is initialized\n(to look for this code parameter and complete the round-trip).\n*/\nexport const detectSSOCode = () => {\n  const redirectURL = getRootURL()\n  // 'code' handling (from SSO) should be preformed on the root page, and then redirect to original route.\n  let code: URL | null | string = new URL(window.location.href)\n  // in test environment the searchParams isn't defined\n  const { searchParams } = code\n  if (!searchParams) {\n    return\n  }\n  code = searchParams.get('code')\n  if (code) {\n    oAuthSessionRequest(\n      AUTH_PROVIDER,\n      code,\n      `${redirectURL}?provider=${AUTH_PROVIDER}`,\n      BackendDestinationEnum.REPO_ENDPOINT,\n    )\n      .then((synToken: any) => {\n        setSessionTokenCookie(synToken.sessionToken, () => {\n          // go back to original route after successful SSO login\n          const originalUrl = localStorage.getItem('after-sso-login-url')\n          localStorage.removeItem('after-sso-login-url')\n          if (originalUrl) {\n            window.location.replace(originalUrl)\n          }\n        })\n      })\n      .catch((err: any) => {\n        if (err.status === 404) {\n          // Synapse account not found, send to registration page\n          window.location.replace('https://www.synapse.org/#!RegisterAccount:0')\n        }\n        console.error('Error on sso sign in ', err)\n      })\n  }\n}\n\nexport const signOut = (sessionCallback: Function) => {\n  setSessionTokenCookie(undefined, sessionCallback)\n}\n\n/**\n * Upload file.  Note that this currently only supports Synapse storage (Sage s3 bucket)\n * @param sessionToken\n * @param file\n * @param endpoint\n */\nexport const uploadFile = (\n  sessionToken: string | undefined,\n  filename: string,\n  file: Blob,\n) => {\n  return new Promise<FileUploadComplete>(\n    (fileUploadResolve, fileUploadReject) => {\n      const partSize: number = Math.max(5242880, file.size / 10000)\n      const request: MultipartUploadRequest = {\n        contentType: file.type,\n        fileName: filename,\n        fileSizeBytes: file.size,\n        partSizeBytes: partSize,\n        storageLocationId: SYNAPSE_STORAGE_LOCATION_ID,\n      }\n      calculateMd5(file).then((md5: string) => {\n        request.contentMD5Hex = md5\n        startMultipartUpload(\n          sessionToken,\n          filename,\n          file,\n          request,\n          fileUploadResolve,\n          fileUploadReject,\n        )\n      })\n    },\n  )\n}\n\nconst calculateMd5 = (fileBlob: File | Blob): Promise<string> => {\n  // code taken from md5 example from library\n  return new Promise((resolve, reject) => {\n    const blobSlice = File.prototype.slice,\n      file = fileBlob,\n      chunkSize = 2097152, // Read in chunks of 2MB\n      chunks = Math.ceil(file.size / chunkSize),\n      spark = new SparkMD5.ArrayBuffer(),\n      fileReader = new FileReader()\n    let currentChunk = 0\n\n    fileReader.onload = function (e) {\n      console.log('read chunk nr', currentChunk + 1, 'of', chunks)\n      spark.append(fileReader.result as ArrayBuffer) // Append array buffer\n      currentChunk++\n\n      if (currentChunk < chunks) {\n        loadNext()\n      } else {\n        console.log('finished loading')\n        const md5: string = spark.end()\n        console.info('computed hash', md5) // Compute hash\n        resolve(md5)\n      }\n    }\n\n    fileReader.onerror = function () {\n      console.warn('oops, something went wrong.')\n      reject(fileReader.error)\n    }\n\n    const loadNext = () => {\n      const start = currentChunk * chunkSize,\n        end = start + chunkSize >= file.size ? file.size : start + chunkSize\n\n      fileReader.readAsArrayBuffer(blobSlice.call(file, start, end))\n    }\n    loadNext()\n  })\n}\n\nconst processFilePart = (\n  partNumber: number,\n  multipartUploadStatus: MultipartUploadStatus,\n  sessionToken: string | undefined,\n  fileName: string,\n  file: Blob,\n  request: MultipartUploadRequest,\n  fileUploadResolve: (fileUpload: FileUploadComplete) => void,\n  fileUploadReject: (reason: any) => void,\n) => {\n  if (multipartUploadStatus.clientSidePartsState![partNumber - 1]) {\n    // no-op. this part has already been processed!\n    return\n  }\n\n  const uploadId = multipartUploadStatus.uploadId\n  const presignedUploadUrlRequest: BatchPresignedUploadUrlRequest = {\n    uploadId,\n    contentType: 'application/octet-stream', // each part is binary\n    partNumbers: [partNumber],\n  }\n  const presignedUrlUrl = `/file/v1/file/multipart/${uploadId}/presigned/url/batch`\n  doPost<BatchPresignedUploadUrlResponse>(\n    presignedUrlUrl,\n    presignedUploadUrlRequest,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  ).then(async (presignedUrlResponse: BatchPresignedUploadUrlResponse) => {\n    const presignedUrl =\n      presignedUrlResponse.partPresignedUrls[0].uploadPresignedUrl\n    // calculate the byte range\n    const startByte = (partNumber - 1) * request.partSizeBytes\n    let endByte = partNumber * request.partSizeBytes - 1\n    if (endByte >= request.fileSizeBytes) {\n      endByte = request.fileSizeBytes - 1\n    }\n    const fileSlice = file.slice(\n      startByte,\n      endByte + 1,\n      presignedUploadUrlRequest.contentType,\n    )\n    await uploadFilePart(\n      presignedUrl,\n      fileSlice,\n      presignedUploadUrlRequest.contentType,\n    )\n    // uploaded the part.  calculate md5 of the part and add the part to the upload\n    calculateMd5(fileSlice).then((md5: string) => {\n      const addPartUrl = `/file/v1/file/multipart/${uploadId}/add/${partNumber}?partMD5Hex=${md5}`\n      doPut(\n        addPartUrl,\n        undefined,\n        sessionToken,\n        undefined,\n        BackendDestinationEnum.REPO_ENDPOINT,\n      ).then((addPartResponse: AddPartResponse) => {\n        if (addPartResponse.addPartState === 'ADD_SUCCESS') {\n          // done with this part!\n          multipartUploadStatus.clientSidePartsState![partNumber - 1] = true\n          checkUploadComplete(\n            multipartUploadStatus,\n            fileName,\n            sessionToken,\n            fileUploadResolve,\n            fileUploadReject,\n          )\n        } else {\n          // retry after a brief delay\n          delay(1000).then(() => {\n            processFilePart(\n              partNumber,\n              multipartUploadStatus,\n              sessionToken,\n              fileName,\n              file,\n              request,\n              fileUploadResolve,\n              fileUploadReject,\n            )\n          })\n        }\n      })\n    })\n  })\n}\nexport const checkUploadComplete = (\n  status: MultipartUploadStatus,\n  fileHandleName: string,\n  sessionToken: string | undefined,\n  fileUploadResolve: (fileUpload: FileUploadComplete) => void,\n  fileUploadReject: (reason: any) => void,\n) => {\n  // if all client-side parts are true (uploaded), then complete the upload and get the file handle!\n  if (\n    status.clientSidePartsState!.every(v => {\n      return v\n    })\n  ) {\n    const url = `/file/v1/file/multipart/${status.uploadId}/complete`\n    doPut(\n      url,\n      undefined,\n      sessionToken,\n      undefined,\n      BackendDestinationEnum.REPO_ENDPOINT,\n    )\n      .then((newStatus: MultipartUploadStatus) => {\n        // success!\n        fileUploadResolve({\n          fileHandleId: newStatus.resultFileHandleId,\n          fileName: fileHandleName,\n        })\n      })\n      .catch(error => {\n        fileUploadReject(error)\n      })\n  }\n}\nconst uploadFilePart = async (\n  presignedUrl: string,\n  file: any,\n  contentType: string,\n) => {\n  // TODO: could try using axios to get upload progress, then update the client-side part state (change to numbers from 0-1)\n  // This would give progress for the single file (across all parts).\n  // The parent would still need to figure out progress (for the total file set).\n  await fetch(presignedUrl, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': contentType,\n    },\n    body: file,\n  })\n}\nexport const startMultipartUpload = (\n  sessionToken: string | undefined,\n  fileName: string,\n  file: Blob,\n  request: MultipartUploadRequest,\n  fileUploadResolve: (fileUpload: FileUploadComplete) => void,\n  fileUploadReject: (reason: any) => void,\n) => {\n  const url = 'file/v1/file/multipart'\n  doPost<MultipartUploadStatus>(\n    url,\n    request,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n    .then(async (status: MultipartUploadStatus) => {\n      // started the upload\n      // keep track of the part state client-side\n      const clientSidePartsState: boolean[] = status.partsState\n        .split('')\n        .map(bit => bit === '1')\n      status.clientSidePartsState = clientSidePartsState\n      for (let i = 0; i < clientSidePartsState.length; i = i + 1) {\n        if (!clientSidePartsState[i]) {\n          // upload this part.  note that partNumber is always the index+1\n          await processFilePart(\n            i + 1,\n            status,\n            sessionToken,\n            fileName,\n            file,\n            request,\n            fileUploadResolve,\n            fileUploadReject,\n          )\n        }\n      }\n      // in case there is no upload work to do!\n      checkUploadComplete(\n        status,\n        fileName,\n        sessionToken,\n        fileUploadResolve,\n        fileUploadReject,\n      )\n    })\n    .catch(error => {\n      fileUploadReject(error)\n    })\n}\n\n/**\n * Return the content of the file (latest version) associated to the given FileEntity.\n * Be aware that if the target file size > 5MB, this method will throw an error.\n * @param sessionToken\n * @param fileEntity\n * @param endpoint\n */\nexport const getFileEntityContent = (\n  sessionToken: string,\n  fileEntity: FileEntity,\n): Promise<string> => {\n  // get the presigned URL, download the data, and send that back (via resolve())\n  return new Promise((resolve, reject) => {\n    const fileHandleAssociationList = [\n      {\n        associateObjectId: fileEntity.id,\n        associateObjectType: 'FileEntity',\n        fileHandleId: fileEntity.dataFileHandleId,\n      },\n    ]\n    const request: any = {\n      includeFileHandles: true,\n      includePreSignedURLs: true,\n      includePreviewPreSignedURLs: false,\n      requestedFiles: fileHandleAssociationList,\n    }\n    getFiles(request, sessionToken)\n      .then((data: BatchFileResult) => {\n        const presignedUrl: string = data.requestedFiles[0].preSignedURL!\n        const fileHandle: FileHandle = data.requestedFiles[0].fileHandle!\n        return getFileHandleContent(fileHandle, presignedUrl).then(\n          (content: string) => {\n            resolve(content)\n          },\n        )\n      })\n      .catch(err => {\n        reject(err)\n      })\n  })\n}\n\n/**\n * Return the FileHandle of the file associated to the given FileEntity.\n * * @param fileEntity: FileEntity\n * @param sessionToken\n * @param endpoint\n */\nexport const getFileEntityFileHandle = (\n  fileEntity: FileEntity,\n  sessionToken?: string,\n): Promise<FileHandle> => {\n  return new Promise((resolve, reject) => {\n    const fileHandleAssociationList: FileHandleAssociation[] = [\n      {\n        associateObjectId: fileEntity.id!,\n        associateObjectType: FileHandleAssociateType.FileEntity,\n        fileHandleId: fileEntity.dataFileHandleId,\n      },\n    ]\n    const request: BatchFileRequest = {\n      includeFileHandles: true,\n      includePreSignedURLs: false,\n      includePreviewPreSignedURLs: false,\n      requestedFiles: fileHandleAssociationList,\n    }\n    getFiles(request, sessionToken)\n      .then((data: BatchFileResult) => {\n        if (\n          data.requestedFiles.length > 0 &&\n          data.requestedFiles[0].fileHandle\n        ) {\n          return resolve(data.requestedFiles[0].fileHandle)\n        } else {\n          // not found, or not allowed to access\n          reject(data.requestedFiles[0].failureCode)\n        }\n      })\n      .catch(err => {\n        reject(err)\n      })\n  })\n}\n\nexport const getFileHandleContentFromID = (\n  fileHandleId: string,\n  sessionToken: string,\n): Promise<string> => {\n  // get the presigned URL, download the data, and send that back (via resolve())\n  return new Promise((resolve, reject) => {\n    // get the file handle and url\n    const getFileHandleByIdPromise = getFileHandleById(\n      fileHandleId,\n      sessionToken,\n    )\n    const getFileHandlePresignedUrlPromis = getFileHandleByIdURL(\n      fileHandleId,\n      sessionToken,\n    )\n    Promise.all([getFileHandleByIdPromise, getFileHandlePresignedUrlPromis])\n      .then(values => {\n        const fileHandle: FileHandle = values[0]\n        const presignedUrl: string = values[1]\n        return getFileHandleContent(fileHandle, presignedUrl).then(\n          (content: string) => {\n            resolve(content)\n          },\n        )\n      })\n      .catch(err => {\n        reject(err)\n      })\n  })\n}\n\nexport const getFileHandleContent = (\n  fileHandle: FileHandle,\n  presignedUrl: string,\n): Promise<string> => {\n  // get the presigned URL, download the data, and send that back (via resolve())\n  return new Promise((resolve, reject) => {\n    // sanity check!  must be less than 5MB\n    if (fileHandle.contentSize < MAX_JS_FILE_DOWNLOAD_SIZE) {\n      fetch(presignedUrl, {\n        method: 'GET',\n        mode: 'cors',\n        cache: 'no-cache',\n        headers: {\n          'Content-Type': fileHandle.contentType,\n        },\n      }).then(response => {\n        // the response is always decoded using UTF-8\n        response.text().then(text => {\n          resolve(text)\n        })\n      })\n    } else {\n      reject('File size exceeds max (5MB)')\n    }\n  })\n}\n\n/**\n * Create an ACL\n * https://docs.synapse.org/rest/POST/entity/id/acl.html\n */\nexport const createACL = (\n  entityId: string,\n  acl: AccessControlList,\n  sessionToken: string | undefined,\n) => {\n  return doPost(\n    `/repo/v1/entity/${entityId}/acl`,\n    acl,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Submit an entity to an evaluation queue\n * https://docs.synapse.org/rest/POST/evaluation/submission.html\n */\nexport const submitToEvaluation = (\n  submission: Submission,\n  etag: string,\n  sessionToken: string | undefined,\n) => {\n  return doPost(\n    `/repo/v1/evaluation/submission?etag=${etag}`,\n    submission,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport const getEvaluationPermissions = (\n  evalId: string,\n  sessionToken: string | undefined,\n) => {\n  return doGet<UserEvaluationPermissions>(\n    `/repo/v1/evaluation/${evalId}/permissions`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Get an evaluation queue\n * https://docs.synapse.org/rest/GET/evaluation/evalId.html\n */\nexport const getEvaluation = (\n  evalId: string,\n  sessionToken: string | undefined,\n): Promise<Evaluation> => {\n  if (!evalId) {\n    // we must explicitly handle this because /repo/v1/evaluation\n    // without an evalId is a valid API that returns a different API response\n    return Promise.reject(new Error('evalId is empty'))\n  }\n  return doGet<Evaluation>(\n    `/repo/v1/evaluation/${evalId}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Update an existing evaluation queue\n * https://docs.synapse.org/rest/PUT/evaluation/evalId.html\n */\nexport const updateEvaluation = (\n  evaluation: Evaluation,\n  sessionToken: string | undefined,\n): Promise<Evaluation> => {\n  if (!evaluation.id) {\n    // we must explicitly handle this because /repo/v1/evaluation\n    // without an evalId is a valid API that returns a different API response\n    return Promise.reject(new Error('evaluation does not have an ID'))\n  }\n  return doPut<Evaluation>(\n    `/repo/v1/evaluation/${evaluation.id}`,\n    evaluation,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Create an evaluation queue\n * https://docs.synapse.org/rest/POST/evaluation.html\n */\nexport const createEvaluation = (\n  evaluation: Evaluation,\n  sessionToken: string | undefined,\n): Promise<Evaluation> => {\n  return doPost<Evaluation>(\n    '/repo/v1/evaluation/',\n    evaluation,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Delete an existing evaluation queue\n * https://docs.synapse.org/rest/PUT/evaluation/evalId.html\n */\nexport const deleteEvaluation = (\n  evalId: string,\n  sessionToken: string | undefined,\n): Promise<void> => {\n  return doDelete(\n    `/repo/v1/evaluation/${evalId}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Get an evaluation round\n * https://docs.synapse.org/rest/GET/evaluation/evalId/round/evalRoundId.html\n */\nexport const getEvaluationRound = (\n  evalId: string,\n  evalRoundId: string,\n  sessionToken: string | undefined,\n): Promise<EvaluationRound> => {\n  return doGet(\n    `/repo/v1/evaluation/${evalId}/round/${evalRoundId}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Get all evaluation rounds\n * https://docs.synapse.org/rest/GET/evaluation/evalId/round/list.html\n */\nexport const getEvaluationRoundsList = (\n  evalId: string,\n  evaluationRoundListRequest: EvaluationRoundListRequest | undefined,\n  sessionToken: string | undefined,\n): Promise<EvaluationRoundListResponse> => {\n  return doPost(\n    `/repo/v1/evaluation/${evalId}/round/list`,\n    evaluationRoundListRequest ?? {},\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Create an evaluation round\n * https://docs.synapse.org/rest/POST/evaluation/evalId/round/evalRoundId.html\n */\nexport const createEvaluationRound = (\n  evaluationRound: EvaluationRound,\n  sessionToken: string | undefined,\n): Promise<EvaluationRound> => {\n  return doPost(\n    `/repo/v1/evaluation/${evaluationRound.evaluationId}/round`,\n    evaluationRound,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Update an evaluation round\n * https://docs.synapse.org/rest/PUT/evaluation/evalId/round/evalRoundId.html\n */\nexport const updateEvaluationRound = (\n  evaluationRound: EvaluationRound,\n  sessionToken: string | undefined,\n): Promise<EvaluationRound> => {\n  return doPut(\n    `/repo/v1/evaluation/${evaluationRound.evaluationId}/round/${evaluationRound.id}`,\n    evaluationRound,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Delete an evaluation round\n * https://docs.synapse.org/rest/DELETE/evaluation/evalId/round/evalRoundId.html\n */\nexport const deleteEvaluationRound = (\n  evalId: string,\n  evalRoundId: string,\n  sessionToken: string | undefined,\n) => {\n  return doDelete(\n    `/repo/v1/evaluation/${evalId}/round/${evalRoundId}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Executes a user-defined query over the Submissions of a specific Evaluation.\n * https://docs.synapse.org/rest/GET/evaluation/submission/query.html\n */\nexport const getEvaluationSubmissions = (\n  query: string,\n  sessionToken: string | undefined,\n): Promise<QueryTableResults> => {\n  return doGet(\n    `/repo/v1/evaluation/submission/query?query=${encodeURI(query)}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Get user-friendly OAuth2 request information (to present to the user so they can choose if they want to give consent).\n * http://rest-docs.synapse.org/rest/POST/oauth2/description.html\n */\nexport const getOAuth2RequestDescription = (\n  oidcAuthRequest: OIDCAuthorizationRequest,\n): Promise<OIDCAuthorizationRequestDescription> => {\n  return doPost(\n    '/auth/v1/oauth2/description',\n    oidcAuthRequest,\n    undefined, // sessionToken: this is not an authenticated call\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Check whether user has already granted consent for the given OAuth client, scope, and claims.\n * Consent persists for one year.\n */\nexport const hasUserAuthorizedOAuthClient = (\n  oidcAuthRequest: OIDCAuthorizationRequest,\n  sessionToken: string,\n): Promise<OAuthConsentGrantedResponse> => {\n  return doPost(\n    '/auth/v1/oauth2/consentcheck',\n    oidcAuthRequest,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Get OAuth2 Client information (available to the public)\n */\nexport const getOAuth2Client = (\n  clientId: string,\n): Promise<OAuthClientPublic> => {\n  return doGet(\n    `/auth/v1/oauth2/client/${clientId}`,\n    undefined,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * User consents to the given OIDCAuthorizationRequest (after being presented with all information returned by getOAuth2RequestDescription())\n * @param oidcAuthRequest\n * @param sessionToken\n * @param endpoint\n */\nexport const consentToOAuth2Request = (\n  oidcAuthRequest: OIDCAuthorizationRequest,\n  sessionToken: string | undefined,\n): Promise<AccessCodeResponse> => {\n  return doPost(\n    '/auth/v1/oauth2/consent',\n    oidcAuthRequest,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/***********************\n * FORM SERVICES\n * https://docs.synapse.org/rest/#org.sagebionetworks.repo.web.controller.FormController\n *************************/\n/**\n * Create a FormGroup\n * https://docs.synapse.org/rest/POST/form/group.html\n * @param name\n * @param sessionToken\n * @param endpoint\n */\nexport const createFormGroup = (\n  name: string,\n  sessionToken: string,\n): Promise<FormGroup> => {\n  return doPost(\n    `/repo/v1/form/group?name=${encodeURI(name)}`,\n    undefined,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Get FormGroup ACL\n * https://docs.synapse.org/rest/GET/form/group/id/acl.html\n */\nexport const getFormACL = (\n  formGroupId: string,\n  sessionToken: string | undefined,\n): Promise<AccessControlList> => {\n  return doGet(\n    `/repo/v1/form/group/${formGroupId}/acl`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Update FormGroup ACL\n * https://docs.synapse.org/rest/PUT/form/group/id/acl.html\n */\nexport const updateFormACL = (\n  formGroupId: string,\n  newAcl: AccessControlList,\n  sessionToken: string | undefined,\n): Promise<AccessControlList> => {\n  return doPut(\n    `/repo/v1/form/group/${formGroupId}/acl`,\n    newAcl,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Create a new FormData object\n * https://docs.synapse.org/rest/POST/form/data.html\n * @param formGroupId\n * @param name\n * @param sessionToken\n * @param endpoint\n */\nexport const createFormData = (\n  formGroupId: string,\n  name: string,\n  dataFileHandleId: string,\n  sessionToken: string,\n): Promise<FormData> => {\n  const newFormData: FormChangeRequest = {\n    name,\n    fileHandleId: dataFileHandleId,\n  }\n  return doPost(\n    `/repo/v1/form/data?groupId=${formGroupId}`,\n    newFormData,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Update FormData object\n * https://docs.synapse.org/rest/PUT/form/data.html\n */\nexport const updateFormData = (\n  formDataId: string,\n  name: string,\n  dataFileHandleId: string,\n  sessionToken: string,\n): Promise<FormData> => {\n  const updatedFormData: FormChangeRequest = {\n    name,\n    fileHandleId: dataFileHandleId,\n  }\n  return doPut(\n    `/repo/v1/form/data/${formDataId}`,\n    updatedFormData,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Delete FormData object\n * https://docs.synapse.org/rest/DELETE/form/data.html\n */\nexport const deleteFormData = (\n  formDataId: string,\n  sessionToken: string | undefined,\n) => {\n  return doDelete(\n    `/repo/v1/form/data/${formDataId}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Submit the identified FormData for review.\n * https://docs.synapse.org/rest/POST/form/data/id/submit.html\n */\nexport const submitFormData = (\n  formDataId: string,\n  sessionToken: string | undefined,\n): Promise<FormData> => {\n  return doPost(\n    `/repo/v1/form/data/${formDataId}/submit`,\n    undefined,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * List FormData objects and their associated status that match the filters of the provided request that are\n * owned by the caller. Note: Only objects owned by the caller will be returned.\n * https://docs.synapse.org/rest/POST/form/data/list.html\n */\nexport const listFormData = (\n  request: ListRequest,\n  sessionToken: string | undefined,\n): Promise<ListResponse> => {\n  return doPost(\n    `/repo/v1/form/data/list`,\n    request,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * List FormData objects and their associated status that match the filters of the provided request for the entire\n * group. This is used by service accounts to process submissions.\n * https://docs.synapse.org/rest/POST/form/data/list/reviewer.html\n */\nexport const listFormDataAsFormAdmin = (\n  request: ListRequest,\n  sessionToken: string | undefined,\n): Promise<ListResponse> => {\n  return doPost(\n    `/repo/v1/form/data/list/reviewer`,\n    request,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Called by the form processing service to accept a submitted data.\n * https://docs.synapse.org/rest/PUT/form/data/id/accept.html\n */\nexport const acceptFormData = (\n  formDataId: string,\n  sessionToken: string | undefined,\n): Promise<FormData> => {\n  return doPut(\n    `/repo/v1/form/data/${formDataId}/accept`,\n    undefined,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Called by the form processing service to reject a submitted data.\n * https://docs.synapse.org/rest/PUT/form/data/id/reject.html\n */\nexport const rejectFormData = (\n  formDataId: string,\n  reason: string,\n  sessionToken: string | undefined,\n): Promise<FormData> => {\n  const formRejection: FormRejection = {\n    reason,\n  }\n  return doPut(\n    `/repo/v1/form/data/${formDataId}/reject`,\n    formRejection,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Get Statistics\n * https://docs.synapse.org/rest/POST/statistics.html\n * Generic endpoint to retrieve statistics about objects. The user should have VIEW_STATISTICS access on the object referenced by the objectId in the request.\n */\nexport const getProjectStatistics = (\n  request: ProjectFilesStatisticsRequest,\n  sessionToken: string | undefined,\n): Promise<ProjectFilesStatisticsResponse> => {\n  return doPost(\n    `/repo/v1/statistics`,\n    request,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n// see https://docs.synapse.org/rest/POST/restrictionInformation.html\nexport const getRestrictionInformation = (\n  request: RestrictionInformationRequest,\n  sessionToken: string | undefined,\n): Promise<RestrictionInformationResponse> => {\n  return doPost(\n    `/repo/v1/restrictionInformation`,\n    request,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n/**\n * Returns a paginated result of access requirements associated for an entity\n *\n * See https://rest-docs.synapse.org/rest/GET/entity/id/accessRequirement.html\n *\n * @param {(string | undefined)} sessionToken token of user\n * @param {string} id id of entity\n * @param {number} [limit=50]\n * @param {number} [offset=0]\n * @returns {Promise<PaginatedResults<AccessRequirement>>}\n */\nexport const getAccessRequirement = (\n  sessionToken: string | undefined,\n  id: string,\n  limit: number = 50,\n  offset: number = 0,\n): Promise<PaginatedResults<AccessRequirement>> => {\n  const url = `/repo/v1/entity/${id}/accessRequirement?limit=${limit}&offset=${offset}`\n  return doGet<PaginatedResults<AccessRequirement>>(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Retrieve an access requirement status for a given access requirement ID.\n *\n * @param {string} requirementId id of entity to lookup\n * @returns {AccessRequirementStatus}\n */\n\nexport const getAccessRequirementStatus = (\n  sessionToken: string | undefined,\n  requirementId: string | number,\n): Promise<AccessRequirementStatus> => {\n  const url = `repo/v1/accessRequirement/${requirementId}/status`\n  return doGet(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n * Returns all the access requirements associated to an entity {id}, calling the\n * paginated getAccessRequirement service until all results are returned.\n *\n * @param {(string | undefined)} sessionToken token of user\n * @param {string} id id of entity to lookup\n * @returns {Promise<Array<AccessRequirement>>}\n */\nexport const getAllAccessRequirements = (\n  sessionToken: string | undefined,\n  id: string,\n): Promise<Array<AccessRequirement>> => {\n  // format function to be callable by getAllOfPaginatedService\n  const fn = (limit: number, offset: number) => {\n    const url = `/repo/v1/entity/${id}/accessRequirement?limit=${limit}&offset=${offset}`\n    return doGet<PaginatedResults<AccessRequirement>>(\n      url,\n      sessionToken,\n      undefined,\n      BackendDestinationEnum.REPO_ENDPOINT,\n    )\n  }\n  return getAllOfPaginatedService(fn)\n}\n\n/**\n *\n *\n * @param {(string | undefined)} sessionToken user session token\n * @param {(number | undefined)} id the unique immutable ID\n * @returns {AccessApproval}\n */\nexport const getAccessApproval = async (\n  sessionToken: string | undefined,\n  approvalId: number | undefined,\n): Promise<AccessApproval> => {\n  const url = `repo/v1/accessApproval/${approvalId}`\n  return doGet<AccessApproval>(\n    url,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n/**\n *\n *\n * @param {(string | undefined)} sessionToken user session token\n * @param {AccessApproval} accessApproval access approval request object\n * @returns {AccessApproval}\n */\nexport const postAccessApproval = async (\n  sessionToken: string | undefined,\n  accessApproval: AccessApproval,\n): Promise<AccessApproval> => {\n  return doPost<AccessApproval>(\n    'repo/v1/accessApproval',\n    accessApproval,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\n// https://rest-docs.synapse.org/rest/GET/download/list.html\nexport const getDownloadList = (sessionToken: string | undefined) => {\n  return doGet<DownloadList>(\n    '/file/v1/download/list',\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport const getDownloadOrder = (\n  zipFileName: string | undefined,\n  sessionToken: string | undefined,\n): Promise<DownloadOrder> => {\n  const baseURL = '/file/v1/download/order'\n  const url = zipFileName ? `${baseURL}?zipFileName=${zipFileName}` : baseURL\n  return doPost(\n    url,\n    undefined,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport type FunctionReturningPaginatedResults<T> = (\n  limit: number,\n  offset: number,\n) => Promise<PaginatedResults<T>>\n/**\n * Utility function to get all the results of a paginated service\n *\n * @template T Type of paginated service\n * @param {FunctionReturningPaginatedResults<T>} fn Function that returns a paginated synapse object, accepts a limit and offset\n * @returns\n */\nexport const getAllOfPaginatedService = async <T>(\n  fn: FunctionReturningPaginatedResults<T>,\n) => {\n  const limit = 50\n  let offset = 0\n  let existsMoreData = true\n  const results: T[] = []\n\n  while (existsMoreData) {\n    try {\n      const data = await fn(limit, offset)\n      results.push(...data.results)\n      offset += data.results.length\n      if (data.results.length < limit) {\n        existsMoreData = false\n      }\n    } catch (e) {\n      throw Error(`Error on getting paginated results ${e}`)\n    }\n  }\n\n  return results\n}\n\n// https://rest-docs.synapse.org/rest/POST/download/list/remove.html\nexport const deleteDownloadListFiles = (\n  list: FileHandleAssociation[],\n  sessionToken: string | undefined,\n): Promise<DownloadList> => {\n  return doPost<DownloadList>(\n    '/file/v1/download/list/remove',\n    { list },\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  ).then(data => {\n    dispatchDownloadListChangeEvent(data)\n    return data\n  })\n}\n\n// https://rest-docs.synapse.org/rest/DELETE/download/list.html ?\nexport const deleteDownloadList = (sessionToken: string | undefined) => {\n  return doDelete(\n    '/file/v1/download/list',\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  ).then(_ => {\n    dispatchDownloadListChangeEvent(undefined)\n  })\n}\n\n/**\n * http://rest-docs.synapse.org/rest/POST/entity/id/table/transaction/async/start.html\n * @param {*} tableUpdateRequest\n * @param {*} sessionToken\n * @param {*} endpoint\n * // technically returns a TableUpdateTransactionResponse, but I don't see any reason we need this\n */\nexport const updateTable = (\n  tableUpdateRequest: TableUpdateTransactionRequest,\n  sessionToken: string | undefined = undefined,\n  updateParentState?: any,\n): Promise<any> => {\n  return doPost<AsyncJobId>(\n    `/repo/v1/entity/${tableUpdateRequest.entityId}/table/transaction/async/start`,\n    tableUpdateRequest,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n    .then(resp => {\n      return getAsyncResultFromJobId<any>(\n        `/repo/v1/entity/${tableUpdateRequest.entityId}/table/transaction/async/get/${resp.token}`,\n        sessionToken,\n        updateParentState,\n      )\n    })\n    .catch((error: any) => {\n      throw error\n    })\n}\n\nexport const getTransformSqlWithFacetsRequest = (\n  transformSqlWithFacetsRequest: TransformSqlWithFacetsRequest,\n) => {\n  return doPost<SqlTransformResponse>(\n    '/repo/v1/table/sql/transform',\n    transformSqlWithFacetsRequest,\n    undefined, // no auth needed\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport const createPersonalAccessToken = (\n  accessTokenGenerationRequest: AccessTokenGenerationRequest,\n  sessionToken: string | undefined,\n) => {\n  return doPost<AccessTokenGenerationResponse>(\n    '/auth/v1/personalAccessToken',\n    accessTokenGenerationRequest,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport const getPersonalAccessTokenRecords = (\n  sessionToken: string | undefined,\n  nextPageToken: string | undefined,\n) => {\n  return doGet<AccessTokenRecordList>(\n    `/auth/v1/personalAccessToken${\n      nextPageToken ? '?nextPageToken=' + nextPageToken : ''\n    }`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n\nexport const deletePersonalAccessToken = (\n  accessTokenId: string,\n  sessionToken: string | undefined,\n) => {\n  return doDelete(\n    `/auth/v1/personalAccessToken/${accessTokenId}`,\n    sessionToken,\n    undefined,\n    BackendDestinationEnum.REPO_ENDPOINT,\n  )\n}\n","import * as React from 'react'\nimport ButtonContent from '../assets/ButtonContent'\nimport GoogleIcon from '../assets/GoogleIcon'\nimport { SynapseClient } from '../utils'\nimport {\n  getEndpoint,\n  BackendDestinationEnum,\n} from '../utils/functions/getEndpoint'\n\ntype State = {\n  username: string\n  password: string\n  email: string\n  isSignedIn: boolean\n  hasLoginInFailed: boolean\n  errorMessage: string\n}\n\ntype Props = {\n  theme: string\n  icon: boolean\n  googleRedirectUrl?: string\n  redirectUrl?: string // will redirect here after a successful login. if unset, reload the current page url.\n  sessionCallback: Function // Callback is invoked after login\n}\n\n/**\n *  Demo of user session, show login screen and handling user login submission.\n *\n *  To support Google SSO in your portal, you must add your domain to the Authorized Redirect URIs\n *  for Synapse authentication.\n *  This can be done by contacting synapseInfo@sagebionetworks.org to form a collaboration.\n *  Synapse engineers must add your redirect URL in the Google API console found at https://console.cloud.google.com/ for this functionality to work.\n *\n * @class Login\n * @extends {React.Component}\n */\nclass Login extends React.Component<Props, State> {\n  authenticationReceiptKey = 'last_user_authentication_receipt'\n\n  /**\n   * Creates a user session, maintaining credentials\n   * @param {*} props\n   * @memberof Login\n   */\n  constructor(props: Props) {\n    super(props)\n    this.state = {\n      email: '',\n      errorMessage: '',\n      hasLoginInFailed: false,\n      isSignedIn: false,\n      password: '',\n      username: '',\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleLogin = this.handleLogin.bind(this)\n    this.getLoginFailureView = this.getLoginFailureView.bind(this)\n    this.onGoogleSignIn = this.onGoogleSignIn.bind(this)\n  }\n  /**\n   * Updates internal state with the event that was triggered\n   *\n   * @param {*} event Form update\n   */\n  public handleChange(event: React.FormEvent<HTMLInputElement>): void {\n    const target = event.currentTarget\n    const name = target.name\n    const value = target.value\n    const newState: Pick<any, any> = { [name]: value }\n    this.setState(newState)\n  }\n  /**\n   * Handle user login on click\n   *\n   * @param {*} clickEvent Userclick event\n   */\n  public async handleLogin(clickEvent: React.FormEvent<HTMLElement>) {\n    clickEvent.preventDefault() // avoid page refresh\n    try {\n      // get last valid receipt\n      const authenticationReceipt = localStorage.getItem(\n        this.authenticationReceiptKey,\n      )\n      const data = await SynapseClient.login(\n        this.state.username,\n        this.state.password,\n        authenticationReceipt,\n      )\n      // now get session token from cookie has to be called in the portals repo\n      await SynapseClient.setSessionTokenCookie(\n        data.sessionToken,\n        this.props.sessionCallback,\n      )\n      // Set the new receipt\n      localStorage.setItem(\n        this.authenticationReceiptKey,\n        data.authenticationReceipt,\n      )\n    } catch (err) {\n      console.log('Error on login: ', err.reason)\n      this.setState({\n        errorMessage: err.reason,\n        hasLoginInFailed: true,\n        isSignedIn: false,\n      })\n    }\n  }\n\n  /**\n   * Shows user login failure view on login failure\n   *\n   * @returns view to be displayed on user sign in error.\n   */\n  public getLoginFailureView(): JSX.Element | boolean {\n    if (this.state.hasLoginInFailed) {\n      return (\n        <div>\n          <small className=\"form-text text-danger\">\n            {this.state.errorMessage}\n          </small>\n          <div className=\"invalid-feedback\" />\n        </div>\n      )\n    }\n    return false\n  }\n\n  public onGoogleSignIn(event: React.MouseEvent<HTMLButtonElement>) {\n    // save current route (so that we can go back here after SSO)\n    localStorage.setItem('after-sso-login-url', window.location.href)\n    event.preventDefault()\n    const redirectUrl = this.props.googleRedirectUrl\n      ? this.props.googleRedirectUrl\n      : `${SynapseClient.getRootURL()}?provider=${SynapseClient.AUTH_PROVIDER}`\n    SynapseClient.oAuthUrlRequest(SynapseClient.AUTH_PROVIDER, redirectUrl)\n      .then((data: any) => {\n        const authUrl = data.authorizationUrl\n        window.location = authUrl // ping the url\n      })\n      .catch((err: any) => {\n        console.log('Error on oAuth url ', err)\n      })\n  }\n  public render() {\n    const { theme, icon } = this.props\n    const googleTheme =\n      theme === 'dark'\n        ? 'SRC-google-button-dark-color'\n        : 'SRC-google-button-light-color'\n    return (\n      <div\n        id=\"loginPage\"\n        className=\"container loginContainer SRC-syn-border-spacing\"\n      >\n        <form>\n          <button\n            onClick={this.onGoogleSignIn}\n            className={`SRC-google-button ${googleTheme} SRC-marginBottomTen`}\n          >\n            <GoogleIcon key={1} active={true} />\n            <ButtonContent icon={icon} key={2}>\n              Sign in with Google\n            </ButtonContent>\n          </button>\n        </form>\n        <div className=\"SRC-center-text SRC-deemphasized-text SRC-marginBottomTen\">\n          or\n        </div>\n\n        <div className=\"SRC-centerAndJustifyContent SRC-marginBottomTen\">\n          <img\n            height=\"20px\"\n            style={{ marginRight: '10px' }}\n            alt={'sage bionetworks logo'}\n            src=\"https://s3.amazonaws.com/static.synapse.org/sage-bionetworks-logo.svg\"\n          />\n          Sign in with your Sage Bionetworks Synapse account\n        </div>\n        <form onSubmit={this.handleLogin} className=\"form-group\">\n          <input\n            autoComplete=\"username\"\n            placeholder=\"username or email\"\n            className=\"form-control SRC-marginBottomTop\"\n            id=\"exampleEmail\"\n            name=\"username\"\n            type=\"text\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <input\n            autoComplete=\"password\"\n            placeholder=\"password\"\n            className=\"form-control SRC-marginBottomTop\"\n            id=\"examplePassword\"\n            name=\"password\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          {this.getLoginFailureView()}\n          <button\n            onSubmit={this.handleLogin}\n            type=\"submit\"\n            className=\"btn SRC-primary-background-color SRC-hoverWhiteText\n              SRC-whiteText m-1 SRC-google-button SRC-marginBottomTen\"\n          >\n            <ButtonContent icon={icon}>Sign in</ButtonContent>\n          </button>\n        </form>\n        <div>\n          <a\n            href={`${getEndpoint(\n              BackendDestinationEnum.PORTAL_ENDPOINT,\n            )}#!PasswordReset:0`}\n            className=\"SRC-floatLeft SRC-primary-text-color\"\n          >\n            Forgot password?\n          </a>\n          <span className=\"SRC-deemphasized-text SRC-floatRight\">\n            &nbsp;It's free!\n          </span>\n          <a\n            href={`${getEndpoint(\n              BackendDestinationEnum.PORTAL_ENDPOINT,\n            )}#!RegisterAccount:0`}\n            className=\"SRC-floatRight SRC-primary-text-color\"\n          >\n            Register\n          </a>\n        </div>\n      </div>\n    )\n  }\n}\nexport default Login\n","import * as React from 'react'\nimport {\n  createEntity,\n  getEntity,\n  lookupChildEntity,\n  updateEntity,\n  uploadFile,\n} from '../utils/SynapseClient'\nimport {\n  EntityId,\n  EntityLookupRequest,\n  FileEntity,\n  FileUploadComplete,\n} from '../utils/synapseTypes/'\n\ntype UploaderState = {\n  token?: string\n  error?: any\n  totalFilesToUploadCount: number\n  filesUploadedCount: number\n  isUploading?: boolean\n  successfullyUploaded: boolean\n}\n\nexport type UploaderProps = {\n  token?: string\n  parentContainerId: string\n}\n\nexport default class Uploader extends React.Component<\n  UploaderProps,\n  UploaderState\n> {\n  private readonly inputOpenFileRef: React.RefObject<HTMLInputElement>\n\n  constructor(props: UploaderProps) {\n    super(props)\n    this.state = {\n      token: '',\n      isUploading: false,\n      filesUploadedCount: 0,\n      totalFilesToUploadCount: 0,\n      successfullyUploaded: false,\n    }\n    this.inputOpenFileRef = React.createRef()\n  }\n\n  showOpenFileDlg = () => {\n    if (this.inputOpenFileRef && this.inputOpenFileRef.current) {\n      this.inputOpenFileRef.current.click()\n    }\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files) {\n      this.handleFilesChanged(event.target.files)\n    }\n  }\n\n  finishedProcessingOneFile = () => {\n    const incrementedFilesUploadedCount = this.state.filesUploadedCount + 1\n    const isStillUploading =\n      incrementedFilesUploadedCount < this.state.totalFilesToUploadCount\n    this.setState({\n      isUploading: isStillUploading,\n      filesUploadedCount: incrementedFilesUploadedCount,\n      successfullyUploaded: !isStillUploading,\n    })\n  }\n\n  handleUploadError = (error: any) => {\n    this.finishedProcessingOneFile()\n    this.setState({ error })\n  }\n\n  handleFilesChanged = (selectorFiles: FileList) => {\n    this.setState({\n      error: undefined,\n      isUploading: true,\n      filesUploadedCount: 0,\n      totalFilesToUploadCount: selectorFiles.length,\n      successfullyUploaded: false,\n    })\n    Array.from(selectorFiles).forEach(file => {\n      // check for existing filename in parent folder before upload (add new version if exists).\n      // note that the parent container (project/folder) is configurable.\n      const newFileEntity: FileEntity = {\n        parentId: this.props.parentContainerId,\n        name: file.name,\n        concreteType: 'org.sagebionetworks.repo.model.FileEntity',\n        dataFileHandleId: '',\n      }\n      const entityLookupRequest: EntityLookupRequest = {\n        entityName: file.name,\n        parentId: this.props.parentContainerId,\n      }\n      lookupChildEntity(entityLookupRequest, this.props.token)\n        .then((entityId: EntityId) => {\n          // ok, found an entity of the same name.\n          getEntity<FileEntity>(this.props.token, entityId.id).then(\n            (existingEntity: FileEntity) => {\n              if (\n                existingEntity.concreteType ===\n                'org.sagebionetworks.repo.model.FileEntity'\n              ) {\n                this.updateEntityFile(existingEntity, file)\n              } else {\n                this.updateEntityFile(newFileEntity, file)\n              }\n            },\n          )\n        })\n        .catch((error: any) => {\n          if (error.status === 404) {\n            // great, it's a new file!\n            this.updateEntityFile(newFileEntity, file)\n          } else {\n            this.handleUploadError(error)\n          }\n        })\n    })\n  }\n\n  updateEntityFile = (fileEntity: FileEntity, file: File) => {\n    uploadFile(this.props.token, file.name, file)\n      .then((fileUploadComplete: FileUploadComplete) => {\n        const isCreate = fileEntity.dataFileHandleId === ''\n        fileEntity.dataFileHandleId = fileUploadComplete.fileHandleId\n        const createOrUpdate = isCreate ? createEntity : updateEntity\n        createOrUpdate(fileEntity, this.props.token).then(() => {\n          this.finishedProcessingOneFile()\n        })\n      })\n      .catch((error: any) => {\n        this.handleUploadError(error)\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        {/** This input field is used for it's functionally (browse for files), the button acts as the UI. */}\n        <input\n          ref={this.inputOpenFileRef}\n          type=\"file\"\n          style={{ display: 'none' }}\n          onChange={this.handleChange}\n          multiple={true}\n        />\n        <button\n          type=\"button\"\n          onClick={this.showOpenFileDlg}\n          className=\"SRC-uploadButton\"\n        >\n          Browse...\n        </button>\n        {this.state.isUploading && (\n          <React.Fragment>\n            <span style={{ marginLeft: '10px' }}>\n              {this.state.filesUploadedCount} /\n              {this.state.totalFilesToUploadCount} file(s)\n            </span>\n            <span style={{ marginLeft: '2px' }} className={'spinner'} />\n          </React.Fragment>\n        )}\n        {this.state.successfullyUploaded && (\n          <span style={{ marginLeft: '10px' }}>\n            Successfully uploaded {this.state.totalFilesToUploadCount} file(s)\n            to\n            <a\n              style={{ marginLeft: '2px' }}\n              href={`https://www.synapse.org/#!Synapse:${this.props.parentContainerId}`}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              {this.props.parentContainerId}\n            </a>\n          </span>\n        )}\n        {this.state.error && <p>Upload error!</p>}\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\nimport {\n  getEntity,\n  getFileEntityContent,\n  updateEntity,\n  uploadFile,\n} from '../utils/SynapseClient'\nimport { Entity, FileEntity, FileUploadComplete } from '../utils/synapseTypes/'\n\ntype FileContentDownloadUploadDemoState = {\n  token?: string\n  error?: any\n  isLoading?: boolean\n  fileContent?: string\n  targetEntity?: FileEntity\n}\n\nexport type FileContentDownloadUploadDemoProps = {\n  token?: string\n  targetEntityId: string\n}\n\nexport default class FileContentDownloadUploadDemo extends React.Component<\n  FileContentDownloadUploadDemoProps,\n  FileContentDownloadUploadDemoState\n> {\n  constructor(props: FileContentDownloadUploadDemoProps) {\n    super(props)\n    this.state = {\n      token: '',\n      isLoading: false,\n    }\n  }\n\n  public componentDidMount() {\n    const { token, targetEntityId } = this.props\n    // must be logged in to download content\n    if (token) {\n      this.setState({ isLoading: true })\n      getEntity(token, targetEntityId)\n        .then((entity: Entity) => {\n          // if file entity\n          if (\n            entity.concreteType === 'org.sagebionetworks.repo.model.FileEntity'\n          ) {\n            const fileEntity: FileEntity = entity as FileEntity\n            getFileEntityContent(token, fileEntity).then(content => {\n              this.setState({\n                fileContent: content,\n                targetEntity: fileEntity,\n                isLoading: false,\n              })\n            })\n          } else {\n            this.setState({ error: 'invalid type', isLoading: false })\n          }\n        })\n        .catch(err => {\n          this.setState({ error: err, isLoading: false })\n        })\n    }\n  }\n\n  updateFileContent = (event: React.MouseEvent<HTMLButtonElement>) => {\n    // create a new FileHandle, and update the FileEntity\n    if (this.props.token && this.state.targetEntity && this.state.fileContent) {\n      this.setState({ isLoading: true })\n      const newFileContent = new Blob([this.state.fileContent], {\n        type: 'text/plain',\n      })\n      uploadFile(this.props.token, this.state.targetEntity.name, newFileContent)\n        .then((fileUploadComplete: FileUploadComplete) => {\n          // now update the entity!\n          if (this.state.targetEntity) {\n            this.state.targetEntity.dataFileHandleId =\n              fileUploadComplete.fileHandleId\n            updateEntity(this.state.targetEntity, this.props.token)\n              .then((entity: Entity) => {\n                const fileEntity = entity as FileEntity\n                // updated the target entity, force it to get the updated entity\n                this.setState({ targetEntity: fileEntity, isLoading: false })\n              })\n              .catch((err: string) => {\n                this.setState({ error: err, isLoading: false })\n              })\n          }\n        })\n        .catch((err: string) => {\n          this.setState({ error: err, isLoading: false })\n        })\n    }\n  }\n  handleContentChange = (event: React.ChangeEvent<HTMLTextAreaElement>) => {\n    this.setState({ fileContent: event.target.value })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.fileContent && (\n          <React.Fragment>\n            <div>\n              <textarea\n                style={{ width: '100%', height: '300px' }}\n                value={this.state.fileContent}\n                onChange={this.handleContentChange}\n              />\n            </div>\n            <button onClick={this.updateFileContent}>\n              Update File Content...\n            </button>\n          </React.Fragment>\n        )}\n        {this.state.isLoading && (\n          <span style={{ marginLeft: '2px' }} className={'spinner'} />\n        )}\n\n        {this.state.error && <p>Download error!</p>}\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\nimport Plotly from 'plotly.js-basic-dist'\nimport createPlotlyComponent from 'react-plotly.js/factory'\nimport { SynapseClient } from '../utils'\nimport {\n  ProjectFilesStatisticsRequest,\n  ProjectFilesStatisticsResponse,\n  FilesCountStatistics,\n} from '../utils/synapseTypes/'\nconst Plot = createPlotlyComponent(Plotly)\n\nconst months = [\n  'Jan',\n  'Feb',\n  'Mar',\n  'Apr',\n  'May',\n  'Jun',\n  'Jul',\n  'Aug',\n  'Sep',\n  'Oct',\n  'Nov',\n  'Dec',\n]\n\nexport type StatisticsPlotProps = {\n  request: ProjectFilesStatisticsRequest\n  token?: string\n  title?: string\n  xtitle?: string\n  ytitle?: string\n  isHorizontal?: boolean\n  xaxistype?: string\n  showlegend?: boolean\n}\n\ntype StatisticsPlotState = {\n  isLoaded: boolean\n  plotData?: ProjectFilesStatisticsResponse\n}\n\nclass StatisticsPlot extends React.Component<\n  StatisticsPlotProps,\n  StatisticsPlotState\n> {\n  constructor(props: StatisticsPlotProps) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      plotData: {} as ProjectFilesStatisticsResponse,\n    }\n  }\n\n  public componentDidMount() {\n    this.fetchPlotlyData()\n  }\n  /**\n   * Get data for plotly\n   *\n   * @returns data corresponding to plotly widget\n   */\n  fetchPlotlyData = async () => {\n    const { request, token } = this.props\n    return SynapseClient.getProjectStatistics(request, token)\n      .then((data: ProjectFilesStatisticsResponse) => {\n        this.setState({\n          isLoaded: true,\n          plotData: data,\n        })\n      })\n      .catch((err: any) => {\n        console.log('Error on call to get statistics ', err)\n      })\n  }\n\n  getTrace = (\n    traceName: string,\n    stats: FilesCountStatistics[],\n    orientation: string,\n    markerColor: string,\n  ) => {\n    const x: string[] = []\n    const y: number[] = []\n    const trace = {\n      orientation,\n      x,\n      y,\n      name: traceName,\n      type: 'bar',\n      marker: { color: markerColor },\n      hovertemplate:\n        // see S3 Formatting options: https://github.com/d3/d3-3.x-api-reference/blob/master/Formatting.md#d3_format\n        `%{y:n} <br><extra>${traceName}</extra>`,\n    }\n    for (const statPoint of stats) {\n      const statPointDate: Date = new Date(statPoint.rangeStart)\n      trace.x.push(\n        `${\n          months[statPointDate.getUTCMonth()]\n        } ${statPointDate.getUTCFullYear()}`,\n      )\n      trace.y.push(statPoint.filesCount)\n    }\n    return trace\n  }\n\n  showPlot = () => {\n    if (!this.state.isLoaded || !this.state.plotData) {\n      return\n    }\n    const {\n      title,\n      xtitle,\n      ytitle,\n      isHorizontal,\n      xaxistype,\n      showlegend,\n    } = this.props\n    const plotData = this.state.plotData\n    const layout: any = {\n      showlegend,\n      title,\n      barmode: 'stack',\n      hovermode: 'x',\n    }\n    const config: any = {\n      displayModeBar: true,\n      displaylogo: false,\n      // options found here: https://github.com/plotly/plotly.js/blob/master/src/components/modebar/buttons.js\n      modeBarButtonsToRemove: [\n        'sendDataToCloud',\n        'hoverCompareCartesian',\n        'select2d',\n        'lasso2d',\n        'zoom2d',\n        'resetScale2d',\n        'hoverClosestCartesian',\n        'toggleSpikelines',\n      ],\n    }\n    if (xtitle) {\n      layout.xaxis = {\n        title: xtitle,\n      }\n    }\n    if (xaxistype) {\n      layout.xaxis = {\n        ...layout.xaxis,\n        xaxistype: xaxistype.toLowerCase(),\n      }\n    }\n\n    if (ytitle) {\n      layout.yaxis = {\n        title: ytitle,\n      }\n    }\n    // init plot_data\n    const orientation: string = isHorizontal ? 'h' : 'v'\n    const traces: any = []\n    if (\n      plotData.fileDownloads &&\n      plotData.fileDownloads.months &&\n      plotData.fileDownloads.months.length > 0\n    ) {\n      // add file downloads trace\n      traces.push(\n        this.getTrace(\n          'File Downloads',\n          plotData.fileDownloads.months,\n          orientation,\n          '#7CC0C4',\n        ),\n      )\n    }\n    if (\n      plotData.fileUploads &&\n      plotData.fileUploads.months &&\n      plotData.fileUploads.months.length > 0\n    ) {\n      // add file uploads trace\n      traces.push(\n        this.getTrace(\n          'File Uploads',\n          plotData.fileUploads.months,\n          orientation,\n          '#D4689A',\n        ),\n      )\n    }\n    if (traces.length > 0)\n      return (\n        <Plot\n          layout={layout}\n          data={traces}\n          config={config}\n          className=\"SRC-fullWidth\"\n          useResizeHandler={true}\n        />\n      )\n    else return <></>\n  }\n\n  public render() {\n    if (!this.state.isLoaded) {\n      return null\n    }\n    return this.showPlot()\n  }\n}\nexport default StatisticsPlot\n","import { getEntity, getFileHandleContent, getFiles } from '../SynapseClient'\nimport { FileEntity } from '../synapseTypes/'\nimport { Entity } from '../synapseTypes/'\nimport { BatchFileResult } from '../synapseTypes/'\nimport { FileHandle } from '../synapseTypes/'\nimport { BatchFileRequest } from '../synapseTypes/'\nimport {\n  FileHandleAssociation,\n  FileHandleAssociateType,\n} from '../synapseTypes/'\n\nconst ESTIMATED_CORS_TIME_MS: number = 200\nconst ESTIMATED_DOWNLOAD_SPEED_EXPIRE_TIME_KEY: string =\n  'ESTIMATED_DOWNLOAD_SPEED_EXPIRE_TIME'\nconst ESTIMATED_DOWNLOAD_SPEED_KEY: string = 'ESTIMATED_DOWNLOAD_SPEED'\nconst TEST_FILE_ENTITY_ID: string = 'syn12600511'\n/**\n * Return the estimated download speed (bytes/second).  Result is cached.\n * Result is crude estimate since it's a single test file (small sample, only ~2MB), but is a valid test (since it's a Synapse file on s3).\n * The intent is to let the user know if the package download will take many hours to download.\n * @param sessionToken\n */\nexport const testDownloadSpeed = (sessionToken: string): Promise<number> => {\n  return new Promise((resolve, reject) => {\n    // check cache\n    const cachedSpeedExpireTime = localStorage.getItem(\n      ESTIMATED_DOWNLOAD_SPEED_EXPIRE_TIME_KEY,\n    )\n    const cachedSpeed = localStorage.getItem(ESTIMATED_DOWNLOAD_SPEED_KEY)\n    if (cachedSpeedExpireTime && cachedSpeed) {\n      // is this value expired?\n      const now: number = new Date().getTime()\n      if (now < Number(cachedSpeedExpireTime)) {\n        resolve(Number(cachedSpeed))\n        return\n      }\n    }\n\n    /**\n     * 1.  Get the test File Entity\n     * 2.  Get the file handle and presigned URL associated to the latest version of the test File Entity\n     * 3.  Start the timer and fetch the file content using that presigned URL\n     */\n    getEntity(sessionToken, TEST_FILE_ENTITY_ID)\n      .then((entity: Entity) => {\n        const fileEntity: FileEntity = entity as FileEntity\n        const fileHandleAssociationList: FileHandleAssociation[] = [\n          {\n            associateObjectId: fileEntity.id!,\n            associateObjectType: FileHandleAssociateType.FileEntity,\n            fileHandleId: fileEntity.dataFileHandleId,\n          },\n        ]\n        const request: BatchFileRequest = {\n          includeFileHandles: true,\n          includePreSignedURLs: true,\n          includePreviewPreSignedURLs: false,\n          requestedFiles: fileHandleAssociationList,\n        }\n        getFiles(request, sessionToken).then((data: BatchFileResult) => {\n          const presignedUrl: string = data.requestedFiles[0].preSignedURL!\n          // we know this file exists\n          const fileHandle: FileHandle = data.requestedFiles[0].fileHandle!\n          // start test!\n          const startMs = new Date().getTime()\n          return getFileHandleContent(fileHandle, presignedUrl).then(() => {\n            // console.log(`Transferred ${fileHandle.contentSize/1000000} MB in ${((new Date().getTime() - startMs - ESTIMATED_CORS_TIME_MS)/1000)} seconds`)\n            // bytes/second\n            const result =\n              fileHandle.contentSize /\n              ((new Date().getTime() - startMs - ESTIMATED_CORS_TIME_MS) / 1000)\n            // save result in cache (for 5 minutes)\n            const now: number = new Date().getTime()\n            localStorage.setItem(\n              ESTIMATED_DOWNLOAD_SPEED_EXPIRE_TIME_KEY,\n              (now + 1000 * 60 * 5).toString(),\n            )\n            localStorage.setItem(\n              ESTIMATED_DOWNLOAD_SPEED_KEY,\n              result.toString(),\n            )\n            resolve(result)\n          })\n        })\n      })\n      .catch(err => reject(err))\n  })\n}\n","export const TOOLTIP_DELAY_SHOW = 500\nexport const SELECT_ALL = 'SELECT_ALL';\nexport const DESELECT_ALL = 'DESELECT_ALL';\nexport const DOWNLOAD_FILES_MENU_TEXT = 'Download Files'; // double check these icons!\nexport const ICON_STATE: string[] = ['sortdown', 'sortdown', 'sortup'];\n  ","import { useEffect, useRef } from 'react'\n\nconst usePrevious = <T>(value: T): T | undefined => {\n  const ref = useRef<T>()\n  useEffect(() => {\n    ref.current = value\n  })\n  return ref.current\n}\n\nexport default usePrevious\n","import usePrevious from './usePrevious'\n\nconst useCompare = <T extends string | number | boolean | undefined>(\n  val: T,\n) => {\n  const prevVal = usePrevious<T>(val)\n  return prevVal !== val\n}\n\nexport default useCompare\n","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheck, faLock } from '@fortawesome/free-solid-svg-icons'\n\nexport type CheckMarkProps = {\n  isCompleted: boolean | undefined\n}\nexport default function AccessApprovalCheckMark({\n  isCompleted,\n}: CheckMarkProps) {\n  return (\n    <div className={`check-mark-container ${isCompleted ? 'green' : 'orange'}`}>\n      <FontAwesomeIcon icon={isCompleted ? faCheck : faLock} />\n    </div>\n  )\n}\n","import { SynapseClient } from '..'\nimport { UserProfile, FileHandleAssociateType } from '../synapseTypes/'\n\n/*\n  Utility functions for UserCards\n*/\n\nfunction getUserProfileWithProfilePicAttached(\n  principalIds: string[],\n  token?: string,\n) {\n  return SynapseClient.getUserProfiles(principalIds).then((data) => {\n    // people will either have a profile pic file handle id\n    // or they won't. Have to break this down into two groups.\n    const withProfilePic = data.list.filter((value: any) => {\n      return value.profilePicureFileHandleId !== undefined\n    })\n    if (withProfilePic.length === 0) {\n      return data\n    }\n    const fileHandleAssociationList = withProfilePic.map((value) => {\n      return {\n        associateObjectId: value.ownerId,\n        associateObjectType: 'UserProfileAttachment',\n        fileHandleId: value.profilePicureFileHandleId,\n      }\n    })\n    const request: any = {\n      includeFileHandles: false,\n      includePreSignedURLs: true,\n      includePreviewPreSignedURLs: false,\n      requestedFiles: fileHandleAssociationList,\n    }\n    return SynapseClient.getFiles(request, token)\n      .then((fileHandleList) => {\n        // we retrieve all the persons with profile pic file handles\n        // so we next loop through them, find the original person in the data.list\n        // and add a field with their pre-signed url\n        fileHandleList.requestedFiles.forEach((fileHandle) => {\n          const matchingPersonIndex = data.list.findIndex((el) => {\n            return fileHandle.fileHandleId === el.profilePicureFileHandleId\n          })\n          data.list[matchingPersonIndex].clientPreSignedURL =\n            fileHandle.preSignedURL\n        })\n        return Promise.resolve(data)\n      })\n      .catch((err) => {\n        throw Error(`Err on getting user data ${err}`)\n      })\n  })\n}\n\ntype UserProfileAndImg = {\n  userProfile: UserProfile\n  preSignedURL: string\n}\nfunction getUserProfileWithProfilePic(\n  ownerId: string,\n  token?: string,\n): Promise<UserProfileAndImg> {\n  return SynapseClient.getUserProfileById(token, ownerId).then(\n    (userProfile: UserProfile) => {\n      // people will either have a profile pic file handle id\n      // or they won't. Have to break this down into two groups.\n      if (!userProfile.profilePicureFileHandleId) {\n        return Promise.resolve({ userProfile }) as any\n      }\n\n      const fileHandleAssociationList = [\n        {\n          associateObjectId: ownerId,\n          associateObjectType: FileHandleAssociateType.UserProfileAttachment,\n          fileHandleId: userProfile.profilePicureFileHandleId,\n        },\n      ]\n\n      const request = {\n        includeFileHandles: false,\n        includePreSignedURLs: true,\n        includePreviewPreSignedURLs: false,\n        requestedFiles: fileHandleAssociationList,\n      }\n\n      return SynapseClient.getFiles(request, token)\n        .then((fileHandleList) => {\n          // we retrieve all the persons with profile pic file handles\n          // so we next loop through them, find the original person in the data.list\n          // and add a field with their pre-signed url\n          const firstElement = fileHandleList.requestedFiles[0]\n          return Promise.resolve({\n            userProfile,\n            preSignedURL: firstElement.preSignedURL,\n          })\n        })\n        .catch((err) => {\n          console.log({ err })\n        })\n    },\n  )\n}\n\nconst COLORS: string[] = [\n  'chocolate',\n  'black',\n  'firebrick',\n  'maroon',\n  'olive',\n  'green',\n  'forestgreen',\n  'darkturquoise',\n  'teal',\n  'blue',\n  'navy',\n  'darkmagenta',\n  'purple',\n  'blue',\n  'orangered',\n  'blueviolet',\n]\n\nconst hash = (userName: string) => {\n  const val = userName\n    .split('')\n    .reduce(\n      (prevHash, currVal) =>\n        ((prevHash << 5) - prevHash + currVal.charCodeAt(0)) | 0,\n      0,\n    )\n  return Math.abs(val)\n}\n\nconst getColor = (userName: string) => {\n  const hashedUserName = hash(userName)\n  return COLORS[hashedUserName % COLORS.length]\n}\n\nexport {\n  getUserProfileWithProfilePicAttached,\n  getColor,\n  getUserProfileWithProfilePic,\n}\nexport default {\n  getUserProfileWithProfilePicAttached,\n  getColor,\n  getUserProfileWithProfilePic,\n}\n","import * as React from 'react'\n// ignore because this is rollup requiring imports be named a certain way\n// tslint:disable-next-line\nimport ReactTooltip from 'react-tooltip'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faCircle } from '@fortawesome/free-solid-svg-icons'\nimport { UserProfile } from '../utils/synapseTypes/'\nimport { getColor } from '../utils/functions/getUserData'\n\nlibrary.add(faCircle)\n\nexport type UserCardSmallProps = {\n  userProfile: UserProfile\n  preSignedURL?: string\n  hideText?: boolean\n  hideTooltip?: boolean\n  link?: string\n  extraSmall?: boolean\n}\n\nexport const UserCardSmall: React.FunctionComponent<UserCardSmallProps> = ({\n  userProfile,\n  hideText = false,\n  hideTooltip = false,\n  preSignedURL,\n  link,\n  extraSmall = false,\n}) => {\n  const linkLocation = link\n    ? link\n    : `https://www.synapse.org/#!Profile:${userProfile.ownerId}`\n  let img\n  let marginLeft\n  let label = ''\n  if (!hideTooltip) {\n    if (userProfile.displayName) {\n      label += userProfile.displayName\n    } else if (userProfile.firstName && userProfile.lastName) {\n      label += `${userProfile.firstName} ${userProfile.lastName}`\n    }\n    if (userProfile.userName) {\n      label += ` (${userProfile.userName})`\n    }\n    if (userProfile.position) {\n      label += ` <br/>${userProfile.position}`\n    }\n    if (userProfile.location) {\n      label += ` <br/>${userProfile.location}`\n    }\n  }\n\n  const imgClassName = `SRC-userImgSmall ${extraSmall ? 'extraSmall' : ''} ${\n    preSignedURL ? '' : 'SRC-centerContentInline'\n  } `\n  if (preSignedURL) {\n    marginLeft = '3px'\n    img = (\n      <div\n        className={imgClassName}\n        style={{ backgroundImage: `url(${preSignedURL})` }}\n        data-for={label}\n        data-tip={label}\n      />\n    )\n  } else {\n    const color = getColor(userProfile.userName)\n    marginLeft = '3px'\n    img = (\n      <div style={{ background: color }} className={imgClassName}>\n        {(userProfile.firstName && userProfile.firstName[0]) ||\n          userProfile.userName[0]}\n      </div>\n    )\n  }\n  return (\n    <a\n      href={linkLocation}\n      className={\n        'SRC-userCard UserCardSmall SRC-primary-text-color SRC-no-underline-on-hover '\n      }\n    >\n      {img}\n      <ReactTooltip delayShow={1000} id={label} multiline={true} />\n      {!hideText && (\n        <span\n          className=\"SRC-primary-text-color SRC-underline-on-hover\"\n          style={{ marginLeft, whiteSpace: 'nowrap' }}\n        >{`@${userProfile.userName}`}</span>\n      )}\n    </a>\n  )\n}\n","import * as React from 'react'\nimport { UserProfile } from '../utils/synapseTypes/'\nimport { SEPERATOR } from '../utils/SynapseConstants'\n\nexport type MenuAction = {\n  field: string\n  callback?: (userProfile: UserProfile) => void\n}\n\nexport type UserCardContextMenuProps = {\n  userProfile: UserProfile\n  menuActions: MenuAction[]\n}\n\nconst UserCardContextMenu: React.SFC<UserCardContextMenuProps> = (\n  props: UserCardContextMenuProps,\n) => {\n  const { menuActions = [], userProfile } = props\n  return (\n    <div className=\"dropdown open\">\n      <ul\n        className=\"dropdown-menu dropdown-menu-right\"\n        aria-labelledby=\"dropdownMenu1\"\n      >\n        {menuActions.map((menuAction, index) => {\n          const callback = () => menuAction.callback!(userProfile)\n          if (menuAction.field === SEPERATOR) {\n            return <hr className=\"SRC-break\" key={menuAction.field + index} />\n          }\n          return (\n            <li\n              key={menuAction.field}\n              style={{ listStyle: 'none' }}\n              className=\"SRC-menu-item SRC-table-dropdown-list SRC-primary-background-color-hover\"\n              onClick={callback}\n              onKeyPress={callback}\n            >\n              <button className=\"SRC-menuAction\">{menuAction.field}</button>\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n\nexport default UserCardContextMenu\n","import * as React from 'react'\n\nconst svg = (\n  <span className='SRC-certified-user-icon'>\n  <svg width=\"17\" height=\"20\" viewBox=\"0 0 17 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M5.63578 14.1759C5.53042 14.0916 5.40399 14.0284 5.27756 14.0284L4.39256 13.9652C3.48648 13.902 2.68576 13.4384 2.15897 12.7641L0.0518096 17.2523C-0.137835 17.6738 0.220382 18.1584 0.683957 18.0741L2.5804 17.7159C2.81219 17.6738 3.06505 17.7791 3.19148 18.0109L4.11862 19.6966C4.35041 20.1181 4.94042 20.097 5.13006 19.6545L7.174 15.2927C6.85793 15.1663 6.584 14.9977 6.31007 14.7659L5.63578 14.1759Z\" fill=\"#58A158\"/>\n    <path d=\"M16.6564 17.2523L14.5492 12.7641C14.0224 13.4384 13.2217 13.8809 12.3156 13.9652L11.4306 14.0284C11.2831 14.0495 11.1778 14.0916 11.0724 14.1759L10.3981 14.7448C10.1453 14.9555 9.85025 15.1452 9.53418 15.2716L11.5781 19.6334C11.7678 20.0549 12.3788 20.0759 12.5896 19.6756L13.5167 17.9899C13.6431 17.7791 13.8749 17.6527 14.1278 17.6948L16.0242 18.0531C16.4878 18.1374 16.8671 17.6738 16.6564 17.2523Z\" fill=\"#58A158\"/>\n    <path d=\"M10.2503 13.2277C10.5453 12.9748 10.9246 12.8063 11.3249 12.7852L12.2099 12.722C13.1371 12.6588 13.8746 11.9212 13.9378 10.9941L14.001 10.1091C14.0221 9.70873 14.1906 9.32944 14.4435 9.03444L15.0335 8.36015C15.6446 7.64372 15.6446 6.61121 15.0335 5.91585L14.4435 5.24156C14.1906 4.94655 14.0221 4.56727 14.001 4.16691L13.9378 3.2819C13.8746 2.35475 13.1371 1.61724 12.2099 1.55403L11.3249 1.49081C10.9246 1.46974 10.5453 1.30117 10.2503 1.04831L9.57597 0.458307C8.85954 -0.152769 7.82703 -0.152769 7.13167 0.458307L6.45738 0.985097C6.16237 1.23796 5.78309 1.40653 5.38273 1.4276L4.49772 1.49081C3.57057 1.55403 2.83306 2.29153 2.76985 3.21868L2.70664 4.10369C2.68556 4.50405 2.51699 4.88334 2.26413 5.17834L1.67413 5.85263C1.06305 6.56907 1.06305 7.60157 1.67413 8.29694L2.26413 8.97123C2.51699 9.26623 2.68556 9.64552 2.70664 10.0459L2.76985 10.9309C2.83306 11.858 3.57057 12.5955 4.49772 12.6588L5.38273 12.722C5.78309 12.743 6.16237 12.9116 6.45738 13.1645L7.13167 13.7545C7.8481 14.3656 8.88061 14.3656 9.57597 13.7545L10.2503 13.2277ZM4.39236 7.11693C4.39236 4.92548 6.16237 3.15547 8.35382 3.15547C10.5453 3.15547 12.3153 4.92548 12.3153 7.11693C12.3153 9.30837 10.5453 11.0784 8.35382 11.0784C6.16237 11.0784 4.39236 9.2873 4.39236 7.11693Z\" fill=\"#58A158\"/>\n    <path d=\"M10.5875 6.0844L9.49182 5.87368C9.38646 5.85261 9.28111 5.7894 9.23896 5.68404L8.6911 4.69367C8.5436 4.44081 8.16431 4.44081 8.03788 4.69367L7.49002 5.68404C7.42681 5.7894 7.34252 5.85261 7.23716 5.87368L6.14144 6.0844C5.84644 6.14761 5.74108 6.50583 5.93072 6.71654L6.6893 7.53834C6.77359 7.62262 6.79466 7.72798 6.79466 7.83334L6.66823 8.95013C6.62609 9.24513 6.94216 9.45585 7.19502 9.32942L8.20646 8.84477C8.31181 8.80263 8.41717 8.80263 8.52253 8.84477L9.53396 9.32942C9.8079 9.45585 10.1029 9.24513 10.0608 8.95013L9.93433 7.83334C9.91325 7.72798 9.9554 7.60155 10.0397 7.53834L10.7983 6.71654C10.9879 6.48476 10.8825 6.14761 10.5875 6.0844Z\" fill=\"#C94281\"/>\n  </svg>\n  </span>\n)\nexport default svg\n\n","import * as React from 'react'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faCircle,\n  faEllipsisV,\n  faCopy,\n} from '@fortawesome/free-solid-svg-icons'\nimport CertifiedUserIcon from '../assets/icons/CertifiedUser'\nimport { UserProfile } from '../utils/synapseTypes/'\n\nlibrary.add(faCircle)\nlibrary.add(faEllipsisV)\nlibrary.add(faCopy)\n\ntype UserCardLargeProps = {\n  userProfile: UserProfile\n  isCertified?: boolean\n}\n\n/**\n * UserCardLarge wraps around UserCardMedium\n *\n * @export UserCardLarge\n * @param {UserCardLargeProps} { userProfile }\n */\n// Disable function name because compiler has to know that its a class\n// tslint:disable-next-line:function-name\nexport function UserCardLarge({ userProfile, isCertified }: UserCardLargeProps) {\n  const { summary, industry, location, url } = userProfile\n\n  return (\n    <div className=\"SRC-cardMetaData\">\n      <div className=\"SRC-cardMetaData-scroll\">\n        {summary && (\n          <div>\n            <p className=\"SRC-card-metadata-title\"> Bio </p>\n            <p>{summary}</p>\n          </div>\n        )}\n        {url && (\n          <div>\n            <p className=\"SRC-card-metadata-title\"> More Info </p>\n            <p>{url}</p>\n          </div>\n        )}\n        {industry && (\n          <div>\n            <p className=\"SRC-card-metadata-title\"> Industry </p>\n            <p>{industry}</p>\n          </div>\n        )}\n        {location && (\n          <div>\n            <p className=\"SRC-card-metadata-title\"> Location </p>\n            <p>{location}</p>\n          </div>\n        )}\n        {isCertified && (\n          <div>\n            <p className=\"SRC-card-metadata-title\"> Access </p>\n            <p>{CertifiedUserIcon} Certified Account</p>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\n\nconst svg = (\n  <svg width=\"12\" height=\"14\" viewBox=\"0 0 12 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      // tslint:disable-next-line:max-line-length\n      d=\"M10.7368 12.7273H3.78947V3.81818H10.7368V12.7273ZM10.7368 2.54545H3.78947C3.45446 2.54545 3.13317 2.67954 2.89629 2.91823C2.6594 3.15691 2.52632 3.48063 2.52632 3.81818V12.7273C2.52632 13.0648 2.6594 13.3885 2.89629 13.6272C3.13317 13.8659 3.45446 14 3.78947 14H10.7368C11.0719 14 11.3931 13.8659 11.63 13.6272C11.8669 13.3885 12 13.0648 12 12.7273V3.81818C12 3.48063 11.8669 3.15691 11.63 2.91823C11.3931 2.67954 11.0719 2.54545 10.7368 2.54545V2.54545ZM8.8421 0H1.26316C0.928148 0 0.606858 0.134091 0.36997 0.372773C0.133082 0.611456 0 0.935179 0 1.27273V10.1818H1.26316V1.27273H8.8421V0Z\"\n      fill=\"#DCDCDC\"\n    />\n  </svg>\n)\nexport default svg\n","import * as React from 'react'\n\nconst svg = (\n  <span className='SRC-validatedProfileIcon'>\n    <svg width=\"18\" height=\"18\" viewBox=\"0 0 18 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path d=\"M1.21612 12.9284C1.00431 13.5978 1.46323 14.3024 2.16925 14.4081L2.62816 14.4786C3.12238 14.5491 3.51069 14.9366 3.61659 15.4299L3.68719 15.8879C3.7931 16.5925 4.49912 17.0153 5.20514 16.8039L5.66405 16.663C6.15827 16.5221 6.68778 16.6982 6.97019 17.121L7.2526 17.5086C7.67621 18.0723 8.48813 18.178 9.01765 17.6847L9.37066 17.3676C9.75897 17.0153 10.2885 16.9448 10.7474 17.1915L11.171 17.4029C11.8064 17.7552 12.5831 17.4733 12.8302 16.8039L13.0067 16.3811C13.1832 15.9231 13.6774 15.606 14.1716 15.6413L14.6305 15.6765C15.3365 15.7117 15.9367 15.1128 15.8661 14.4081L15.8307 13.9501C15.7954 13.4569 16.0779 12.9636 16.5721 12.7875L16.9957 12.6113C17.6664 12.3294 17.9135 11.5543 17.5605 10.9554L17.2428 10.5678C16.9957 10.145 17.0663 9.58133 17.384 9.19378L17.7017 8.84145C18.1606 8.31297 18.09 7.50264 17.4899 7.07985L17.1016 6.83322C16.678 6.55137 16.5015 6.02289 16.6427 5.52964L16.7839 5.07162C16.9957 4.40221 16.5368 3.69757 15.8307 3.59187L15.3718 3.52141C14.8776 3.45094 14.4893 3.06339 14.3834 2.57014L14.3128 2.11212C14.2069 1.40748 13.5009 0.984696 12.7949 1.19609L12.3359 1.33702C11.8417 1.47795 11.3122 1.30179 11.0298 0.879L10.7474 0.491447C10.3238 -0.072267 9.51186 -0.177963 8.98235 0.315286L8.62934 0.632375C8.24103 0.984696 7.71151 1.05516 7.2526 0.808536L6.82899 0.597143C6.19357 0.244822 5.41694 0.526679 5.16984 1.19609L4.99333 1.61887C4.81683 2.07689 4.32261 2.39398 3.8284 2.35875L3.44009 2.28828C2.73407 2.25305 2.13395 2.852 2.20455 3.55664L2.23985 4.01466C2.27515 4.50791 1.99274 5.00116 1.49853 5.17732L1.07492 5.35348C0.404196 5.63533 0.15709 6.41044 0.5101 7.00939L0.757207 7.39694C1.00431 7.81972 0.933712 8.38344 0.616003 8.77099L0.298294 9.12331C-0.16062 9.65179 -0.0900176 10.4621 0.5101 10.8849L0.898411 11.1315C1.32202 11.4134 1.49853 11.9419 1.35732 12.4351L1.21612 12.9284ZM6.37007 7.6788L7.92332 9.26424L11.6652 5.56487L13.2891 7.18555L9.54716 10.8497L7.92332 12.4704L6.29947 10.8497L4.74622 9.29947L6.37007 7.6788Z\" fill=\"#28A745\"/>\n    </svg>\n  </span>\n)\nexport default svg\n\n","import * as React from 'react'\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\nexport type ToastMessageProps = {\n  text: string\n  show: boolean\n  autohide: boolean\n}\n\n/**\n * Generalization of a Material-style toast message used in a couple of places. In the future,\n * we could consider scaffolding this to support multiple messages that can be triggered by sibling/child components\n * using a dispatch function passed via context.\n */\nexport const ToastMessage: React.FunctionComponent<ToastMessageProps> = ({\n  text,\n  show,\n  autohide,\n}) => {\n  return (\n    <TransitionGroup>\n      {show && (\n        <CSSTransition\n          classNames=\"SRC-card\"\n          timeout={autohide ? { enter: 500, exit: 300 } : {}}\n        >\n          <div className=\"SRC-modal\">{text}</div>\n        </CSSTransition>\n      )}\n    </TransitionGroup>\n  )\n}\n","import * as React from 'react'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faCircle,\n  faEllipsisV,\n  faCopy,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { getColor } from '../utils/functions/getUserData'\nimport { UserProfile } from '../utils/synapseTypes/'\nimport UserCardContextMenu, { MenuAction } from './UserCardContextMenu'\nimport { UserCardLarge } from './UserCardLarge'\nimport IconCopy from '../assets/icons/IconCopy'\nimport ValidatedProfileIcon from '../assets/icons/ValidatedProfile'\nimport ReactTooltip from 'react-tooltip'\nimport { ToastMessage } from './ToastMessage'\n\nlibrary.add(faCircle)\nlibrary.add(faEllipsisV)\nlibrary.add(faCopy)\n\ntype UserCardState = {\n  showModal: boolean\n  isContextMenuOpen: boolean\n}\n\nexport type UserCardMediumProps = {\n  userProfile: UserProfile\n  menuActions?: MenuAction[]\n  preSignedURL?: string\n  hideEmail?: boolean\n  isLarge?: boolean\n  link?: string\n  disableLink?: boolean\n  isCertified?: boolean\n  isValidated?: boolean\n}\n\nexport default class UserCardMedium extends React.Component<\n  UserCardMediumProps,\n  UserCardState\n> {\n  public htmlDivRef = React.createRef<HTMLDivElement>()\n\n  constructor(props: UserCardMediumProps) {\n    super(props)\n    this.state = {\n      showModal: false,\n      isContextMenuOpen: false,\n    }\n  }\n\n  /**\n   * Function handles copying to clipboard the user's email address\n   *\n   * @param {string} value the email address of the user\n   * @returns\n   */\n  public copyToClipboard = (value: string) => (event: React.SyntheticEvent) => {\n    event.preventDefault()\n    // https://hackernoon.com/copying-text-to-clipboard-with-javascript-df4d4988697f\n    // this copies the email to the clipoard\n    const el = document.createElement('textarea')\n    el.value = value\n    el.setAttribute('readonly', '')\n    el.style.position = 'absolute'\n    el.style.left = '-9999px'\n    this.htmlDivRef.current!.appendChild(el)\n    el.select()\n    document.execCommand('copy')\n    this.htmlDivRef.current!.removeChild(el)\n    // show modal and hide after 4 seconds, the timing is per Material Design\n    this.setState({ showModal: true })\n    // hide after 4 seconds\n    setTimeout(() => {\n      this.setState({ showModal: false })\n    }, 4000)\n  }\n\n  public toggleContextMenu = (_event: any) => {\n    this.setState({ isContextMenuOpen: !this.state.isContextMenuOpen })\n  }\n\n  public componentDidMount() {\n    // SWC-4778: https://stackoverflow.com/questions/23821768/how-to-listen-for-click-events-that-are-outside-of-a-component\n    window.addEventListener('mouseup', this.pageClick, false)\n  }\n\n  public componentWillUnmount() {\n    window.removeEventListener('mouseup', this.pageClick, false)\n  }\n\n  public pageClick = (_event: any) => {\n    if (!this.state.isContextMenuOpen) {\n      return\n    }\n    // hide content menu (deferred, to allow menu action to process)\n    setTimeout(() => {\n      if (this.state.isContextMenuOpen) {\n        this.toggleContextMenu(_event)\n      }\n    }, 10)\n  }\n\n  render() {\n    const {\n      userProfile,\n      menuActions,\n      isLarge = false,\n      preSignedURL,\n      hideEmail = false,\n      disableLink = false,\n      link,\n      isValidated,\n      isCertified,\n    } = this.props\n    const { isContextMenuOpen, showModal } = this.state\n    const {\n      displayName,\n      userName,\n      firstName,\n      lastName,\n      position,\n      company,\n    } = userProfile\n    const validatedUserProfileTooltipId = `${userName}-tooltip`\n    let img\n    let name = ''\n    const linkLocation = link\n      ? link\n      : `https://www.synapse.org/#!Profile:${userProfile.ownerId}`\n    // linkLocation is overriden by custom click handler\n    const email = `${userName}@synapse.org`\n    if (displayName) {\n      name = displayName\n    } else if (firstName && lastName) {\n      name = `${firstName} ${lastName}`\n    } else if (userName) {\n      name = userName\n    }\n    if (preSignedURL) {\n      img = (\n        <div\n          style={{ backgroundImage: `url(${preSignedURL})` }}\n          className=\"SRC-userImg\"\n        />\n      )\n    } else {\n      img = (\n        <div\n          style={{ background: getColor(userName) }}\n          className=\"SRC-userImg SRC-centerContentInline\"\n        >\n          {userProfile.firstName &&\n            (userProfile.firstName[0] || userProfile.userName[0])}\n        </div>\n      )\n    }\n    const mediumCard = (\n      <React.Fragment>\n        {!hideEmail && (\n          <ToastMessage\n            show={showModal}\n            text=\"Email address copied to clipboard\"\n            autohide={true}\n          ></ToastMessage>\n        )}\n        {disableLink && img}\n        {!disableLink && (\n          <a\n            href={linkLocation}\n            className={`SRC-no-underline-on-hover ${\n              isLarge ? 'SRC-isLargeCard' : ''\n            }`}\n          >\n            {img}\n          </a>\n        )}\n        <div className=\"SRC-cardContent\">\n          <p className=\"SRC-eqHeightRow SRC-userCardName\">\n            {/*\n              if its a medium component the header should be clickable (unless disableLink is set),\n              if its large then it should NOT be clickable\n            */}\n            {/* make SRC-whiteText overridable with a good name! */}\n            {isLarge || disableLink ? (\n              <span className={isLarge ? 'SRC-whiteText' : 'SRC-blackText'}>\n                {name}\n              </span>\n            ) : (\n              // consolidate click events\n              <a\n                href={linkLocation}\n                tabIndex={0}\n                className={'SRC-hand-cursor SRC-primary-text-color'}\n              >\n                {name}\n              </a>\n            )}\n            {isValidated && (\n              <span\n                data-for={validatedUserProfileTooltipId}\n                data-tip=\"This user profile has been validated.\"\n              >\n                <ReactTooltip\n                  delayShow={300}\n                  place=\"bottom\"\n                  type=\"dark\"\n                  effect=\"solid\"\n                  id={validatedUserProfileTooltipId}\n                />\n                {ValidatedProfileIcon}\n              </span>\n            )}\n          </p>\n          {(position || company) && (\n            <p className={`${isLarge ? 'SRC-whiteText' : ''}`}>\n              {position} {position ? ' / ' : ''} {company}\n            </p>\n          )}\n          {!hideEmail && (\n            <p\n              className={`${\n                isLarge\n                  ? 'SRC-whiteText'\n                  : 'SRC-primary-text-color SRC-primary-color-hover'\n              }\n              SRC-hand-cursor SRC-eqHeightRow SRC-inlineFlex SRC-emailText SRC-cardSvg`}\n              onClick={this.copyToClipboard(email)}\n              onKeyPress={this.copyToClipboard(email)}\n              tabIndex={0}\n              ref={this.htmlDivRef}\n            >\n              <span style={{ paddingRight: '5px' }}>\n                {`${userName}@synapse.org`}\n              </span>\n              {IconCopy}\n            </p>\n          )}\n        </div>\n        {/* conditionally render menu actions, if its not defined then we don't show the button */}\n        {menuActions && (\n          <React.Fragment>\n            <span\n              className={`SRC-extraPadding SRC-hand-cursor SRC-primary-background-color-hover SRC-inlineBlock\n              SRC-cardMenuButton ${\n                isContextMenuOpen ? 'SRC-primary-background-color' : ''\n              }`}\n              style={{ outline: 'none' }}\n              tabIndex={0}\n              onClick={this.toggleContextMenu}\n              onKeyPress={this.toggleContextMenu}\n            >\n              <FontAwesomeIcon\n                className={\n                  isContextMenuOpen || isLarge\n                    ? 'SRC-whiteText'\n                    : 'SRC-primary-text-color'\n                }\n                icon=\"ellipsis-v\"\n                fixedWidth={true}\n              />\n            </span>\n            {isContextMenuOpen && (\n              <UserCardContextMenu\n                menuActions={menuActions}\n                userProfile={userProfile}\n              />\n            )}\n          </React.Fragment>\n        )}\n        {!menuActions && <span style={{ padding: '0px 0px 0px 35px' }} />}\n      </React.Fragment>\n    )\n\n    if (!isLarge) {\n      return (\n        <div\n          style={{ border: '1px solid #DDDDDF', backgroundColor: 'white' }}\n          className={`SRC-userCard SRC-userCardMediumUp ${\n            isContextMenuOpen ? 'SRC-hand-cursor' : ''\n          }`}\n          onClick={isContextMenuOpen ? this.toggleContextMenu : undefined}\n        >\n          {mediumCard}\n        </div>\n      )\n    }\n    // else return medium card inside large component\n    // when the component is large we have to set the click handler to wrap both the top and bottom portion\n    return (\n      <div\n        className={\n          isContextMenuOpen ? 'SRC-hand-cursor cardContainer' : 'cardContainer'\n        }\n        onClick={isContextMenuOpen ? this.toggleContextMenu : undefined}\n      >\n        <div\n          className={`SRC-primary-background-color SRC-userCard SRC-userCardMediumUp ${\n            isContextMenuOpen ? 'SRC-hand-cursor' : ''\n          }`}\n        >\n          {mediumCard}\n        </div>\n        {isLarge ? (\n          <UserCardLarge userProfile={userProfile} isCertified={isCertified} />\n        ) : (\n          false\n        )}\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\nimport { getUserProfileWithProfilePic } from '../utils/functions/getUserData'\nimport { getPrincipalAliasRequest } from '../utils/SynapseClient'\nimport { MenuAction } from './UserCardContextMenu'\nimport { UserProfile } from '../utils/synapseTypes/'\nimport { SynapseConstants } from '../utils/'\nimport { UserCardSmall } from './UserCardSmall'\nimport UserCardMedium from './UserCardMedium'\n\ntype UserCardState = {\n  userProfile: UserProfile | undefined\n  preSignedURL: string\n  isLoading: boolean\n}\n\nexport type UserCardSize =\n  | 'SMALL USER CARD'\n  | 'MEDIUM USER CARD'\n  | 'LARGE USER CARD'\n\nexport type UserCardProps = {\n  // Note - either specify userProfile OR (alias or ownerId)\n  userProfile?: UserProfile\n  hideEmail?: boolean\n  preSignedURL?: string\n  alias?: string\n  ownerId?: string\n  size: UserCardSize\n  hideText?: boolean\n  hideTooltip?: boolean\n  menuActions?: MenuAction[]\n  link?: string\n  token?: string\n  disableLink?: boolean\n  extraSmall?: boolean\n  isCertified?: boolean\n  isValidated?: boolean\n}\n\nexport default class UserCard extends React.Component<\n  UserCardProps,\n  UserCardState\n> {\n  constructor(props: UserCardProps) {\n    super(props)\n    this.state = { userProfile: undefined, isLoading: true, preSignedURL: '' }\n    this.getUserProfile = this.getUserProfile.bind(this)\n  }\n\n  public componentDidMount() {\n    const { userProfile, ownerId, alias, token } = this.props\n    if (userProfile) {\n      return\n    }\n    if (alias) {\n      getPrincipalAliasRequest(token, alias, 'USER_NAME').then(\n        (aliasData: any) => {\n          this.getUserProfile(aliasData.principalId!)\n        },\n      )\n    } else {\n      // check for ownerId!\n      this.getUserProfile(ownerId!)\n    }\n  }\n\n  public getUserProfile(ownerId: string) {\n    getUserProfileWithProfilePic(ownerId!, this.props.token)\n      .then((data) => {\n        const { userProfile, preSignedURL } = data\n        this.setState({ userProfile, preSignedURL, isLoading: false })\n      })\n      .catch((err) => {\n        console.log('failed to get user bundle ', err)\n      })\n  }\n\n  public render() {\n    const {\n      userProfile,\n      preSignedURL,\n      size,\n      ...rest\n    } = this.props\n    let userProfileAtRender\n    let preSignedURLAtRender\n    if (!userProfile) {\n      // userProfile wasn't passed in from props\n      if (this.state.isLoading) {\n        // still making the API call\n        return <></>\n      }\n      userProfileAtRender = this.state.userProfile\n      preSignedURLAtRender = this.state.preSignedURL\n    } else {\n      // otherwise we have the profile from props\n      userProfileAtRender = userProfile\n      preSignedURLAtRender = preSignedURL\n    }\n    const propsForChild = {\n      userProfile: userProfileAtRender!,\n      preSignedURL: preSignedURLAtRender,\n      ...rest,\n    }\n    switch (size) {\n      case SynapseConstants.SMALL_USER_CARD:\n        return <UserCardSmall {...propsForChild} />\n      case SynapseConstants.MEDIUM_USER_CARD:\n        return <UserCardMedium {...propsForChild} />\n      case SynapseConstants.LARGE_USER_CARD:\n        return <UserCardMedium isLarge={true} {...propsForChild} />\n      default:\n        return <span />\n    }\n  }\n}\n","import * as React from 'react'\n\ntype BookmarksProps = {\n  footnotes: string\n}\n\nclass Bookmarks extends React.Component<BookmarksProps, {}> {\n  constructor(props: BookmarksProps) {\n    super(props)\n    this.renderBookmarks = this.renderBookmarks.bind(this)\n  }\n\n  /**\n   * Returns bookmarks\n   *\n   * @returns JSX for the embedded bookmarks in the markdown passed in as a prop\n   * @memberof Bookmarks\n   */\n  public renderBookmarks() {\n    const copyFootnotes: string = String(this.props.footnotes)\n\n    // find all the links embedded in the markdown below\n    const regex = /Synapse widget&gt;<\\/span>(.*)</g\n    let matchedGroup: RegExpExecArray | null\n    const output = []\n    // below we use regex.exec to find the find matched group containing the citation source\n    while ((matchedGroup = regex.exec(copyFootnotes))) {\n      output.push(matchedGroup[1])\n    }\n\n    // return all the links formatted accordingly\n    return output.map((el, index) => {\n      const isBeforeLastElement = index < output.length - 1\n      return (\n        <React.Fragment key={index}>\n          <button className=\"SRC-markdown-bookmark\" id={`bookmark${index}`}>\n            [{index + 1}]\n          </button>\n          <span dangerouslySetInnerHTML={{ __html: el }} />\n          {isBeforeLastElement && <br />}\n        </React.Fragment>\n      )\n    })\n  }\n\n  public render() {\n    return (\n      <React.Fragment>\n        <hr />\n        {this.renderBookmarks()}\n      </React.Fragment>\n    )\n  }\n}\n\nexport default Bookmarks\n","import * as React from 'react'\nimport { getEntity, getFiles } from '../../utils/SynapseClient'\nimport {\n  BatchFileRequest,\n  BatchFileResult,\n  FileEntity,\n  FileHandle,\n  FileHandleAssociateType,\n  FileHandleAssociation,\n} from '../../utils/synapseTypes/'\n\ntype SynapseImageProps = {\n  wikiId?: string\n  synapseId?: string\n  token?: string\n  fileName?: string\n  fileResults?: FileHandle[]\n  params: {\n    align: string\n    scale: string\n    // this should be treated as a boolean, but the actual type that will come through\n    // is a string which I don't want to mis-represent\n    responsive: string\n    altText: string\n  }\n}\n\ntype SynapseImageState = {\n  preSignedURL: string\n}\n\nclass SynapseImage extends React.Component<\n  SynapseImageProps,\n  SynapseImageState\n> {\n  constructor(props: SynapseImageProps) {\n    super(props)\n    this.getEntity = this.getEntity.bind(this)\n    this.getSynapseFiles = this.getSynapseFiles.bind(this)\n    this.state = {\n      preSignedURL: '',\n    }\n  }\n\n  public getEntity() {\n    const { token, synapseId } = this.props\n    if (synapseId) {\n      getEntity<FileEntity>(token, synapseId).then(\n        // https://docs.synapse.org/rest/org/sagebionetworks/repo/model/FileEntity.html\n        (data: FileEntity) => {\n          const fileHandleAssociationList = [\n            {\n              associateObjectId: synapseId,\n              associateObjectType: FileHandleAssociateType.FileEntity,\n              fileHandleId: data.dataFileHandleId,\n            },\n          ]\n          this.getSynapseFiles(fileHandleAssociationList, data.dataFileHandleId)\n        },\n      )\n    }\n  }\n  public getSynapseFiles(\n    fileHandleAssociationList: FileHandleAssociation[],\n    id: string,\n  ) {\n    // overload the method for two different use cases, one where\n    // the image is attached to an entity and creates a list on the spot,\n    // the other where list is passed in from componentDidMount in MarkdownSynapse\n    const request: BatchFileRequest = {\n      includeFileHandles: false,\n      includePreSignedURLs: true,\n      includePreviewPreSignedURLs: false,\n      requestedFiles: fileHandleAssociationList,\n    }\n    getFiles(request, this.props.token)\n      .then((data: BatchFileResult) => {\n        const { preSignedURL } = data.requestedFiles.filter(\n          el => el.fileHandleId === id,\n        )[0]\n        this.setState({\n          preSignedURL: preSignedURL!,\n        })\n      })\n      .catch(err => {\n        console.error('Error on getting image ', err)\n      })\n  }\n  public componentDidMount() {\n    if (!this.props.wikiId) {\n      // Get file handle as external attachment\n      this.getEntity()\n    } else {\n      // Can get presigned url right away from wiki association\n      const { fileName, fileResults = [] } = this.props\n      const { id } = fileResults.filter(el => el.fileName === fileName)[0]\n      const fileHandleAssociationList: FileHandleAssociation[] = [\n        {\n          associateObjectId: this.props.wikiId,\n          associateObjectType: FileHandleAssociateType.WikiAttachment,\n          fileHandleId: id,\n        },\n      ]\n      this.getSynapseFiles(fileHandleAssociationList, id)\n    }\n  }\n\n  public render() {\n    const { params } = this.props\n    const { align = '', altText = 'synapse image' } = params\n    let scale = `${Number(params.scale) ?? 100}%`\n    const alignLowerCase = align.toLowerCase()\n    let className = ''\n    if (alignLowerCase === 'left') {\n      className = 'floatLeft'\n    }\n    if (alignLowerCase === 'right') {\n      className = 'floatright'\n    }\n    if (alignLowerCase === 'center') {\n      className = 'align-center'\n    }\n    let style: React.CSSProperties = {\n      width: scale,\n      height: scale,\n    }\n    if (!this.state.preSignedURL) {\n      return null\n    }\n    return (\n      <React.Fragment>\n        <img\n          alt={altText}\n          className={'img-fluid  ' + className}\n          src={this.state.preSignedURL}\n          style={style}\n        />\n      </React.Fragment>\n    )\n  }\n}\nexport default SynapseImage\n","import * as React from 'react'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faLongArrowAltUp,\n  faLongArrowAltDown,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { DOI_REGEX } from '../../../containers/GenericCard'\nlibrary.add(faLongArrowAltUp)\nlibrary.add(faLongArrowAltDown)\n\ntype State = {\n  isShowMoreOn: boolean\n  isDesktop: boolean\n}\n\ntype CardFooterProps = {\n  values: any[]\n  isHeader: boolean\n  secondaryLabelLimit?: number\n}\n\nclass CardFooter extends React.Component<CardFooterProps, State> {\n  constructor(props: CardFooterProps) {\n    super(props)\n    this.state = {\n      isShowMoreOn: false,\n      isDesktop: false,\n    }\n    this.toggleShowMore = this.toggleShowMore.bind(this)\n    this.updatePredicate = this.updatePredicate.bind(this)\n  }\n\n  toggleShowMore() {\n    this.setState({\n      isShowMoreOn: !this.state.isShowMoreOn,\n    })\n  }\n\n  componentDidMount() {\n    this.updatePredicate()\n    window.addEventListener('resize', this.updatePredicate)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updatePredicate)\n  }\n\n  updatePredicate() {\n    this.setState({ isDesktop: window.innerWidth > 600 })\n  }\n\n  renderRowValue = (columnName: string, value: string) => {\n    if (!value.match) {\n      // value can sometimes be a react element, so it doesn't have a .match function, interestingly I didn't\n      // see typeof return 'object' for that case which would be a better check.\n      return value\n    }\n    if (value.match(DOI_REGEX)) {\n      return (\n        <a\n          data-search-handle={columnName}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          href={`https://dx.doi.org/${value}`}\n        >\n          {value}\n        </a>\n      )\n    }\n    return value\n  }\n\n  renderRows = (values: string[][], limit: number, isDesktop: boolean) => {\n    return values.map((kv, index) => {\n      const hideClass = index >= limit ? 'SRC-hidden' : ''\n      const columnName = kv[0]\n      const value = this.renderRowValue(columnName, kv[1])\n      if (isDesktop) {\n        return (\n          <tr className={'SRC-cardRowDesktop ' + hideClass} key={index}>\n            <td className={'SRC-verticalAlignTop SRC-row-label'}>\n              {columnName}\n            </td>\n            <td\n              data-search-handle={columnName}\n              className={'SRC-row-data SRC-limitMaxWidth '}\n            >\n              {value}\n            </td>\n          </tr>\n        )\n      }\n      return (\n        <React.Fragment key={index}>\n          <tr className={'SRC-cardRowMobile ' + hideClass}>\n            <td className={'SRC-verticalAlignTop SRC-row-label'}>\n              {columnName}\n            </td>\n          </tr>\n          <tr className={'SRC-cardRowMobile ' + hideClass}>\n            <td\n              data-search-handle={columnName}\n              className=\"SRC-row-data SRC-limitMaxWidth\"\n            >\n              {value}\n            </td>\n          </tr>\n        </React.Fragment>\n      )\n    })\n  }\n\n  render() {\n    const { values, secondaryLabelLimit = 3 } = this.props\n    const { isShowMoreOn, isDesktop } = this.state\n    const valuesFiltered = values.filter(el => el[1])\n    const hasMoreValuesThanLimit = valuesFiltered.length > secondaryLabelLimit\n    const limit =\n      !hasMoreValuesThanLimit || isShowMoreOn ? Infinity : secondaryLabelLimit\n    return (\n      <div\n        className={`SRC-cardMetadata ${\n          this.props.isHeader ? 'SRC-card-footer-header' : ''\n        }`}\n      >\n        <table>\n          <tbody>\n            {this.renderRows(valuesFiltered, limit, isDesktop)}\n            {hasMoreValuesThanLimit && (\n              <tr className=\"SRC-cardRow\">\n                <td>\n                  <button\n                    style={{ textAlign: 'left', margin: 0, padding: 0 }}\n                    className=\"SRC-primary-text-color SRC-basicButton\"\n                    onClick={this.toggleShowMore}\n                  >\n                    Show {isShowMoreOn ? 'Less' : 'More'}\n                    <FontAwesomeIcon\n                      style={{ marginLeft: '5px' }}\n                      icon={\n                        isShowMoreOn\n                          ? 'long-arrow-alt-up'\n                          : 'long-arrow-alt-down'\n                      }\n                    />\n                  </button>\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\nexport default CardFooter\n","import * as React from 'react'\n\ntype ChipContainerProps = {\n  chips: any[]\n}\n\nconst ChipContainer: React.SFC<ChipContainerProps> = ({ chips }) => {\n  const chipsFormatted = chips.map((el, index) => {\n    if (!el) {\n      return false\n    }\n    return <span key={index}> {el}</span>\n  })\n  return <React.Fragment>{chipsFormatted}</React.Fragment>\n}\nexport default ChipContainer\n","import * as React from 'react'\n\nexport const Project = () => (\n  <svg width=\"60\" height=\"60\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path\n        d=\"M30 22a7.99 7.99 0 0 0-5.757 13.54 4.99 4.99 0 0 1 2.355-2.9 5 5 0 1 1 6.8 0 4.99 4.99 0 0 1 2.355 2.9A7.99 7.99 0 0 0 30 22z\"\n        className=\"SRC-icon-fill\"\n      />\n      <path\n        d=\"M30 32a3 3 0 1 0 0-6 3 3 0 0 0 0 6zM26.008 36.922a7.93 7.93 0 0 0 7.984 0A3 3 0 0 0 31 34h-2a3 3 0 0 0-2.992 2.922zM50.62 8.805a2.973 2.973 0 0 1 .259-3.926A3 3 0 0 1 56 6.999a2.972 2.972 0 0 1-.619 1.8 4 4 0 0 1 1.273 1.584 5 5 0 1 0-7.308 0 4 4 0 0 1 1.273-1.578z\"\n        className=\"SRC-icon-fill\"\n      />\n      <path\n        d=\"M53 8a1 1 0 1 0 0-2 1 1 0 0 0 0 2zM51.04 11.6a4.973 4.973 0 0 0 3.919 0 2 2 0 0 0-3.918 0zM53 54a1 1 0 1 0 0-2 1 1 0 0 0 0 2zM53 56a2 2 0 0 0-1.96 1.6 4.978 4.978 0 0 0 3.914 0A1.994 1.994 0 0 0 53 56z\"\n        className=\"SRC-icon-fill\"\n      />\n      <path\n        d=\"M53 48a4.983 4.983 0 0 0-3.654 8.388 4 4 0 0 1 1.273-1.583 2.972 2.972 0 0 1 .26-3.926A3 3 0 0 1 55.998 53a2.967 2.967 0 0 1-.618 1.8c.554.409.993.955 1.273 1.584A4.982 4.982 0 0 0 53 48zM5.04 11.6a4.973 4.973 0 0 0 3.919 0 2 2 0 0 0-3.918 0zM7 8a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"\n        className=\"SRC-icon-fill\"\n      />\n      <path\n        d=\"M4.619 8.805a2.972 2.972 0 0 1 .26-3.926A3 3 0 0 1 10 6.999a2.972 2.972 0 0 1-.619 1.8 4 4 0 0 1 1.273 1.584 5 5 0 1 0-7.308 0 4 4 0 0 1 1.273-1.578z\"\n        className=\"SRC-icon-fill\"\n      />\n      <path\n        d=\"M29.562 9.981a5 5 0 1 0 0 0zM28.072 2.7a2.976 2.976 0 0 1 2.196-.688 3 3 0 1 1-2.144 5.328 3 3 0 0 1-.051-4.64z\"\n        className=\"SRC-header-only-fill\"\n        fill=\"#DDDDDF\"\n      />\n      <path\n        d=\"M7 56a2 2 0 0 0-1.96 1.6 4.973 4.973 0 0 0 3.919 0 2 2 0 0 0-1.96-1.6zM7 54a1 1 0 1 0 0-2 1 1 0 0 0 0 2z\"\n        className=\"SRC-icon-fill\"\n      />\n      <path\n        d=\"M7 48a4.983 4.983 0 0 0-3.654 8.388 4 4 0 0 1 1.273-1.583 2.972 2.972 0 0 1 .26-3.926A3 3 0 0 1 9.999 53a2.972 2.972 0 0 1-.618 1.8 4 4 0 0 1 1.273 1.583A4.981 4.981 0 0 0 7 48z\"\n        className=\"SRC-icon-fill\"\n      />\n      <path\n        d=\"M18 29h-2v2h2v-2zM14 29h-2v2h2v-2zM48 29h-2v2h2v-2zM44 29h-2v2h2v-2zM31 16h-2v2h2v-2zM31 12h-2v2h2v-2zM31 46h-2v2h2v-2zM31 42h-2v2h2v-2zM29.562 50.019a5 5 0 1 0 .876 9.96 5 5 0 1 0-.876-9.96zm3.426 4.718a3 3 0 1 1-5.978.527 3 3 0 0 1 5.978-.528zM10 30a5 5 0 1 0-5 5 5.006 5.006 0 0 0 5-5zm-8 0a3 3 0 1 1 6 0 3 3 0 0 1-6 0zM55 25a5 5 0 1 0 5 5 5.006 5.006 0 0 0-5-5zm0 8a3 3 0 1 1 0-6 3 3 0 0 1 0 6zM40.7 22.787a16.249 16.249 0 0 0 9.258-10.512l-1.922-.55a14.263 14.263 0 0 1-8.124 9.224l-.309.132.788 1.838.309-.132zM49.961 47.725A16.248 16.248 0 0 0 40.7 37.213l-.309-.132-.788 1.838.309.132a14.261 14.261 0 0 1 8.124 9.224l1.925-.55zM11.961 11.725l-1.922.55A16.248 16.248 0 0 0 19.3 22.787l.31.132.787-1.838-.309-.132a14.263 14.263 0 0 1-8.127-9.224zM19.3 37.213a16.247 16.247 0 0 0-9.258 10.512l1.922.55a14.264 14.264 0 0 1 8.124-9.224l.309-.132-.788-1.838-.31.132z\"\n        fill=\"#DDDDDF\"\n        className=\"SRC-header-only-fill\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <path fill=\"#fff\" d=\"M0 0h60v60H0z\" />\n      </clipPath>\n    </defs>\n  </svg>\n)\n","import * as React from 'react'\nimport {\n  DATABASE,\n  DATASET,\n  FUNDER,\n  PUBLICATION,\n  STUDY_ACTIVE,\n  STUDY_COMPLETE,\n  TOOL,\n  STUDY,\n  EXPERIMENTAL,\n  COMPUTATIONAL,\n  CLINICAL,\n  PROJECT,\n  GRANT,\n  ORGANIZATION,\n  PERSON,\n  MOUSE,\n  EXPLORE,\n  SEARCH,\n  CHART,\n  FILTER,\n  DOWNLOAD,\n  EXPAND,\n  COLLAPSE,\n  CLOSE,\n  SORTUP,\n  SORTDOWN,\n  SETTINGS,\n  COLUMNS,\n  COLUMNSDARK,\n  VERTICAL_DOTS,\n  CHART2,\n  FILE,\n} from '../../../utils/SynapseConstants'\n\nimport Data2Svg from '../../../assets/icons/Data2.svg'\nimport studyActiveSvg from '../../../assets/icons/study-active.svg'\nimport studyCompleteSvg from '../../../assets/icons/study-complete.svg'\nimport DNA_TwoSvg from '../../../assets/icons/DNA_Two.svg'\nimport organizationsSvg from '../../../assets/icons/organizations.svg'\nimport personSvg from '../../../assets/icons/person.svg'\nimport mouseSvg from '../../../assets/icons/mouse.svg'\nimport chart2Svg from '../../../assets/icons/chart2.svg'\nimport fileSvg from '../../../assets/icons/file.svg'\n\nimport {\n  Project,\n  Publication,\n  Study,\n  ToolClinical,\n  ToolComputational,\n  ToolExperimental,\n  Database,\n  Explore,\n  Search,\n  Chart,\n  Filter,\n  Download,\n  Expand,\n  Collapse,\n  Close,\n  SortUp,\n  SortDown,\n  Settings,\n  Columns,\n  ColumnsDark,\n  VerticalDots,\n} from '../../../assets/themed_icons'\n\nimport { KeyValue } from '../../../utils/functions/sqlFunctions'\n\ntype IconProps = {\n  type: string\n  iconOptions?: KeyValue\n  value?: string\n  isHeader?: boolean\n  cssClass?: string\n}\n\nconst defaultIcons = {\n  [DATABASE]: Database, // this returns svg tag\n  [DATASET]: Data2Svg, // this returns img tag link to svg\n  [FUNDER]: Data2Svg,\n  [TOOL]: DNA_TwoSvg,\n  [STUDY_ACTIVE]: studyActiveSvg,\n  [STUDY_COMPLETE]: studyCompleteSvg,\n  // new icons\n  [PUBLICATION]: Publication,\n  [STUDY]: Study,\n  [EXPERIMENTAL]: ToolExperimental,\n  [COMPUTATIONAL]: ToolComputational,\n  [CLINICAL]: ToolClinical,\n  [PROJECT]: Project,\n  [GRANT]: Project,\n  [ORGANIZATION]: organizationsSvg,\n  [PERSON]: personSvg,\n  [MOUSE]: mouseSvg,\n  [EXPLORE]: Explore,\n  [SEARCH]: Search,\n  [CHART]: Chart,\n  [FILTER]: Filter,\n  [DOWNLOAD]: Download,\n  [EXPAND]: Expand,\n  [COLLAPSE]: Collapse,\n  [CLOSE]: Close,\n  [SORTUP]: SortUp,\n  [SORTDOWN]: SortDown,\n  [SETTINGS]: Settings,\n  [COLUMNS]: Columns,\n  [COLUMNSDARK]: ColumnsDark,\n  [VERTICAL_DOTS]: VerticalDots,\n  [CHART2]: chart2Svg,\n  [FILE]: fileSvg,\n}\nconst Icon: React.FunctionComponent<IconProps> = ({\n  type,\n  value = '',\n  iconOptions,\n  cssClass,\n}) => {\n  const iconSet = { ...defaultIcons, ...iconOptions }\n  // see if the value has a corresponding icon, e.g. 'Active' in a studies table\n  // or if the type of card has a corresponding icon, e.g. 'Publication'\n  const Icon = iconSet[value] || iconSet[type]\n  // TODO: get rid of dataset icon class, none of the icons should be special cased\n  const datasetIconClass =\n    value === DATASET || type === DATASET ? 'SRC-datasetIcon' : ''\n  if (typeof Icon == 'function') {\n    return (\n      <span className={cssClass}>\n        <Icon />\n      </span>\n    )\n  }\n  return <img src={Icon} className={`iconImg ${datasetIconClass}`} />\n}\nexport default Icon\n","import * as React from 'react'\n\nexport const Database = () => (\n  <svg data-icon=\"database\" width=\"28\" height=\"32\" viewBox=\"0 0 28 32\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path d=\"M25.9411 5.79833C25.9411 5.87044 25.9373 5.94255 25.9259 6.01466C25.9411 5.91219 25.9526 5.81351 25.9678 5.71104C25.945 5.88183 25.8993 6.04123 25.8345 6.20063C25.8726 6.10955 25.9107 6.01846 25.9488 5.92737C25.8993 6.04503 25.8383 6.15509 25.7698 6.26515C25.7355 6.31829 25.6974 6.36763 25.6632 6.42076C25.5946 6.52703 25.8383 6.21202 25.7545 6.3069C25.7317 6.32967 25.7127 6.35624 25.6898 6.38281C25.5946 6.49287 25.488 6.59914 25.3814 6.69782C25.328 6.74716 25.2709 6.79649 25.2138 6.84204C25.2024 6.84963 25.1262 6.90276 25.1262 6.91415C25.1262 6.89138 25.3737 6.72818 25.1948 6.86101C24.6502 7.26332 24.0409 7.57074 23.4202 7.83641C23.5116 7.79845 23.603 7.7605 23.6943 7.72255C21.9997 8.43606 20.1718 8.82318 18.3553 9.06988C18.4582 9.0547 18.5572 9.04331 18.66 9.02813C15.6592 9.42664 12.5898 9.42664 9.58899 9.02433C9.69181 9.03952 9.79082 9.0509 9.89364 9.06608C8.09239 8.81939 6.28353 8.43227 4.60033 7.73393C4.69173 7.77189 4.78312 7.80984 4.87452 7.84779C4.24237 7.58212 3.62545 7.27091 3.06946 6.86481C2.87524 6.72059 3.25606 7.01662 3.07327 6.86481C3.01614 6.81927 2.95902 6.76993 2.90571 6.72059C2.79527 6.62191 2.69245 6.51564 2.59344 6.40558C2.57059 6.37901 2.55155 6.35624 2.5287 6.32967C2.42588 6.21581 2.6201 6.43594 2.61629 6.44733C2.6201 6.43215 2.52109 6.3107 2.50966 6.29172C2.43731 6.17786 2.37257 6.06021 2.31925 5.93876C2.35734 6.02984 2.39542 6.12093 2.4335 6.21202C2.36876 6.05641 2.32306 5.89321 2.29641 5.72622C2.31164 5.82869 2.32306 5.92737 2.33829 6.02984C2.31925 5.87803 2.31925 5.72242 2.33829 5.57061C2.32306 5.67309 2.31164 5.77176 2.29641 5.87424C2.31925 5.71104 2.36495 5.55164 2.42969 5.39603C2.39161 5.48712 2.35353 5.5782 2.31545 5.66929C2.36114 5.55923 2.41827 5.45296 2.483 5.35049C2.51728 5.29356 2.55917 5.23663 2.59725 5.18349C2.65437 5.10379 2.75719 5.0127 2.49062 5.32012C2.50966 5.29735 2.5287 5.27458 2.54774 5.24801C2.63533 5.14174 2.73434 5.04307 2.83335 4.94818C2.89048 4.89505 2.9476 4.84192 3.00853 4.78878C3.06184 4.74324 3.28271 4.57245 3.08469 4.72426C2.88286 4.87987 3.12277 4.69769 3.17609 4.65974C3.24463 4.6142 3.31318 4.56486 3.38173 4.52311C3.52643 4.42823 3.67495 4.34094 3.82728 4.25744C4.17001 4.06768 4.52036 3.90068 4.88213 3.74887C4.79074 3.78682 4.69934 3.82478 4.60795 3.86273C6.29114 3.1606 8.10382 2.77348 9.90507 2.53058C9.80225 2.54576 9.70324 2.55715 9.60042 2.57233C11.9653 2.25732 14.372 2.19659 16.7483 2.37118C17.3919 2.42052 18.0354 2.48504 18.679 2.57233C18.5762 2.55715 18.4772 2.54576 18.3744 2.53058C20.1756 2.77348 21.9845 3.1606 23.6677 3.86273C23.5763 3.82478 23.4849 3.78682 23.3935 3.74887C23.7477 3.89689 24.0942 4.06008 24.4293 4.24605C24.5816 4.32955 24.7302 4.42064 24.8749 4.51172C24.951 4.56106 25.0234 4.6104 25.0957 4.65974C25.1529 4.69769 25.3852 4.87607 25.1871 4.72426C24.9853 4.56866 25.2138 4.75083 25.2633 4.78878C25.3204 4.83433 25.3737 4.88366 25.427 4.9368C25.5261 5.03168 25.6251 5.13036 25.7127 5.23663C25.7355 5.26319 25.7545 5.29735 25.7812 5.32012C25.7698 5.31253 25.5718 5.03927 25.6746 5.18349C25.7089 5.23663 25.7469 5.28597 25.7812 5.3391C25.8459 5.44537 25.9069 5.55543 25.9526 5.66929C25.9145 5.5782 25.8764 5.48712 25.8383 5.39603C25.9031 5.54784 25.9488 5.70724 25.9716 5.87424C25.9564 5.77176 25.945 5.67309 25.9297 5.57061C25.9335 5.64652 25.9373 5.72242 25.9411 5.79833C25.945 6.39419 26.4629 6.96349 27.0836 6.93692C27.7005 6.91035 28.2298 6.43594 28.226 5.79833C28.2146 4.27642 27.0341 3.14162 25.8079 2.41292C24.197 1.45271 22.3082 0.925168 20.4803 0.579796C18.0659 0.120565 15.5944 -0.0540191 13.142 0.0142962C10.8076 0.0788163 8.44274 0.344487 6.18071 0.940349C4.48609 1.38819 2.75338 2.0258 1.40149 3.16819C0.853121 3.63122 0.426609 4.21569 0.182888 4.88746C-0.117955 5.72242 0.053411 6.70541 0.529428 7.4417C1.18062 8.43606 2.22024 9.12681 3.28271 9.6202C4.36042 10.125 5.49524 10.4969 6.65292 10.7778C9.12821 11.3698 11.7063 11.6051 14.2463 11.5975C16.7978 11.59 19.3835 11.3395 21.8588 10.717C22.948 10.4438 24.0142 10.0794 25.0272 9.59742C26.0782 9.10024 27.1293 8.40191 27.7538 7.39615C28.0509 6.91794 28.2108 6.36383 28.2222 5.79833C28.2336 5.20247 27.6891 4.63317 27.0798 4.65974C26.4552 4.6901 25.9488 5.16072 25.9411 5.79833Z\" fill=\"#DDDDDF\"/>\n      <path d=\"M25.9334 5.97679C25.9334 6.74723 25.9334 7.52147 25.9334 8.29192C25.9334 9.51021 25.9334 10.7285 25.9334 11.9468C25.9334 12.2276 25.9639 12.5313 25.9296 12.8121C25.9449 12.7096 25.9563 12.611 25.9715 12.5085C25.9449 12.6755 25.8992 12.8387 25.8344 12.9981C25.8725 12.907 25.9106 12.8159 25.9487 12.7248C25.8992 12.8425 25.8382 12.9525 25.7697 13.0626C25.7583 13.0816 25.644 13.2258 25.6478 13.2372C25.644 13.2296 25.8382 13.0057 25.7354 13.1233C25.7126 13.1499 25.6935 13.1727 25.6707 13.1992C25.5717 13.3093 25.4688 13.4156 25.3584 13.5142C25.2975 13.5712 25.2327 13.6243 25.168 13.6774C25.1528 13.6888 25.0804 13.7306 25.0804 13.7496C25.0842 13.7154 25.3203 13.5712 25.149 13.6964C24.612 14.0873 24.0141 14.3872 23.4048 14.6452C23.4962 14.6073 23.5876 14.5693 23.679 14.5314C21.9844 15.2411 20.1641 15.6244 18.3514 15.8711C18.4542 15.8559 18.5533 15.8446 18.6561 15.8294C16.3179 16.1406 13.9454 16.2013 11.592 16.0305C10.9522 15.985 10.3124 15.9167 9.67268 15.8332C9.7755 15.8484 9.87451 15.8597 9.97733 15.8749C8.13038 15.6244 6.27201 15.2297 4.54692 14.5048C4.63831 14.5428 4.72971 14.5807 4.82111 14.6187C4.46695 14.4707 4.07852 14.2164 3.6939 14.2164C3.8843 14.2695 4.07852 14.3189 4.26893 14.372C3.99093 14.2316 3.71294 14.0797 3.45018 13.9128C3.32831 13.8368 3.21026 13.7571 3.09602 13.6736C2.8523 13.4953 3.24454 13.7989 3.09602 13.6774C3.04651 13.6357 2.99701 13.5939 2.9475 13.5522C2.8561 13.4725 2.76471 13.3852 2.67712 13.2979C2.63523 13.2562 2.59715 13.2106 2.55907 13.1689C2.5286 13.1347 2.3839 12.9525 2.5248 13.1347C2.66189 13.3131 2.5286 13.1347 2.50195 13.0968C2.47148 13.0512 2.44483 13.0057 2.41436 12.9601C2.35724 12.8653 2.30773 12.7666 2.26584 12.6641C2.30392 12.7552 2.34201 12.8463 2.38009 12.9374C2.31535 12.778 2.27346 12.6186 2.2468 12.4516C2.26204 12.554 2.27346 12.6527 2.28869 12.7552C2.26204 12.5313 2.28488 12.2884 2.28488 12.0606C2.28488 11.5179 2.28488 10.9752 2.28488 10.4325C2.28488 9.21038 2.28488 7.98829 2.28488 6.76621C2.28488 6.48156 2.28488 6.20071 2.28488 5.91606C1.52326 5.91606 0.761628 5.91606 0 5.91606C0.0723547 6.49674 0.232297 7.04326 0.575029 7.52906C0.959652 8.07179 1.41282 8.48548 1.94977 8.8726C3.00462 9.63925 4.28797 10.1099 5.52942 10.4856C5.26285 10.2199 4.99628 9.95426 4.72971 9.68859C4.88584 10.3338 5.58273 10.607 6.18061 10.6526C6.07779 10.6374 5.97878 10.626 5.87596 10.6108C5.94831 10.626 6.01305 10.6412 6.08541 10.6602C6.43956 10.7589 6.79753 10.6754 7.08314 10.4552C7.38398 10.2237 7.50204 9.93149 7.5325 9.55955C7.5325 9.55575 7.5325 9.55575 7.5325 9.55196C7.04887 9.9163 6.56904 10.2844 6.08541 10.6488C6.29486 10.6981 6.5043 10.7361 6.72137 10.7627C6.61855 10.7475 6.51954 10.7361 6.41672 10.7209C6.8318 10.8348 7.28878 10.941 7.68483 10.7019C7.3916 10.7399 7.09837 10.7778 6.80515 10.8158C9.84023 11.5141 13.0048 11.7191 16.1084 11.5483C17.7383 11.4572 19.372 11.2636 20.9714 10.9259C22.3995 10.626 23.8085 10.1972 25.1223 9.55955C25.8611 9.19899 26.5884 8.73976 27.1635 8.1477C27.4224 7.87823 27.6661 7.57461 27.8413 7.24441C28.0622 6.82314 28.1574 6.44361 28.2183 5.98058C28.2526 5.71111 28.066 5.35815 27.8832 5.17598C27.6852 4.97862 27.3615 4.8306 27.0759 4.84199C26.7788 4.85338 26.4742 4.95205 26.2685 5.17598C26.0477 5.40749 25.9753 5.65798 25.9334 5.97679C25.9334 5.99197 25.9296 6.00335 25.9296 6.01853C25.9449 5.91606 25.9563 5.81738 25.9715 5.71491C25.9449 5.8857 25.8992 6.0451 25.8344 6.2045C25.8725 6.11342 25.9106 6.02233 25.9487 5.93124C25.8992 6.0489 25.8382 6.15896 25.7697 6.26902C25.7354 6.32216 25.6973 6.3715 25.6631 6.42463C25.5945 6.5309 25.8382 6.21589 25.7544 6.31077C25.7316 6.33354 25.7126 6.36011 25.6897 6.38668C25.5945 6.49674 25.4917 6.60301 25.3813 6.70169C25.3279 6.75103 25.2708 6.80036 25.2137 6.84591C25.1832 6.86868 25.1566 6.89525 25.1261 6.91802C24.9814 7.03567 25.3089 6.78518 25.1947 6.86488C24.631 7.26339 24.0294 7.5822 23.3934 7.85166C23.4848 7.81371 23.5762 7.77576 23.6676 7.7378C21.9806 8.44373 20.1641 8.83085 18.3552 9.07375C18.4581 9.05857 18.5571 9.04718 18.6599 9.032C15.6591 9.43051 12.5897 9.43051 9.5889 9.0282C9.69172 9.04339 9.79073 9.05477 9.89355 9.06995C9.42134 9.00543 8.94532 8.92953 8.47692 8.84224C8.25986 8.80049 8.0466 8.75874 7.83334 8.7132C7.39922 8.62211 6.94986 8.48168 6.53477 8.73597C6.828 8.69801 7.12122 8.66006 7.41445 8.62211C7.17454 8.56518 6.9232 8.48168 6.67567 8.48168C6.77849 8.49686 6.8775 8.50825 6.98032 8.52343C6.88892 8.49307 6.79372 8.47789 6.69852 8.45511C6.33674 8.37162 5.99782 8.43234 5.70079 8.66006C5.39994 8.89157 5.28189 9.18381 5.25142 9.55575C5.25142 9.55955 5.25142 9.55955 5.25142 9.56334C5.73506 9.19899 6.21488 8.83085 6.69852 8.4665C6.51192 8.41716 6.31009 8.37162 6.11587 8.37162C6.21869 8.3868 6.3177 8.39818 6.42052 8.41337C6.32913 8.37541 6.23773 8.34126 6.14634 8.31089C6.41291 8.57656 6.67948 8.84224 6.94605 9.10791C6.81657 8.6259 6.4548 8.3868 6.00163 8.24637C5.84169 8.19703 5.67794 8.1439 5.51799 8.09077C5.1943 7.9807 4.87442 7.85925 4.55834 7.73021C4.64974 7.76817 4.74113 7.80612 4.83253 7.84407C4.50122 7.70365 4.17372 7.55183 3.85765 7.37725C3.70532 7.29375 3.5568 7.20646 3.41209 7.11158C3.34355 7.06604 3.275 7.02049 3.20645 6.97495C3.13029 6.92181 2.89038 6.72446 3.17599 6.95977C2.95512 6.77759 2.74186 6.59162 2.55526 6.37529C2.55145 6.3677 2.49052 6.30318 2.49052 6.29939C2.49433 6.29559 2.66951 6.54228 2.58192 6.41704C2.54384 6.36011 2.50195 6.30318 2.46387 6.24246C2.39532 6.13619 2.3382 6.02233 2.28869 5.90847C2.32677 5.99956 2.36486 6.09064 2.40294 6.18173C2.33058 6.01094 2.28108 5.83636 2.25442 5.65418C2.26965 5.75666 2.28108 5.85534 2.29631 5.95781C2.29631 5.94263 2.2925 5.93124 2.2925 5.91606C2.25442 5.60105 2.18968 5.34297 1.95738 5.11146C1.75936 4.9141 1.43567 4.76608 1.15006 4.77747C0.529331 4.80404 0.00761616 5.27845 0.00761616 5.91606C0.00761616 7.06604 0.00761616 8.21981 0.00761616 9.36978C0.00761616 10.1516 0.00761616 10.9296 0.00761616 11.7115C0.00761616 12.1669 -0.0190407 12.6224 0.0571221 13.074C0.175174 13.8027 0.624535 14.4707 1.14244 14.9792C1.45471 15.2867 1.80887 15.5523 2.17445 15.7952C2.34581 15.9091 2.51718 16.0116 2.69616 16.114C3.00462 16.2848 3.33974 16.4936 3.70151 16.4936C3.51111 16.4404 3.31689 16.3911 3.12648 16.3379C5.63986 17.5449 8.45788 18.0458 11.2188 18.2773C14.3986 18.5468 17.6469 18.395 20.7772 17.765C22.0796 17.5031 23.3439 17.1312 24.5663 16.6112C25.168 16.3569 25.7544 16.0609 26.2876 15.6814C26.8931 15.2487 27.4681 14.7401 27.8337 14.0797C28.0622 13.6661 28.2183 13.1992 28.2297 12.7248C28.2335 12.554 28.2297 12.3795 28.2297 12.2049C28.2297 11.4951 28.2297 10.7854 28.2297 10.0757C28.2297 8.73597 28.2297 7.40002 28.2297 6.06028C28.2297 6.03371 28.2297 6.00715 28.2297 5.98058C28.2297 5.38472 27.7042 4.81542 27.0873 4.84199C26.4551 4.86476 25.9334 5.33917 25.9334 5.97679Z\" fill=\"#DDDDDF\"/>\n      <path d=\"M25.9336 12.7703C25.9336 13.5407 25.9336 14.315 25.9336 15.0854C25.9336 16.3037 25.9336 17.522 25.9336 18.7403C25.9336 19.0211 25.9641 19.3247 25.9298 19.6056C25.9451 19.5031 25.9565 19.4044 25.9717 19.302C25.9451 19.469 25.8994 19.6322 25.8346 19.7916C25.8727 19.7005 25.9108 19.6094 25.9489 19.5183C25.8994 19.636 25.8384 19.746 25.7699 19.8561C25.7585 19.8751 25.6442 20.0193 25.648 20.0307C25.6442 20.0231 25.8384 19.7992 25.7356 19.9168C25.7128 19.9434 25.6937 19.9662 25.6709 19.9927C25.5719 20.1028 25.469 20.2091 25.3586 20.3077C25.2977 20.3647 25.2329 20.4178 25.1682 20.4709C25.153 20.4823 25.0806 20.5241 25.0806 20.543C25.0844 20.5089 25.3205 20.3647 25.1492 20.4899C24.6122 20.877 24.0143 21.1806 23.405 21.4387C23.4964 21.4008 23.5878 21.3628 23.6792 21.3249C21.9884 22.0346 20.1681 22.4217 18.3592 22.6646C18.4621 22.6494 18.5611 22.638 18.6639 22.6229C16.3143 22.9341 13.9304 22.9948 11.5655 22.824C10.9105 22.7785 10.2593 22.7102 9.61194 22.6229C9.71476 22.638 9.81377 22.6494 9.91659 22.6646C8.10011 22.4179 6.2722 22.0308 4.57758 21.3249C4.66898 21.3628 4.76037 21.4008 4.85177 21.4387C4.23104 21.1769 3.63697 20.8656 3.0886 20.4747C2.95912 20.3798 3.17619 20.5279 3.17999 20.5468C3.17619 20.5279 3.10764 20.4899 3.09241 20.4747C3.02767 20.4216 2.96674 20.3685 2.90581 20.3115C2.79537 20.2128 2.69255 20.1066 2.59354 19.9965C2.56688 19.9662 2.54023 19.932 2.51357 19.9016C2.42598 19.8105 2.67351 20.1218 2.60116 20.0193C2.56307 19.9624 2.51738 19.9054 2.4793 19.8447C2.40694 19.7308 2.34601 19.6132 2.28889 19.4879C2.32697 19.579 2.36505 19.6701 2.40313 19.7612C2.33078 19.5904 2.28127 19.4158 2.25462 19.2337C2.26985 19.3361 2.28127 19.4348 2.2965 19.5373C2.26985 19.3134 2.2927 19.0705 2.2927 18.8427C2.2927 18.3 2.2927 17.7573 2.2927 17.2146C2.2927 15.9925 2.2927 14.7742 2.2927 13.5521C2.2927 13.2674 2.2927 12.9866 2.2927 12.7019C1.53107 12.7019 0.769441 12.7019 0.0078125 12.7019C0.0687427 13.1764 0.167754 13.5749 0.396243 14.0037C0.579033 14.3453 0.834179 14.6641 1.10456 14.9374C1.41682 15.2524 1.7786 15.5257 2.14418 15.7723C2.32316 15.89 2.50595 16.0039 2.69255 16.1063C2.9972 16.2771 3.33994 16.4859 3.6979 16.4859C3.50749 16.4327 3.31328 16.3834 3.12287 16.3303C4.50903 16.9982 5.99421 17.4423 7.49842 17.7459C9.34537 18.1216 11.2342 18.319 13.1154 18.3759C15.1147 18.4328 17.1026 18.3228 19.0828 18.0495C20.686 17.8294 22.2854 17.4878 23.8011 16.9185C25.5985 16.243 27.8034 15.1537 28.188 13.0739C28.2452 12.7665 28.2337 12.4742 28.0738 12.1972C27.9367 11.9619 27.6625 11.7341 27.3921 11.6734C26.8323 11.5482 26.1012 11.8404 25.9869 12.4704C25.9527 12.664 25.907 12.85 25.8346 13.0321C25.8727 12.9411 25.9108 12.85 25.9489 12.7589C25.8917 12.8879 25.8232 13.0094 25.7432 13.127C25.7242 13.1536 25.7051 13.1802 25.6899 13.2067C25.6252 13.313 25.8651 12.998 25.7813 13.0929C25.7356 13.1422 25.6937 13.1953 25.6518 13.2447C25.549 13.3585 25.4424 13.461 25.3281 13.5635C25.271 13.6128 25.2139 13.6622 25.153 13.7077C25.0349 13.8026 25.2253 13.6546 25.2444 13.6356C25.2101 13.6698 25.1606 13.6963 25.1225 13.7229C24.5894 14.1024 23.9991 14.3947 23.3974 14.6489C23.4888 14.611 23.5802 14.573 23.6716 14.5351C21.9808 15.241 20.1605 15.6281 18.3478 15.871C18.4506 15.8558 18.5496 15.8445 18.6525 15.8293C16.3181 16.1405 13.9494 16.1898 11.6036 16.019C10.9638 15.9735 10.3241 15.9052 9.6843 15.8217C9.78712 15.8369 9.88613 15.8483 9.98895 15.8634C8.142 15.6129 6.28363 15.2182 4.55854 14.4933C4.64994 14.5313 4.74133 14.5692 4.83273 14.6072C4.47857 14.4592 4.09014 14.2049 3.70552 14.2049C3.89592 14.258 4.09014 14.3074 4.28055 14.3605C4.00255 14.2201 3.72456 14.0683 3.4618 13.9013C3.33993 13.8254 3.22188 13.7457 3.10764 13.6622C2.86392 13.4838 3.25616 13.7874 3.10764 13.666C3.05813 13.6242 3.00863 13.5825 2.95912 13.5407C2.86773 13.461 2.77633 13.3737 2.68874 13.2864C2.64685 13.2447 2.60877 13.1991 2.57069 13.1574C2.54023 13.1232 2.39552 12.9411 2.53642 13.1232C2.67351 13.3016 2.54023 13.1232 2.51357 13.0853C2.4831 13.0397 2.45645 12.9942 2.42598 12.9486C2.36886 12.8538 2.31935 12.7551 2.27746 12.6526C2.31555 12.7437 2.35363 12.8348 2.39171 12.9259C2.32697 12.7665 2.28508 12.6071 2.25842 12.4401C2.27366 12.5425 2.28508 12.6412 2.30031 12.7437C2.30031 12.7285 2.2965 12.7171 2.2965 12.7019C2.25842 12.3869 2.19369 12.1289 1.96139 11.8973C1.76337 11.7 1.43967 11.552 1.15406 11.5634C0.533336 11.5899 0.0116209 12.0643 0.0116209 12.7019C0.0116209 13.4269 0.0116209 14.148 0.0116209 14.8729C0.0116209 16.076 0.0116209 17.2791 0.0116209 18.4822C0.0116209 18.801 0.00781273 19.1198 0.0116209 19.4386C0.0268534 20.2584 0.449557 21.0099 0.978888 21.6095C1.66435 22.3876 2.62781 22.9379 3.57223 23.3478C4.47095 23.7387 5.39252 24.0537 6.34075 24.2928C8.5647 24.8583 10.8762 25.1164 13.1687 25.1771C15.5869 25.2416 18.0165 25.0746 20.3966 24.6306C21.3486 24.4522 22.293 24.2245 23.2146 23.9209C24.1514 23.6096 25.092 23.2339 25.9336 22.7102C26.8857 22.1181 27.7501 21.3249 28.1119 20.2394C28.2299 19.8789 28.2337 19.5221 28.2337 19.154C28.2337 18.0571 28.2337 16.9641 28.2337 15.8672C28.2337 14.8918 28.2337 13.9126 28.2337 12.9373C28.2337 12.8803 28.2337 12.8272 28.2337 12.7703C28.2337 12.1744 27.7082 11.6051 27.0913 11.6317C26.4553 11.6582 25.9336 12.1327 25.9336 12.7703Z\" fill=\"#DDDDDF\"/>\n      <path d=\"M25.9335 26.1867C25.9335 26.2626 25.9259 26.3423 25.9183 26.4183C25.9335 26.3158 25.945 26.2171 25.9602 26.1146C25.9373 26.2778 25.8916 26.4372 25.8269 26.5928C25.865 26.5017 25.9031 26.4107 25.9411 26.3196C25.8954 26.4296 25.8383 26.5359 25.7774 26.6384C25.7431 26.6953 25.7012 26.7522 25.6632 26.8054C25.606 26.8851 25.5032 26.9762 25.7698 26.6687C25.7507 26.6915 25.7317 26.7143 25.7127 26.7409C25.6251 26.8471 25.5299 26.9458 25.427 27.0407C25.3699 27.0938 25.3128 27.1469 25.2519 27.2001C25.1986 27.2456 24.9815 27.4164 25.1757 27.2646C25.3775 27.109 25.1376 27.2912 25.0843 27.3291C25.0158 27.3747 24.9472 27.424 24.8787 27.4658C24.734 27.5606 24.5854 27.6479 24.4331 27.7314C24.0942 27.9212 23.74 28.0882 23.3821 28.24C23.4735 28.202 23.5649 28.1641 23.6563 28.1261C21.9769 28.8283 20.168 29.2154 18.3668 29.4583C18.4696 29.4431 18.5686 29.4317 18.6714 29.4165C16.3066 29.7315 13.9036 29.7923 11.5235 29.6177C10.8761 29.5683 10.2326 29.5038 9.5928 29.4165C9.69562 29.4317 9.79463 29.4431 9.89745 29.4583C8.07716 29.2116 6.24926 28.8207 4.55082 28.1072C4.64222 28.1451 4.73362 28.1831 4.82501 28.221C4.47466 28.073 4.12812 27.9098 3.79301 27.72C3.64068 27.6365 3.49216 27.5455 3.34745 27.4506C3.27891 27.405 3.21036 27.3595 3.14181 27.3139C3.05042 27.2494 2.8067 27.0407 3.15324 27.3291C2.93237 27.1432 2.7153 26.961 2.5287 26.7371C2.50966 26.7143 2.49062 26.6915 2.47158 26.6649C2.36876 26.5473 2.6658 26.9306 2.57821 26.8016C2.54013 26.7446 2.49824 26.6915 2.46396 26.6346C2.39923 26.5321 2.34591 26.4258 2.29641 26.3158C2.33449 26.4069 2.37257 26.498 2.41065 26.589C2.34591 26.4372 2.30021 26.2778 2.27737 26.1108C2.2926 26.2133 2.30402 26.312 2.31925 26.4145C2.2926 26.2019 2.27737 25.9894 2.25071 25.7806C2.26594 25.8831 2.27737 25.9818 2.2926 26.0843C2.2926 25.3404 2.2926 24.5965 2.2926 23.8526C2.2926 22.6723 2.2926 21.492 2.2926 20.3154C2.2926 20.0422 2.2926 19.7689 2.2926 19.4956C1.53097 19.4956 0.769342 19.4956 0.00771404 19.4956C0.0762606 20.0346 0.209546 20.5279 0.506581 20.9948C0.776958 21.4198 1.1235 21.807 1.51955 22.122C2.37257 22.8013 3.3208 23.272 4.33757 23.6667C6.21117 24.3916 8.21426 24.7483 10.2059 24.976C12.4984 25.2379 14.8252 25.2645 17.1291 25.0709C19.1969 24.8963 21.2838 24.5699 23.2564 23.9096C24.2732 23.5718 25.3014 23.1543 26.1887 22.5433C26.7485 22.1599 27.2283 21.7311 27.632 21.1845C27.9899 20.6987 28.1537 20.1598 28.2298 19.5715C27.4682 19.5715 26.7066 19.5715 25.945 19.5715C25.945 20.3078 25.945 21.0479 25.945 21.7842C25.945 22.9456 25.945 24.1069 25.945 25.2683C25.9335 25.5719 25.9335 25.8793 25.9335 26.1867C25.9335 26.7826 26.4591 27.3519 27.076 27.3253C27.6967 27.2988 28.2184 26.8243 28.2184 26.1867C28.2184 25.4277 28.2184 24.6648 28.2184 23.9058C28.2184 22.733 28.2184 21.5641 28.2184 20.3913C28.2184 20.1181 28.2184 19.8448 28.2184 19.5715C28.2184 18.9757 27.6929 18.4064 27.076 18.4329C26.7789 18.4443 26.4743 18.543 26.2686 18.7669C26.0478 19.006 25.9754 19.2527 25.9335 19.5715C25.9335 19.5867 25.9297 19.5981 25.9297 19.6133C25.945 19.5108 25.9564 19.4121 25.9716 19.3097C25.945 19.4767 25.8993 19.6398 25.8345 19.7993C25.8726 19.7082 25.9107 19.6171 25.9488 19.526C25.8993 19.6436 25.8383 19.7537 25.7698 19.8638C25.7584 19.8827 25.6441 20.027 25.6479 20.0384C25.6441 20.0308 25.8383 19.8068 25.7355 19.9245C25.7127 19.9511 25.6936 19.9738 25.6708 20.0004C25.5718 20.1105 25.4689 20.2167 25.3585 20.3154C25.2976 20.3723 25.2328 20.4255 25.1681 20.4786C25.1529 20.49 25.0805 20.5317 25.0767 20.5507C25.0843 20.5166 25.3166 20.3723 25.1452 20.4976C24.6083 20.8847 24.0104 21.1883 23.4011 21.4464C23.4925 21.4085 23.5839 21.3705 23.6753 21.3326C21.9845 22.0423 20.1642 22.4294 18.3515 22.6723C18.4543 22.6571 18.5534 22.6457 18.6562 22.6305C16.3066 22.9418 13.9227 23.0025 11.5578 22.8317C10.9066 22.7862 10.2554 22.7178 9.60423 22.6305C9.70705 22.6457 9.80606 22.6571 9.90888 22.6723C8.09239 22.4256 6.2683 22.0385 4.57367 21.3326C4.66507 21.3705 4.75646 21.4085 4.84786 21.4464C4.22713 21.1845 3.63306 20.8733 3.08469 20.4824C2.95521 20.3875 3.17228 20.5355 3.17609 20.5545C3.17228 20.5355 3.10373 20.4976 3.0885 20.4824C3.02376 20.4293 2.96283 20.3761 2.9019 20.3192C2.79146 20.2205 2.68864 20.1143 2.58963 20.0042C2.56298 19.9738 2.53632 19.9397 2.50966 19.9093C2.42207 19.8182 2.6696 20.1294 2.59725 20.027C2.55917 19.97 2.51347 19.9131 2.47539 19.8524C2.40303 19.7385 2.3421 19.6209 2.28498 19.4956C2.32306 19.5867 2.36114 19.6778 2.39923 19.7689C2.32687 19.5981 2.27737 19.4235 2.25071 19.2413C2.26594 19.3438 2.27737 19.4425 2.2926 19.545C2.2926 19.5298 2.28879 19.5184 2.28879 19.5032C2.25071 19.1882 2.18597 18.9301 1.95367 18.6986C1.75565 18.5013 1.43196 18.3532 1.14635 18.3646C0.525621 18.3912 0.00390625 18.8656 0.00390625 19.5032C0.00390625 20.2585 0.00390625 21.0175 0.00390625 21.7728C0.00390625 22.9607 0.00390625 24.1525 0.00390625 25.3404C0.00390625 25.7389 0.00390602 26.107 0.05722 26.5017C0.0419874 26.3993 0.0305628 26.3006 0.0153302 26.1981C0.0267546 27.9136 1.51193 29.1243 2.91713 29.8454C4.98495 30.9081 7.30411 31.3977 9.5928 31.7013C12.289 32.0581 15.0384 32.096 17.7422 31.8114C20.1452 31.5609 22.5367 31.1017 24.753 30.1187C25.5489 29.7657 26.3105 29.3179 26.9579 28.7334C27.5025 28.2438 27.9899 27.5796 28.1423 26.8509C28.1879 26.6346 28.2184 26.4107 28.2222 26.1905C28.226 25.5947 27.6929 25.0254 27.0798 25.0519C26.4514 25.0747 25.9373 25.5453 25.9335 26.1867Z\" fill=\"#DDDDDF\"/>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <rect width=\"28\" height=\"32\" fill=\"white\"/>\n      </clipPath>\n    </defs>\n  </svg>\n)\n","import * as React from 'react'\n\nexport const Publication = () => (\n  <svg width=\"61\" height=\"76\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M60.047 0H.953C.427 0 0 .387 0 .864v74.272c0 .477.427.864.953.864h59.094c.526 0 .953-.387.953-.864V.864C61 .387 60.573 0 60.047 0zm-.953 74.273H1.906V1.727h57.188v72.546z\"\n      fill=\"#DCDCDC\"\n      className=\"SRC-header-only-fill\"\n    />\n    <path\n      d=\"M11.438 44.91c1.51 0 2.802-.802 3.42-1.955l8.988 1.629c-.006.108-.018.215-.018.325 0 1.666.745 3.175 1.948 4.268l-5.867 7.088a3.09 3.09 0 0 0-.846-.129c-1.58 0-2.86 1.16-2.86 2.591 0 1.431 1.28 2.591 2.86 2.591 1.58 0 2.86-1.16 2.86-2.59 0-.532-.178-1.025-.481-1.436l5.859-7.078c.95.472 2.04.74 3.2.74 1.233 0 2.385-.309 3.376-.837l8.83 10.003c-.477.576-.77 1.285-.77 2.062 0 1.908 1.708 3.454 3.813 3.454 2.106 0 3.813-1.546 3.813-3.454 0-1.908-1.707-3.455-3.813-3.455a4.11 4.11 0 0 0-1.557.308l-8.828-9.999c1.118-1.08 1.807-2.53 1.807-4.127 0-.49-.071-.963-.192-1.418l9.52-3.45c.694.853 1.803 1.414 3.063 1.414 2.105 0 3.812-1.547 3.812-3.455 0-1.908-1.707-3.455-3.812-3.455-2.106 0-3.813 1.547-3.813 3.455 0 .149.029.29.049.434l-9.527 3.452c-.823-1.288-2.153-2.277-3.746-2.737l2.123-11.544c1.945-.156 3.476-1.62 3.476-3.423 0-1.908-1.707-3.455-3.812-3.455-2.106 0-3.813 1.547-3.813 3.455 0 1.408.933 2.614 2.267 3.152L30.645 38.87c-.049 0-.096-.006-.145-.006-.734 0-1.438.111-2.099.31l-3.469-6.288c.495-.466.803-1.097.803-1.795 0-1.431-1.28-2.591-2.86-2.591-1.58 0-2.86 1.16-2.86 2.59 0 1.432 1.28 2.592 2.86 2.592.12 0 .232-.02.347-.032l3.474 6.296c-1.134.715-2.008 1.743-2.478 2.944L15.23 41.26C15.116 39.445 13.47 38 11.438 38c-2.106 0-3.813 1.547-3.813 3.455 0 1.907 1.707 3.454 3.813 3.454z\"\n      className=\"SRC-icon-fill\"\n    />\n    <path\n      d=\"M30.5 6.045H7.625v1.728H30.5V6.045zM22.875 9.932H7.625v.864h15.25v-.864z\"\n      fill=\"#DCDCDC\"\n      className=\"SRC-header-only-fill\"\n    />\n  </svg>\n)\n","import * as React from 'react'\n\nexport const Study = () => (\n  <svg data-icon=\"study\" width=\"61\" height=\"76\" viewBox=\"0 0 61 76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M39.456 57.627a2.799 2.799 0 0 0 2.79 2.801 2.798 2.798 0 0 0 2.787-2.8 2.798 2.798 0 0 0-2.788-2.803 2.8 2.8 0 0 0-2.789 2.802zm3.628 0a.843.843 0 0 1-.84.844.843.843 0 0 1-.84-.844c0-.467.376-.845.84-.845.464 0 .84.379.84.845z\"\n      fill=\"#DCDCDC\"\n      className=\"SRC-header-only-fill\"\n    />\n    <path\n      d=\"M37.349 21.019H28.92v1.957h8.428V21.02zM26.25 21H12v1.958h14.25V21zM26.34 24.933h-9.107v1.957h9.107v-1.957zM34.678 24.933h-5.757v1.958h5.757v-1.958zM14.667 24.933h-2.576v1.958h2.576v-1.958zM31.537 28.849h-5.213v1.957h5.212V28.85zM23.741 28.849h-11.65v1.957h11.65V28.85zM19.848 32.764H12.11v1.957h7.738v-1.957zM30.828 32.764h-8.4v1.958h8.4v-1.958zM20.533 36.678h-8.442v1.958h8.442v-1.958zM12.006 40.604l.004 1.957 5.874-.011-.004-1.958-5.874.012zM36.447 11.23H15v1.958h21.447V11.23zM32.674 16H19v1.958h13.674V16z\"\n      className=\"SRC-icon-fill\"\n    />\n    <path\n      d=\"M50.885 60.866h-2.834v-3.45C55.071 54.356 60 47.334 60 39.166c0-6.868-3.531-13.209-9.277-16.838l2.065-3.593 1.682.976.974-1.695-1.682-.976-8.757-5.081-1.693-.982-.974 1.695 1.692.982-1.824 3.174V6.054L7.791 6v25.527H0v14.87c0 2.24 1.59 4.112 3.694 4.538v.092l31.436.042-2.903 6.34.978.371c1.03.392 2.085.69 3.157.901v2.185H24.674V70h26.211c2.526 0 4.58-2.05 4.58-4.568s-2.054-4.566-4.58-4.566zM7.791 46.398a2.667 2.667 0 0 1-2.658 2.67h-.528a2.667 2.667 0 0 1-2.657-2.67V33.485h5.843v12.913zm41.19-7.232a8.82 8.82 0 0 1-6.775 8.58V37.153l2.998-5.219a8.789 8.789 0 0 1 3.776 7.232zM38.39 36.171l-2.063 3.59-2.612-1.517 2.062-3.59 2.613 1.517zM51.1 17.757L40.964 35.404l-5.385-3.124 10.14-17.647.538.313 4.845 2.81zM8.888 49.076a4.61 4.61 0 0 0 .852-2.678V7.96l30.52.048v12.21l-7.342 12.779 1.173.68-3.036 5.285 5.986 3.472 3.037-5.284.182.106v10.729l-.056.002a8.768 8.768 0 0 1-1.643-.161l1.164-2.026-13.412-7.781a1.87 1.87 0 0 0-.94-.254 1.89 1.89 0 0 0-1.633.945l-.451.787a1.901 1.901 0 0 0 .69 2.586L36.04 49.08l-.014.032-27.139-.036zm27.79-1.887l-11.67-6.77.387-.672 11.67 6.77-.388.672zm1.226 2.506c.753.166 1.523.25 2.3.25 5.914 0 10.726-4.835 10.726-10.779a10.75 10.75 0 0 0-4.266-8.606l2.619-5.723.474-.824a17.968 17.968 0 0 1 8.296 15.153c0 7.166-4.21 13.353-10.27 16.222-.708-2.176-2.74-3.756-5.135-3.756h-.88c-2.847 0-5.18 2.23-5.383 5.046a16.918 16.918 0 0 1-1.5-.388l3.019-6.595zm8.2 7.382v7.052h-7.792v-7.053c0-1.921 1.55-3.485 3.456-3.485h.88c1.906 0 3.456 1.564 3.456 3.486zm4.782 10.965H26.623v-5.219h9.74v3.263H48.05v-3.263h2.835c1.45 0 2.631 1.17 2.631 2.61.001 1.44-1.18 2.61-2.63 2.61z\"\n      fill=\"#DCDCDC\"\n      className=\"SRC-header-only-fill\"\n    />\n  </svg>\n)\n","import * as React from 'react'\n\nexport const ToolExperimental = () => (\n  <svg width=\"61\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <g clipPath=\"url(#clip1)\">\n        <g clipPath=\"url(#clip2)\">\n          <path\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            d=\"M23.602 4c-.599 0-1.077.4-1.077.902v1.904c0 .602.478 1.003 1.077 1.003V26.85L10.556 46.496c-3.35 4.41-1.077 7.917 5.147 7.917h31.595c6.224 0 8.498-3.507 5.147-7.917L39.4 26.85V7.81c.598 0 1.077-.401 1.077-1.003V4.902c0-.501-.479-.902-1.077-.902H23.602zm.598 30.669l-9.335 14.032-.12.1c-.12.2-.598.902-.718 1.303.36.1 1.436.1 1.676.1h31.595c.24 0 1.317 0 1.676-.1-.12-.401-.598-1.103-.838-1.303v-.2l-9.335-13.932h-14.6zm3.232-27.462v20.446L13.787 48.1v.1c-1.676 2.205-1.197 3.007 1.915 3.007h31.595c3.112 0 3.591-.802 1.915-3.007v-.1L35.45 27.653V7.207h-8.019z\"\n            fill=\"#DCDCDC\"\n            className=\"SRC-header-only-fill\"\n          />\n          <path\n            d=\"M38.5 34.5h-14L14.5 50h34l-10-15.5z\"\n            fill=\"#5BB0B5\"\n            className=\"SRC-icon-fill\"\n          />\n        </g>\n      </g>\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <path fill=\"#fff\" d=\"M0 0h61v76H0z\" />\n      </clipPath>\n      <clipPath id=\"clip1\">\n        <path\n          fill=\"#fff\"\n          transform=\"matrix(.69 0 0 .69 2 4)\"\n          d=\"M0 0h85.507v85.507H0z\"\n        />\n      </clipPath>\n      <clipPath id=\"clip2\">\n        <path\n          fill=\"#fff\"\n          transform=\"matrix(.69 0 0 .69 9 4)\"\n          d=\"M0 0h65.217v73.063H0z\"\n        />\n      </clipPath>\n    </defs>\n  </svg>\n)\n","import * as React from 'react'\n\nexport const ToolComputational = () => (\n  <svg width=\"61\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <g clipPath=\"url(#clip0)\">\n      <path\n        d=\"M55.513 13H4.537A2.518 2.518 0 0 0 2 15.537V51.94c0 1.357 1.121 2.537 2.537 2.537h20.532v4.602h-4.543c-.708 0-1.239.59-1.239 1.239v2.36c0 .708.59 1.239 1.239 1.239h19.057c.708 0 1.239-.59 1.239-1.239v-2.36c0-.708-.59-1.239-1.239-1.239H35.04v-4.602h20.532a2.518 2.518 0 0 0 2.537-2.537V15.537C58.05 14.121 56.929 13 55.513 13zM30.025 51.704c-.944 0-1.77-.767-1.77-1.77 0-.944.767-1.77 1.77-1.77.944 0 1.77.767 1.77 1.77 0 1.003-.826 1.77-1.77 1.77zm23.482-6.077H6.543V17.543h46.964v28.084z\"\n        fill=\"#DCDCDC\"\n        className=\"SRC-header-only-fill\"\n      />\n      <path\n        d=\"M20.29 38.827a.68.68 0 0 0 .908 0l1.623-1.57a.627.627 0 0 0 0-.878l-4.01-3.879 4.01-3.88a.627.627 0 0 0 0-.877l-1.623-1.57a.68.68 0 0 0-.908 0l-6.111 5.865a.627.627 0 0 0 0 .878l6.111 5.91zM38.226 37.257l1.614 1.57c.238.23.665.23.903 0l6.079-5.911a.63.63 0 0 0 0-.878l-6.127-5.865a.674.674 0 0 0-.902 0l-1.615 1.57a.63.63 0 0 0 0 .878l3.99 3.879-3.99 3.88c-.19.23-.19.646.048.877z\"\n        className=\"SRC-icon-fill\"\n      />\n      <path\n        d=\"M27.558 39h1.74c.255 0 .467-.167.51-.376l4.159-11.872c.127-.376-.127-.752-.51-.752h-1.74c-.254 0-.466.167-.509.376l-4.16 11.872c-.169.376.128.752.51.752z\"\n        fill=\"#DCDCDC\"\n        className=\"SRC-header-only-fill\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0\">\n        <path\n          fill=\"#fff\"\n          transform=\"matrix(.69 0 0 .69 2 13)\"\n          d=\"M0 0h82.609v73.913H0z\"\n        />\n      </clipPath>\n    </defs>\n  </svg>\n)\n","import * as React from 'react'\n\nexport const ToolClinical = () => (\n  <svg width=\"61\" height=\"76\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M54.878 1.124A3.804 3.804 0 0 0 52.175 0H45.8c-.705 0-1.274.573-1.274 1.279v2.557c0 .707.57 1.279 1.274 1.279h5.1v9.913c0 3.083-1.976 5.705-3.573 8.181-2.511 3.894-8.191 3.894-10.703.002-1.652-2.56-3.573-4.99-3.573-8.183V5.115h5.1c.705 0 1.275-.572 1.275-1.279V1.279C39.426.573 38.856 0 38.15 0h-6.374a3.81 3.81 0 0 0-2.705 1.124 3.828 3.828 0 0 0-1.12 2.713v8.549c0 4.436 1.34 8.565 3.598 12.379 4.024 6.794 7.877 9.084 7.77 12.776-.07 2.368 0 4.742 0 7.113 0 5.64-4.577 10.23-10.2 10.23h-2.444c-5.624 0-10.2-4.59-10.2-10.23v-9.223a8.945 8.945 0 0 0 6.375-8.576c0-4.943-3.997-8.952-8.925-8.952-4.93 0-8.925 4.009-8.925 8.952a8.944 8.944 0 0 0 6.375 8.576v9.222C11.377 53.13 18.225 60 26.675 60h2.445c8.449 0 15.3-6.871 15.3-15.346v-4.139c0-1.953-.054-5.56.797-7.319 2.834-2.275 6.055-4.642 7.755-8.099C55.375 21.373 56 16.822 56 12.387v-8.55a3.83 3.83 0 0 0-1.122-2.713zM9.145 26.855c0-2.642 2.146-4.795 4.781-4.795s4.781 2.153 4.781 4.795c0 2.644-2.146 4.796-4.78 4.796-2.637 0-4.782-2.152-4.782-4.796z\"\n      fill=\"#DCDCDC\"\n      className=\"SRC-header-only-fill\"\n    />\n    <path\n      fillRule=\"evenodd\"\n      clipRule=\"evenodd\"\n      d=\"M14 36a9 9 0 1 0 0-18 9 9 0 0 0 0 18zm0-4a5 5 0 1 0 0-10 5 5 0 0 0 0 10z\"\n      className=\"SRC-icon-fill\"\n    />\n  </svg>\n)\n","import * as React from 'react'\n\nexport const Explore = () => (\n  <svg data-icon=\"explore\" viewBox=\"0 0 24 24\" fill=\"#ffffff\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-5.5-2.5l7.51-3.49L17.5 6.5 9.99 9.99 6.5 17.5zm5.5-6.6c.61 0 1.1.49 1.1 1.1s-.49 1.1-1.1 1.1-1.1-.49-1.1-1.1.49-1.1 1.1-1.1z\"></path>\n  </svg>\n)","import * as React from 'react'\n\nexport const Search = () => (\n  <svg data-icon=\"search\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M5.94286 0C7.519 0 9.03059 0.62612 10.1451 1.74062C11.2596 2.85512 11.8857 4.36671 11.8857 5.94286C11.8857 7.41486 11.3463 8.768 10.4594 9.81029L10.7063 10.0571H11.4286L16 14.6286L14.6286 16L10.0571 11.4286V10.7063L9.81029 10.4594C8.768 11.3463 7.41486 11.8857 5.94286 11.8857C4.36671 11.8857 2.85512 11.2596 1.74062 10.1451C0.62612 9.03059 0 7.519 0 5.94286C0 4.36671 0.62612 2.85512 1.74062 1.74062C2.85512 0.62612 4.36671 0 5.94286 0V0ZM5.94286 1.82857C3.65714 1.82857 1.82857 3.65714 1.82857 5.94286C1.82857 8.22857 3.65714 10.0571 5.94286 10.0571C8.22857 10.0571 10.0571 8.22857 10.0571 5.94286C10.0571 3.65714 8.22857 1.82857 5.94286 1.82857Z\" fill=\"#47337D\"/>\n  </svg>\n)","import * as React from 'react'\n\nexport const Chart = () => (\n  <svg data-icon=\"chart\" width=\"20\" height=\"16\" viewBox=\"0 0 20 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M20 16H0V0H2V14.2222H4V6.22222H8V14.2222H10V2.66667H14V14.2222H16V9.77778H20V16Z\" fill=\"#47337D\"/>\n  </svg>\n)","import * as React from 'react'\n\nexport const Filter = () => (\n  <svg data-icon=\"filter\" width=\"13\" height=\"16\" viewBox=\"0 0 13 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0 0H12.8V1.53037H12.7431L7.82222 6.82544V16L4.97778 12.9393V6.81779L0.0639999 1.53037H0V0Z\" fill=\"#47337D\"/>\n  </svg>\n)","import * as React from 'react'\n\nexport const Download = () => (\n  <svg data-icon=\"download\" width=\"12\" height=\"16\" viewBox=\"0 0 12 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M0 16H11.9216V14.1176H0V16ZM11.9216 5.64706H8.51541V0H3.40616V5.64706H0L5.96078 12.2353L11.9216 5.64706Z\" fill=\"#47337D\"/>\n  </svg>\n)\n","import * as React from 'react'\n\nexport const Expand = () => (\n  <svg data-icon=\"expand\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M6.22222 16V14.2222H3.03111L7.03111 10.2222L5.77778 8.96889L1.77778 12.9689V9.77778H0V16H6.22222ZM10.2222 7.03111L14.2222 3.03111V6.22222H16V0H9.77778V1.77778H12.9689L8.96889 5.77778L10.2222 7.03111Z\" fill=\"#47337D\"/>\n  </svg>\n)","import * as React from 'react'\n\nexport const Collapse = () => (\n  <svg data-icon=\"collapse\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M14.734 -7.70646e-08L10.6936 4.0404V0.81706H8.89787V7.10213H15.1829V5.3064H11.9596L16 1.26599L14.734 -7.70646e-08ZM0.81706 8.89787V10.6936H4.0404L-7.70646e-08 14.734L1.26599 16L5.3064 11.9596V15.1829H7.10213V8.89787H0.81706Z\" fill=\"#47337D\"/>\n  </svg>\n)","import * as React from 'react'\n\nexport const Close = () => (\n  <svg data-icon=\"close\" width=\"13\" height=\"12\" viewBox=\"0 0 13 12\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M12.3887 1.20857L11.1801 0L6.38867 4.79143L1.59724 0L0.388672 1.20857L5.1801 6L0.388672 10.7914L1.59724 12L6.38867 7.20857L11.1801 12L12.3887 10.7914L7.59724 6L12.3887 1.20857Z\" fill=\"#47337D\"/>\n  </svg>\n)","import * as React from 'react'\n\nexport const SortUp = () => (\n  <svg data-icon=\"sort-up\" width=\"21\" height=\"17\" viewBox=\"0 0 21 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M8.5 7.5V9.5H16.5V7.5H8.5ZM8.5 1.5V3.5H12.5V1.5H8.5ZM8.5 13.5V15.5H20.5V13.5H8.5ZM4.5 3.5H7L3.5 0L0 3.5H2.5V16.5H4.5V3.5Z\" fill=\"#47337D\"/>\n  </svg>\n)","import * as React from 'react'\n\nexport const SortDown = () => (\n  <svg data-icon=\"sort-down\" width=\"21\" height=\"17\" viewBox=\"0 0 21 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M8.5 9V7H16.5V9H8.5ZM8.5 15V13H12.5V15H8.5ZM8.5 3V1H20.5V3H8.5ZM4.5 13H7L3.5 16.5L0 13H2.5V0H4.5V13Z\" fill=\"#47337D\"/>\n  </svg>\n)","import * as React from 'react'\n\nexport const Settings = () => (\n  <svg data-icon=\"settings\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <mask id=\"mask0\" mask-type=\"alpha\" maskUnits=\"userSpaceOnUse\" x=\"10\" y=\"10\" width=\"20\" height=\"20\">\n      <path d=\"M27.4301 20.98C27.4701 20.66 27.5001 20.34 27.5001 20C27.5001 19.66 27.4701 19.34 27.4301 19.02L29.5401 17.37C29.7301 17.22 29.7801 16.95 29.6601 16.73L27.6601 13.27C27.5401 13.05 27.2701 12.97 27.0501 13.05L24.5601 14.05C24.0401 13.65 23.4801 13.32 22.8701 13.07L22.4901 10.42C22.4601 10.18 22.2501 10 22.0001 10H18.0001C17.7501 10 17.5401 10.18 17.5101 10.42L17.1301 13.07C16.5201 13.32 15.9601 13.66 15.4401 14.05L12.9501 13.05C12.7201 12.96 12.4601 13.05 12.3401 13.27L10.3401 16.73C10.2101 16.95 10.2701 17.22 10.4601 17.37L12.5701 19.02C12.5301 19.34 12.5001 19.67 12.5001 20C12.5001 20.33 12.5301 20.66 12.5701 20.98L10.4601 22.63C10.2701 22.78 10.2201 23.05 10.3401 23.27L12.3401 26.73C12.4601 26.95 12.7301 27.03 12.9501 26.95L15.4401 25.95C15.9601 26.35 16.5201 26.68 17.1301 26.93L17.5101 29.58C17.5401 29.82 17.7501 30 18.0001 30H22.0001C22.2501 30 22.4601 29.82 22.4901 29.58L22.8701 26.93C23.4801 26.68 24.0401 26.34 24.5601 25.95L27.0501 26.95C27.2801 27.04 27.5401 26.95 27.6601 26.73L29.6601 23.27C29.7801 23.05 29.7301 22.78 29.5401 22.63L27.4301 20.98V20.98ZM20.0001 23.5C18.0701 23.5 16.5001 21.93 16.5001 20C16.5001 18.07 18.0701 16.5 20.0001 16.5C21.9301 16.5 23.5001 18.07 23.5001 20C23.5001 21.93 21.9301 23.5 20.0001 23.5Z\" fill=\"#9E9E9E\"/>\n    </mask>\n    <g mask=\"url(#mask0)\">\n      <rect width=\"40\" height=\"40\" fill=\"#ffffff\"/>\n    </g>\n  </svg>\n)","import * as React from 'react'\n\nexport const Columns = () => (\n  <svg data-icon=\"columns\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect width=\"5.66667\" height=\"17\" fill=\"white\"/>\n    <rect x=\"7.08368\" width=\"5.66667\" height=\"17\" fill=\"white\"/>\n    <rect x=\"14.6663\" y=\"0.5\" width=\"4.66667\" height=\"16\" stroke=\"white\" fill=\"none\"/>\n  </svg>\n)","import * as React from 'react'\n\nexport const ColumnsDark = () => (\n  <svg data-icon=\"columns-dark\" width=\"20\" height=\"17\" viewBox=\"0 0 20 17\" xmlns=\"http://www.w3.org/2000/svg\">\n    <rect className=\"SRC-primary-fill-color\" width=\"5.66667\" height=\"17\" />\n    <rect className=\"SRC-primary-fill-color\" x=\"7.08368\" width=\"5.66667\" height=\"17\" />\n    <rect className=\"SRC-primary-stroke-color\" x=\"14.6663\" y=\"0.5\" width=\"4.66667\" height=\"16\" stroke=\"#ffffff\" fill=\"#ffffff\" />\n  </svg>\n)","import * as React from 'react'\n\nexport const VerticalDots = () => (\n  <svg data-icon=\"vertical-dots\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M12 8c1.1 0 2-.9 2-2s-.9-2-2-2-2 .9-2 2 .9 2 2 2zm0 2c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2zm0 6c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2z\"></path>\n  </svg>\n)","const COLOR_PALETTE_EVEN: string[] = [\n  'rgb(91,176,181)',\n  'rgb(124,192,196)',\n  'rgb(157,208,211)',\n  'rgb(189,223,225)',\n  'rgb(222,239,240)',\n  'rgb(217,229,236)',\n  'rgb(179,202,217)',\n  'rgb(140,176,198)',\n  'rgb(102,149,179)',\n  'rgb(64,123,160)',\n  'rgb(201,66,129)',\n  'rgb(212,104,154)',\n  'rgb(223,142,179)',\n  'rgb(233,179,205)',\n  'rgb(244,217,230)',\n  'rgb(218,214,229)',\n  'rgb(181,173,203)',\n  'rgb(145,133,177)',\n  'rgb(108,92,151)',\n  'rgb(71,51,125)',\n  'rgb(222,154,31)',\n  'rgb(229,174,76)',\n  'rgb(235,194,121)',\n  'rgb(242,215,165)',\n  'rgb(248,235,210)',\n  'rgb(207,234,231)',\n  'rgb(159,212,207)',\n  'rgb(112,191,184)',\n  'rgb(64,169,160)',\n  'rgb(16,148,136)',\n  'rgb(60,74,99)',\n  'rgb(99,110,130)',\n  'rgb(138,146,161)',\n  'rgb(177,183,193)',\n  'rgb(216,219,224)',\n  'rgb(246,226,210)',\n  'rgb(238,197,165)',\n  'rgb(229,167,120)',\n  'rgb(221,138,75)',\n  'rgb(212,109,30)',\n  'rgb(88,161,88)',\n  'rgb(121,180,121)',\n  'rgb(155,199,155)',\n  'rgb(188,217,188)',\n  'rgb(222,236,222)',\n  'rgb(220,227,242)',\n  'rgb(185,198,230)',\n  'rgb(151,170,217)',\n  'rgb(116,141,205)',\n  'rgb(81,113,192)',\n  'rgb(178,36,42)',\n  'rgb(193,80,85)',\n  'rgb(209,124,127)',\n  'rgb(224,167,170)',\n  'rgb(240,211,212)',\n  'rgb(222,239,240)',\n  'rgb(189,223,225)',\n  'rgb(157,208,211)',\n  'rgb(124,192,196)',\n  'rgb(91,176,181)',\n  'rgb(64,123,160)',\n  'rgb(102,149,179)',\n  'rgb(140,176,198)',\n  'rgb(179,202,217)',\n  'rgb(217,229,236)',\n  'rgb(244,217,230)',\n  'rgb(233,179,205)',\n  'rgb(223,142,179)',\n  'rgb(212,104,154)',\n  'rgb(201,66,129)',\n  'rgb(71,51,125)',\n  'rgb(108,92,151)',\n  'rgb(145,133,177)',\n  'rgb(181,173,203)',\n  'rgb(218,214,229)',\n  'rgb(248,235,210)',\n  'rgb(242,215,165)',\n  'rgb(235,194,121)',\n  'rgb(229,174,76)',\n  'rgb(222,154,31)',\n  'rgb(16,148,136)',\n  'rgb(64,169,160)',\n  'rgb(112,191,184)',\n  'rgb(159,212,207)',\n  'rgb(207,234,231)',\n  'rgb(216,219,224)',\n  'rgb(177,183,193)',\n  'rgb(138,146,161)',\n  'rgb(99,110,130)',\n  'rgb(60,74,99)',\n  'rgb(212,109,30)',\n  'rgb(221,138,75)',\n  'rgb(229,167,120)',\n  'rgb(238,197,165)',\n  'rgb(246,226,210)',\n  'rgb(222,236,222)',\n  'rgb(188,217,188)',\n  'rgb(155,199,155)',\n  'rgb(121,180,121)',\n  'rgb(88,161,88)',\n  'rgb(81,113,192)',\n  'rgb(116,141,205)',\n  'rgb(151,170,217)',\n  'rgb(185,198,230)',\n  'rgb(220,227,242)',\n  'rgb(240,211,212)',\n  'rgb(224,167,170)',\n  'rgb(209,124,127)',\n  'rgb(193,80,85)',\n  'rgb(178,36,42)',\n]\n\nconst COLOR_PALETTE_ODD: string[] = [\n  'rgb(64,123,160)',\n  'rgb(102,149,179)',\n  'rgb(140,176,198)',\n  'rgb(179,202,217)',\n  'rgb(217,229,236)',\n  'rgb(244,217,230)',\n  'rgb(233,179,205)',\n  'rgb(223,142,179)',\n  'rgb(212,104,154)',\n  'rgb(201,66,129)',\n  'rgb(71,51,125)',\n  'rgb(108,92,151)',\n  'rgb(145,133,177)',\n  'rgb(181,173,203)',\n  'rgb(218,214,229)',\n  'rgb(248,235,210)',\n  'rgb(242,215,165)',\n  'rgb(235,194,121)',\n  'rgb(229,174,76)',\n  'rgb(222,154,31)',\n  'rgb(16,148,136)',\n  'rgb(64,169,160)',\n  'rgb(112,191,184)',\n  'rgb(159,212,207)',\n  'rgb(207,234,231)',\n  'rgb(216,219,224)',\n  'rgb(177,183,193)',\n  'rgb(138,146,161)',\n  'rgb(99,110,130)',\n  'rgb(60,74,99)',\n  'rgb(212,109,30)',\n  'rgb(221,138,75)',\n  'rgb(229,167,120)',\n  'rgb(238,197,165)',\n  'rgb(246,226,210)',\n  'rgb(222,236,222)',\n  'rgb(188,217,188)',\n  'rgb(155,199,155)',\n  'rgb(121,180,121)',\n  'rgb(88,161,88)',\n  'rgb(81,113,192)',\n  'rgb(116,141,205)',\n  'rgb(151,170,217)',\n  'rgb(185,198,230)',\n  'rgb(220,227,242)',\n  'rgb(240,211,212)',\n  'rgb(224,167,170)',\n  'rgb(209,124,127)',\n  'rgb(193,80,85)',\n  'rgb(178,36,42)',\n  'rgb(91,176,181)',\n  'rgb(124,192,196)',\n  'rgb(157,208,211)',\n  'rgb(189,223,225)',\n  'rgb(222,239,240)',\n  'rgb(217,229,236)',\n  'rgb(179,202,217)',\n  'rgb(140,176,198)',\n  'rgb(102,149,179)',\n  'rgb(64,123,160)',\n  'rgb(201,66,129)',\n  'rgb(212,104,154)',\n  'rgb(223,142,179)',\n  'rgb(233,179,205)',\n  'rgb(244,217,230)',\n  'rgb(218,214,229)',\n  'rgb(181,173,203)',\n  'rgb(145,133,177)',\n  'rgb(108,92,151)',\n  'rgb(71,51,125)',\n  'rgb(222,154,31)',\n  'rgb(229,174,76)',\n  'rgb(235,194,121)',\n  'rgb(242,215,165)',\n  'rgb(248,235,210)',\n  'rgb(207,234,231)',\n  'rgb(159,212,207)',\n  'rgb(112,191,184)',\n  'rgb(64,169,160)',\n  'rgb(16,148,136)',\n  'rgb(60,74,99)',\n  'rgb(99,110,130)',\n  'rgb(138,146,161)',\n  'rgb(177,183,193)',\n  'rgb(216,219,224)',\n  'rgb(246,226,210)',\n  'rgb(238,197,165)',\n  'rgb(229,167,120)',\n  'rgb(221,138,75)',\n  'rgb(212,109,30)',\n  'rgb(88,161,88)',\n  'rgb(121,180,121)',\n  'rgb(155,199,155)',\n  'rgb(188,217,188)',\n  'rgb(222,236,222)',\n  'rgb(220,227,242)',\n  'rgb(185,198,230)',\n  'rgb(151,170,217)',\n  'rgb(116,141,205)',\n  'rgb(81,113,192)',\n  'rgb(178,36,42)',\n  'rgb(193,80,85)',\n  'rgb(209,124,127)',\n  'rgb(224,167,170)',\n  'rgb(240,211,212)',\n  'rgb(222,239,240)',\n  'rgb(189,223,225)',\n  'rgb(157,208,211)',\n  'rgb(124,192,196)',\n  'rgb(91,176,181)',\n]\n\nexport { COLOR_PALETTE_EVEN, COLOR_PALETTE_ODD }\n","import * as React from 'react'\nconst CHAR_COUNT_CUTOFF = 400\n\ntype ShowMoreState = {\n  showMore: boolean\n}\n\ntype ShowMoreProps = {\n  summary: string\n}\n\nexport default class ShowMore extends React.Component<\n  ShowMoreProps,\n  ShowMoreState\n> {\n  constructor(props: ShowMoreProps) {\n    super(props)\n    this.state = {\n      showMore: false,\n    }\n    this.toggleShowMore = this.toggleShowMore.bind(this)\n  }\n\n  public toggleShowMore(event: React.MouseEvent<HTMLAnchorElement>) {\n    event.preventDefault()\n    this.setState({\n      showMore: true,\n    })\n  }\n\n  getCutoff = (summary: string) => {\n    let previewText = ''\n    if (!summary) {\n      return { previewText }\n    }\n    let hiddenText = ''\n    const summarySplit = summary!.split(' ')\n    // find num words to join such that its >= char_count_cutoff\n    let i = 0\n    while (previewText.length < CHAR_COUNT_CUTOFF && i < summarySplit.length) {\n      previewText += `${summarySplit[i]} `\n      i += 1\n    }\n    if (i < summarySplit.length - 1) {\n      hiddenText = summarySplit.slice(i).join(' ')\n    }\n    return { previewText, hiddenText }\n  }\n\n  public render() {\n    const { summary } = this.props\n    const meetsCharRequirements = summary && summary.length >= CHAR_COUNT_CUTOFF\n    let { previewText, hiddenText } = this.getCutoff(summary)\n    const showMoreButton = meetsCharRequirements && (\n      <a\n        style={{ fontSize: '14px', cursor: 'pointer', marginLeft: '1px' }}\n        className=\"SRC-primary-text-color\"\n        onClick={this.toggleShowMore}\n      >\n        ...Show More\n      </a>\n    )\n    return (\n      <React.Fragment>\n        <span>\n          {previewText}\n          <span className={this.state.showMore ? '' : 'SRC-hidden'}>\n            {hiddenText}\n          </span>\n        </span>\n        {!this.state.showMore && showMoreButton}\n      </React.Fragment>\n    )\n  }\n}\n","import {\n  COLOR_PALETTE_EVEN,\n  COLOR_PALETTE_ODD,\n} from '../utils/functions/colorPalette'\n\nexport function rgba2rgb(background: number[], color: number[]) {\n  const alpha = color[3]\n  return [\n    Math.floor((1 - alpha) * background[0] + alpha * color[0] + 0.5),\n    Math.floor((1 - alpha) * background[1] + alpha * color[1] + 0.5),\n    Math.floor((1 - alpha) * background[2] + alpha * color[2] + 0.5),\n  ]\n}\n\nexport function getColorPallette(\n  start: number,\n  end: number,\n): { colorPalette: string[]; textColors: string[] } {\n  let colorPalleteSelection = []\n  const textColors = []\n  let offset = -1\n\n  if (start % 2 === 0) {\n    colorPalleteSelection = COLOR_PALETTE_EVEN\n    offset = start * 5\n  } else {\n    colorPalleteSelection = COLOR_PALETTE_ODD\n    offset = (start - 1) * 5\n  }\n\n  const colorPalette: string[] = []\n\n  for (let i = 0; i < end; i += 1) {\n    const textColor: string = i % 10 < 2 || i % 10 > 7 ? 'white' : 'black'\n    const color: string = `${\n      colorPalleteSelection[(offset + i) % colorPalleteSelection.length]\n    }`\n    colorPalette.push(color)\n    textColors.push(textColor)\n  }\n  return { colorPalette, textColors }\n}\n\nexport default getColorPallette\n","import { CardFooter, Icon } from './row_renderers/utils'\nimport { MarkdownValue } from './CardContainerLogic'\nimport MarkdownSynapse from './MarkdownSynapse'\nimport React, { useState, useEffect } from 'react'\nimport getColorPallette from './ColorGradient'\n\nexport type IconOptions = {\n  [index: string]: string\n}\nexport type HeaderCardProps = {\n  iconOptions?: IconOptions\n  backgroundColor?: string\n  rgbIndex?: number\n  type: string\n  title: string\n  subTitle: string\n  description: string\n  iconValue: string\n  secondaryLabelLimit?: number\n  values?: string[][]\n  isAlignToLeftNav?: boolean\n  descriptionLinkConfig?: MarkdownValue\n  href?: string\n  target?: string\n}\n\nconst HeaderCard: React.FunctionComponent<HeaderCardProps> = ({\n  type,\n  title,\n  subTitle,\n  description,\n  iconOptions,\n  iconValue,\n  backgroundColor,\n  values,\n  secondaryLabelLimit,\n  isAlignToLeftNav,\n  descriptionLinkConfig,\n  href,\n  target,\n  rgbIndex,\n}) => {\n  // store old document title and description so that we can restore when this component is removed\n  const descriptionElement: Element | null = document.querySelector(\n    'meta[name=\"description\"]',\n  )\n  const [docTitle] = useState<string>(document.title)\n  const [docDescription] = useState<string>(\n    descriptionElement ? descriptionElement.getAttribute('content')! : '',\n  )\n  useEffect(() => {\n    // update page title and description based on header card values\n    if (title && document.title !== title) {\n      document.title = title\n    }\n\n    if (description || subTitle) {\n      descriptionElement?.setAttribute(\n        'content',\n        description ? description : subTitle,\n      )\n    }\n\n    return function cleanup() {\n      document.title = docTitle\n      descriptionElement?.setAttribute('content', docDescription)\n    }\n  })\n\n  const backgroundColorUsed =\n    rgbIndex !== undefined\n      ? getColorPallette(rgbIndex, 1).colorPalette[0]\n      : backgroundColor\n  const style: React.CSSProperties = {\n    background: backgroundColorUsed,\n  }\n  return (\n    <div\n      style={style}\n      className={`SRC-portalCardHeader ${\n        isAlignToLeftNav ? 'isAlignToLeftNav' : ''\n      }`}\n    >\n      <div className=\"container-fluid\">\n        <div className=\"row\">\n          <div\n            className={`iconContainer${\n              isAlignToLeftNav ? ' col-md-offset-1 col-md-2' : ' col-md-1'\n            }`}\n          >\n            <Icon value={iconValue} iconOptions={iconOptions} type={type} />\n          </div>\n          <div\n            className={`SRC-cardContent${\n              isAlignToLeftNav ? ' col-md-8' : ' col-md-10'\n            }`}\n          >\n            <div className=\"SRC-type\">{type}</div>\n            <div>\n              <h3\n                className=\"SRC-boldText SRC-blackText\"\n                style={{ margin: 'none' }}\n              >\n                {href ? (\n                  <a target={target} href={href}>\n                    {title}\n                  </a>\n                ) : (\n                  <span> {title} </span>\n                )}\n              </h3>\n            </div>\n            {subTitle && <div className=\"SRC-author\"> {subTitle} </div>}\n            {description && (\n              <span className=\"SRC-font-size-base\">\n                {descriptionLinkConfig ? (\n                  <MarkdownSynapse markdown={description} />\n                ) : (\n                  description\n                )}\n              </span>\n            )}\n            <div\n              style={{\n                borderTop: '1px solid rgba(26, 28, 41, 0.2)',\n                marginTop: '15px',\n                paddingTop: '5px',\n              }}\n            >\n              {values && (\n                <CardFooter\n                  isHeader={true}\n                  secondaryLabelLimit={secondaryLabelLimit}\n                  values={values}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HeaderCard\n","export const unCamelCase = (\n  str: string | undefined,\n  facetAliases?: {},\n): string | undefined => {\n  // https://stackoverflow.com/questions/4149276/how-to-convert-camelcase-to-camel-case\n  if (!str) {\n    return str\n  }\n  if (facetAliases?.[str]) {\n    return facetAliases[str]\n  }\n  return (\n    str\n      // insert a space between lower & upper\n      .replace(/([a-z])([A-Z])/g, '$1 $2')\n      // space before last upper in a sequence followed by lower\n      .replace(/\\b([A-Z]+)([A-Z])([a-z])/, '$1 $2$3')\n      // uppercase the first character\n      .replace(/^./, (str: string) => {\n        return str.toUpperCase()\n      })\n  )\n}\n","import { FileHandleAssociateType } from '../../utils/synapseTypes'\nimport React from 'react'\nimport { SynapseConstants, SynapseClient } from '../../utils'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\ntype FileHandleLinkProps = {\n  token: string | undefined\n  fileHandleId: string\n  redirect?: boolean\n  showDownloadIcon: boolean\n  tableEntityConcreteType: string | undefined\n  rowId: string | undefined\n  tableId: string | undefined\n  displayValue: string | undefined\n}\nexport const FileHandleLink = (props: FileHandleLinkProps) => {\n  const {\n    token,\n    fileHandleId,\n    showDownloadIcon,\n    tableEntityConcreteType,\n    rowId,\n    tableId,\n    redirect = false,\n    displayValue,\n  } = props\n\n  if (!tableEntityConcreteType) {\n    // still loading\n    return <></>\n  }\n  const isFileView = tableEntityConcreteType.includes('EntityView')\n  const fileAssociateType: FileHandleAssociateType = isFileView\n    ? FileHandleAssociateType.FileEntity\n    : FileHandleAssociateType.TableEntity\n  const fileAssociateId = isFileView ? rowId : tableId\n  return (\n    <button\n      // @ts-ignore\n      onClick={() => {\n        if (token && fileAssociateId) {\n          SynapseClient.getActualFileHandleByIdURL(\n            fileHandleId,\n            token,\n            fileAssociateType,\n            fileAssociateId,\n            redirect,\n          )\n        }\n      }}\n      className={`SRC-primary-text-color ${SynapseConstants.SRC_SIGN_IN_CLASS}`}\n      type=\"button\"\n      style={{ padding: 0 }}\n    >\n      {displayValue ?? fileHandleId}\n      {showDownloadIcon && (\n        <FontAwesomeIcon style={{ marginLeft: 5 }} icon=\"download\" />\n      )}\n    </button>\n  )\n}\n","import * as React from 'react'\nimport HeaderCard from './HeaderCard'\nimport { CardFooter, Icon } from './row_renderers/utils'\nimport {\n  CardLink,\n  CommonCardProps,\n  MarkdownLink,\n  MarkdownValue,\n} from './CardContainerLogic'\nimport { unCamelCase } from '../utils/functions/unCamelCase'\nimport MarkdownSynapse from './MarkdownSynapse'\nimport { SelectColumn, ColumnModel, ColumnType } from '../utils/synapseTypes'\nimport { SynapseConstants } from '../utils'\nimport { FileHandleLink } from './widgets/FileHandleLink'\n\nexport type KeyToAlias = {\n  key: string\n  alias?: string\n}\n\nexport type KeyToAliasMap = {\n  [index: number]: KeyToAlias\n  [index: string]: KeyToAlias\n}\n\nexport type GenericCardSchema = {\n  type: string\n  title: string\n  subTitle?: string\n  description?: string\n  icon?: string\n  secondaryLabels?: any[]\n  link?: string\n}\n\nexport type IconOptions = {\n  [index: string]: string\n}\n\nexport type GenericCardProps = {\n  selectColumns?: SelectColumn[]\n  columnModels?: ColumnModel[]\n  facetAliases?: {}\n  iconOptions?: IconOptions\n  backgroundColor?: string\n  isHeader?: boolean\n  isAlignToLeftNav?: boolean\n  schema: any\n  data: any\n  token?: string\n  tableEntityConcreteType: string | undefined\n  tableId: string | undefined\n} & CommonCardProps\n\nexport type GenericCardState = {\n  hasClickedShowMore: boolean\n}\n\nconst CHAR_COUNT_CUTOFF = 400\nexport const CARD_SHORT_DESCRIPTION_CSS = 'SRC-short-description'\nexport const CARD_LONG_DESCRIPTION_CSS = 'SRC-long-description'\n\n// doi regex here - https://www.crossref.org/blog/dois-and-matching-regular-expressions/\n// note - had to add an escape character for the second slash in the regex above\nexport const DOI_REGEX = /^10.\\d{4,9}\\/[-._;()/:a-z0-9]+$/i\n// check for 'syn' followed and ended by a digit of unlimited length, must also begin the line\nexport const SYNAPSE_REGX = /^syn\\d+\\.?\\d+$/\n\n// This function isn't in the class only for ease of testing with renderShortDescription\nexport const getCutoff = (summary: string) => {\n  let previewText = ''\n  const summarySplit = summary!.split(' ')\n  // find num words to join such that its >= char_count_cutoff\n  let i = 0\n  while (previewText.length < CHAR_COUNT_CUTOFF && i < summarySplit.length) {\n    previewText += `${summarySplit[i]} `\n    i += 1\n  }\n  previewText = previewText.trim()\n  return { previewText }\n}\n\nexport const renderValueOrMultiValue = ({\n  columnName,\n  value,\n  selectColumns,\n  columnModels,\n}: {\n  columnName: string | undefined\n  value: string\n  selectColumns?: SelectColumn[]\n  columnModels?: ColumnModel[]\n}): ValueOrMultiValue => {\n  if (!value) {\n    return {\n      str: '',\n      strList: undefined,\n    }\n  }\n  const selectedColumnOrUndefined =\n    selectColumns?.find(el => el.name === columnName) ||\n    columnModels?.find(el => el.name === columnName)\n  const isMultiValue =\n    selectedColumnOrUndefined?.columnType === 'STRING_LIST' ||\n    selectedColumnOrUndefined?.columnType === 'INTEGER_LIST'\n\n  if (isMultiValue) {\n    let val: any = value\n    let strList: any\n    try {\n      strList = JSON.parse(val)\n      val = (strList as string[]).join(', ')\n      return {\n        strList,\n        str: val,\n      }\n    } catch (e) {\n      console.error(\n        'Could not parse multivalue string ',\n        val,\n        ' caught err ',\n        e,\n      )\n    }\n  }\n  return { str: value }\n}\n\nexport const renderLabel = (args: {\n  value: string\n  columnName: string\n  labelLink: CardLink | MarkdownLink | undefined\n  selectColumns: SelectColumn[] | undefined\n  columnModels: ColumnModel[] | undefined\n  isHeader: boolean\n}) => {\n  const {\n    value,\n    columnName,\n    labelLink,\n    selectColumns,\n    columnModels,\n    isHeader,\n  } = args\n  if (!value) {\n    return value\n  }\n  const { strList, str } = renderValueOrMultiValue({\n    columnName,\n    value,\n    selectColumns,\n    columnModels,\n  })\n\n  if (!labelLink || !str) {\n    // they either don't need a link or the array came back empty\n    return str\n  }\n\n  if (labelLink.isMarkdown) {\n    if (strList) {\n      return strList.map((el, index) => {\n        return (\n          <span>\n            <MarkdownSynapse key={el} renderInline={true} markdown={el} />\n            {/* \\u00a0 is a nbsp; */}\n            {index < strList.length - 1 && \",\\u00a0\\u00a0\"}\n          </span>\n        )\n      })\n    } else {\n      return <MarkdownSynapse renderInline={true} markdown={value} />\n    }\n  }\n  const split = strList ? strList : str.split(',')\n  let className = ''\n  const style: React.CSSProperties = {}\n  if (isHeader) {\n    className = 'SRC-lightLink'\n  } else {\n    className = 'SRC-primary-text-color'\n  }\n  return split.map((el, index) => {\n    const { baseURL, URLColumnName, wrapValueWithParens } = labelLink\n    const value = wrapValueWithParens ? `(${el})` : el\n    const href = `/${baseURL}?${URLColumnName}=${value}`\n    return (\n      <React.Fragment key={el}>\n        <a href={href} key={el} className={className} style={style}>\n          {el}\n        </a>\n        {index < split.length - 1 && <span style={{ marginRight: 4 }}>, </span>}\n      </React.Fragment>\n    )\n  })\n}\n\ntype ValueOrMultiValue = {\n  str: string\n  strList?: string[]\n}\n\nexport default class GenericCard extends React.Component<\n  GenericCardProps,\n  GenericCardState\n> {\n  constructor(props: GenericCardProps) {\n    super(props)\n    this.state = {\n      hasClickedShowMore: false,\n    }\n    this.getTitleParams = this.getTitleParams.bind(this)\n    this.renderLongDescription = this.renderLongDescription.bind(this)\n    this.renderShortDescription = this.renderShortDescription.bind(this)\n  }\n\n  public getTitleParams(\n    link: string,\n    titleLink: CardLink | undefined,\n    data: string[] | undefined,\n    schema: any | undefined,\n  ): {\n    href: string\n    target: string\n  } {\n    let href = link\n    let target = '_self'\n    if (link.match(SYNAPSE_REGX)) {\n      // its a synId\n      href = `https://www.synapse.org/#!Synapse:${link}`\n    } else if (link.match(DOI_REGEX)) {\n      target = '_blank'\n      href = `https://dx.doi.org/${link}`\n    } else if (!titleLink) {\n      target = '_blank'\n    } else if (titleLink) {\n      if (!data || !schema) {\n        throw Error('Must specify CardLink and data for linking to work')\n      }\n      const { matchColumnName, URLColumnName } = titleLink\n      const indexInData = schema[matchColumnName]\n      if (indexInData === undefined) {\n        console.error(\n          `Could not find match for data: ${data} with columnName ${matchColumnName}`,\n        )\n      } else {\n        const value = data[indexInData]\n        href = `/${titleLink.baseURL}?${URLColumnName}=${value}`\n      }\n    }\n    return { href, target }\n  }\n\n  getCutoff = (summary: string) => {\n    let previewText = ''\n    const summarySplit = summary!.split(' ')\n    // find num words to join such that its >= char_count_cutoff\n    let i = 0\n    while (previewText.length < CHAR_COUNT_CUTOFF && i < summarySplit.length) {\n      previewText += `${summarySplit[i]} `\n      i += 1\n    }\n    previewText = previewText.trim()\n    return { previewText }\n  }\n\n  toggleShowMore = () => {\n    this.setState({\n      hasClickedShowMore: true,\n    })\n  }\n\n  renderTitle = ({\n    href,\n    target,\n    titleSearchHandle,\n    title,\n  }: {\n    target: string\n    titleSearchHandle: string | undefined\n    title: string\n    href: string\n  }) => {\n    if (href) {\n      return (\n        <a\n          data-search-handle={titleSearchHandle}\n          className=\"SRC-primary-text-color\"\n          target={target}\n          href={href}\n        >\n          {title}\n        </a>\n      )\n    } else {\n      return <span data-search-handle={titleSearchHandle}> {title} </span>\n    }\n  }\n\n  render() {\n    const {\n      schema,\n      data,\n      genericCardSchema,\n      secondaryLabelLimit,\n      backgroundColor,\n      selectColumns,\n      columnModels,\n      iconOptions,\n      isHeader = false,\n      titleLinkConfig,\n      labelLinkConfig,\n      facetAliases = {},\n      descriptionLinkConfig,\n      rgbIndex,\n      tableId,\n      tableEntityConcreteType,\n      token,\n    } = this.props\n    // GenericCard inherits properties from CommonCardProps so that the properties have the same name\n    // and type, but theres one nuance which is that we can't override if one specific property will be\n    // defined, so we assert genericCardSchema is not null and assign to genericCardSchemaDefined\n    const genericCardSchemaDefined = genericCardSchema!\n    const { hasClickedShowMore } = this.state\n    const { link = '', type } = genericCardSchemaDefined\n    const title = data[schema[genericCardSchemaDefined.title]]\n    let subTitle =\n      genericCardSchemaDefined.subTitle &&\n      data[schema[genericCardSchemaDefined.subTitle]]\n    subTitle =\n      genericCardSchemaDefined?.subTitle &&\n      renderValueOrMultiValue({\n        value: subTitle,\n        columnName: genericCardSchemaDefined?.subTitle,\n        selectColumns,\n        columnModels,\n      }).str\n    const description = data[schema[genericCardSchemaDefined.description || '']]\n    const iconValue = data[schema[genericCardSchemaDefined.icon || '']]\n    const titleColumnModel = columnModels?.find(\n      el => genericCardSchemaDefined.link === el.name,\n    )\n    const titleColumnType = titleColumnModel?.columnType\n    // wrap link in parens because undefined would throw an error\n    const linkValue: string = data[schema[link]] || ''\n    const { href, target } = this.getTitleParams(\n      linkValue,\n      titleLinkConfig,\n      data,\n      schema,\n    )\n    const values: string[][] = []\n    const { secondaryLabels = [] } = genericCardSchemaDefined\n    for (let i = 0; i < secondaryLabels.length; i += 1) {\n      const columnName = secondaryLabels[i]\n      let value = data[schema[columnName]]\n      if (value) {\n        const labelLink = labelLinkConfig?.find(\n          el => el.matchColumnName === columnName,\n        )\n        value = renderLabel({\n          value,\n          columnName,\n          labelLink,\n          isHeader,\n          selectColumns,\n          columnModels,\n        })\n        const columnDisplayName = unCamelCase(columnName, facetAliases)\n        const keyValue = [columnDisplayName, value]\n        values.push(keyValue)\n      }\n    }\n\n    const showFooter = values.length > 0\n\n    const style: React.CSSProperties = {\n      background: backgroundColor,\n      // undefined, take default value from class\n      marginTop: isHeader ? '0px' : undefined,\n      marginBottom: isHeader ? '0px' : undefined,\n      paddingBottom: showFooter ? undefined : '15px',\n    }\n\n    if (isHeader) {\n      return (\n        <HeaderCard\n          descriptionLinkConfig={descriptionLinkConfig}\n          type={type}\n          title={title}\n          subTitle={subTitle}\n          backgroundColor={backgroundColor}\n          description={description}\n          iconValue={iconValue}\n          iconOptions={iconOptions}\n          values={values}\n          href={href}\n          target={target}\n          isAlignToLeftNav={true}\n          secondaryLabelLimit={secondaryLabelLimit}\n          rgbIndex={rgbIndex}\n        />\n      )\n    }\n\n    const titleSearchHandle = unCamelCase(\n      genericCardSchemaDefined.title,\n      facetAliases,\n    )\n    const stubTitleSearchHandle = unCamelCase(\n      genericCardSchemaDefined.subTitle,\n      facetAliases,\n    )\n    const descriptionSubTitle = unCamelCase(\n      genericCardSchemaDefined.description,\n      facetAliases,\n    )\n\n    return (\n      <div style={style} className={'SRC-portalCard'}>\n        <div className=\"SRC-cardThumbnail\">\n          <Icon iconOptions={iconOptions} value={iconValue} type={type} />\n        </div>\n        <div className=\"SRC-cardContent\">\n          <div className=\"SRC-type\">{type}</div>\n          <div>\n            <h3\n              className=\"SRC-boldText SRC-blackText\"\n              style={{ margin: 'none' }}\n            >\n              {!titleLinkConfig &&\n              titleColumnType === ColumnType.FILEHANDLEID ? (\n                <FileHandleLink\n                  token={token}\n                  fileHandleId={linkValue}\n                  tableEntityConcreteType={tableEntityConcreteType}\n                  showDownloadIcon={type !== SynapseConstants.EXPERIMENTAL}\n                  rowId={data![schema.id]}\n                  tableId={tableId}\n                  displayValue={title}\n                />\n              ) : (\n                this.renderTitle({\n                  href,\n                  target,\n                  titleSearchHandle,\n                  title,\n                })\n              )}\n            </h3>\n          </div>\n          {subTitle && (\n            <div\n              data-search-handle={stubTitleSearchHandle}\n              className=\"SRC-author\"\n            >\n              {subTitle}\n            </div>\n          )}\n          {/* \n            Below is a hack that allows word highlighting to work, the Search component insert's\n            html elements outside of the React DOM which if detected would break the app,\n            but as written below this avoids that reconcilliation process.\n          */}\n          {description &&\n            this.renderShortDescription(\n              description,\n              hasClickedShowMore,\n              descriptionSubTitle,\n              descriptionLinkConfig,\n            )}\n          {description &&\n            this.renderLongDescription(\n              description,\n              hasClickedShowMore,\n              descriptionSubTitle,\n              descriptionLinkConfig,\n              this.props.token,\n            )}\n        </div>\n        {showFooter && (\n          <CardFooter\n            isHeader={false}\n            secondaryLabelLimit={secondaryLabelLimit}\n            values={values}\n          />\n        )}\n      </div>\n    )\n  }\n\n  public renderLongDescription(\n    description: string,\n    hasClickedShowMore: boolean,\n    descriptionSubTitle: any,\n    descriptionLinkConfig?: MarkdownValue,\n    token?: string,\n  ): React.ReactNode {\n    let content: JSX.Element | string = description\n    if (descriptionLinkConfig?.isMarkdown) {\n      content = <MarkdownSynapse token={token} markdown={content} />\n    }\n    const show = hasClickedShowMore || descriptionLinkConfig\n    return (\n      <div className={show ? '' : 'SRC-hidden'}>\n        <span\n          data-search-handle={descriptionSubTitle}\n          className={`SRC-font-size-base ${CARD_LONG_DESCRIPTION_CSS}`}\n        >\n          {content}\n        </span>\n      </div>\n    )\n  }\n\n  public renderShortDescription(\n    description: string,\n    hasClickedShowMore: boolean,\n    descriptionSubTitle: any,\n    descriptionLinkConfig?: MarkdownValue,\n  ): React.ReactNode {\n    if (descriptionLinkConfig) {\n      return <></>\n    }\n    return (\n      <div className={hasClickedShowMore ? 'SRC-hidden' : ''}>\n        <span\n          data-search-handle={descriptionSubTitle}\n          className={`SRC-font-size-base ${CARD_SHORT_DESCRIPTION_CSS} SRC-short-description`}\n        >\n          {getCutoff(description).previewText}\n        </span>\n        {description.length >= CHAR_COUNT_CUTOFF && (\n          <button\n            style={{\n              fontSize: '14px',\n              cursor: 'pointer',\n              marginLeft: '-2px',\n            }}\n            className=\"SRC-primary-text-color\"\n            onClick={this.toggleShowMore}\n          >\n            ...Show More\n          </button>\n        )}\n      </div>\n    )\n  }\n}\n","import { lexer, parser } from 'sql-parser'\nimport { SYNAPSE_REGX } from '../../containers/GenericCard'\nimport { SelectColumn, Row } from '../synapseTypes'\n\nexport type KeyValue = {\n  [index: string]: string\n}\n\nexport type SQLOperator = 'LIKE' | '=' | 'HAS'\n\n// look for \"group by\", multi-line and case insensitive\nconst GROUP_BY_REGEX = /group by/im\nexport const isGroupByInSql = (sql: string): boolean => {\n  return GROUP_BY_REGEX.test(sql)\n}\nconst WITHOUT_SYN_PREFIX = 3\n\nconst generateTokenUsingOperator = (\n  literal: string,\n  operator: SQLOperator,\n  match: string,\n) => {\n  let usedMatchForLike = match\n  if (match.match(SYNAPSE_REGX)) {\n    // If we use a LIKE statement with a synId the backend will look for a string with the first three\n    // characters being 'syn', however, it stores synIds without 'syn', so the query will fail\n    // The backend usually parses 'syn' out, but not with the LIKE clause since its expecting a regex, so we\n    // parse this out. This will cause a bug if something matches the synId regex but is in free text.\n    usedMatchForLike = match.substring(WITHOUT_SYN_PREFIX)\n  }\n  // form the has clause, e.g sql = \".... HAS ('condition1', 'condition2',...,'conditionN')\n  const matchForHas = match\n    .split(',')\n    // NOTE - Using single quotes to surround the search term is necessary for the backend parser.\n    .map(el => `'${el}'`)\n    .join(',')\n  switch (operator) {\n    case 'LIKE':\n      return [\n        ['LITERAL', literal, '1'],\n        ['OPERATOR', operator, '1'],\n        ['STRING', `%${usedMatchForLike}%`, '1'],\n      ]\n    case 'HAS':\n      return [\n        ['LITERAL', literal, '1'],\n        ['OPERATOR', operator, '1'],\n        /* \n          Using PARAMETER as hack, the parser will use the exact value for a PARAMETER value,\n          it won't add quotes around the argument or remove parens (which is the standard behavior\n          for type STRING) that would cause an error on the backend\n        */\n        ['PARAMETER', `(${matchForHas})`, '1'],\n      ]\n    default:\n      // default use operator as-is\n      return [\n        ['LITERAL', literal, '1'],\n        ['OPERATOR', operator, '1'],\n        ['STRING', match, '1'],\n      ]\n  }\n}\n\nexport const getWhereInsertIndex = (\n  tokens: string[][]\n):number => {\n  const existingWhereIndex = tokens.findIndex(el => el[0] === 'WHERE')\n  if (existingWhereIndex !== -1) {\n    return existingWhereIndex\n  }\n  let targetIndex = tokens.findIndex(el => el[0] === 'GROUP')\n  if (targetIndex !== -1) {\n    return targetIndex\n  }\n  targetIndex = tokens.findIndex(el => el[0] === 'HAVING')\n  if (targetIndex !== -1) {\n    return targetIndex\n  }\n  targetIndex = tokens.findIndex(el => el[0] === 'ORDER')\n  if (targetIndex !== -1) {\n    return targetIndex\n  }\n  //else insert it at the end\n  targetIndex = tokens.findIndex(el => el[0] === 'EOF')\n  return targetIndex\n}\n// This will construct a sql query by adding the conditions in searchParams\n// to the WHERE clause, preserving all other clauses\nexport const insertConditionsFromSearchParams = (\n  searchParams: KeyValue,\n  sql: string,\n  operator: SQLOperator = 'LIKE',\n) => {\n  // if there are no search params, or if all search params are QueryWrapper queries\n  const isQueryWrapperKey = (key: string) => key.startsWith('QueryWrapper')\n  let searchParamKeys = Object.keys(searchParams)\n  if (searchParamKeys.length === 0 || searchParamKeys.every(isQueryWrapperKey)) {\n    return sql\n  }\n  const tokens: string[][] = lexer.tokenize(sql)\n  // we want to either create a where clause or insert into the where clause\n  const foundIndex = tokens.findIndex(el => el[0] === 'WHERE')\n  const whereClauseIndex = getWhereInsertIndex(tokens)\n  const indexAfterWhereClause = whereClauseIndex + 1\n  if (foundIndex === -1) {\n    // insert a where clause\n    tokens.splice(whereClauseIndex, 0, ['WHERE', 'WHERE', '1'])\n  } else {\n    // if this is inserting into a where clause then we have to make sure that the logic is chained\n    tokens.splice(indexAfterWhereClause, 0, ['CONDITIONAL', 'AND', '1'])\n  }\n  const searchParamsLen = Object.keys(searchParams).length\n  Object.keys(searchParams).forEach((key, index) => {\n    const token = generateTokenUsingOperator(key, operator, searchParams[key])\n    if (index < searchParamsLen - 1) {\n      // make sure to chain the ANDs until the last one\n      token.unshift(['CONDITIONAL', 'AND', '1'])\n    }\n    tokens.splice(indexAfterWhereClause, 0, ...token)\n  })\n  return formatSQLFromParser(tokens)\n}\n\nexport const formatSQLFromParser = (tokens: string[][]) => {\n  // replace all DBLSTRINGs (escaped strings) with LITERALs\n  tokens.forEach(value => {\n    if (value[0] === 'DBLSTRING') {\n      value[0] = 'LITERAL'\n    }\n  })\n  // if synId has a DOT (e.g. 'syn123.2') then we have to alter the sql produced\n  const dotIndex = tokens.findIndex(val => val[0] === 'DOT')\n  if (dotIndex !== -1) {\n    // Given sql with a versioned entity, e.g. \"select * from syn123.2\"\n    // Tokens has the form:\n    /*\n    [\n      [\"SELECT\" , \"select\"],\n      ..\n      [\"FROM\", \"from\"],\n      [\"LITERAL\", \"syn123\"],\n      [\"DOT\", \".\"],\n      [\"LITERAL\", \"2\"],\n\n      which we need to transform to\n\n      [\"SELECT\" , \"select\"],\n      ..\n      [\"FROM\", \"from\"],\n      [\"LITERAL\", \"syn123.2\"],\n    */\n\n    const synId = tokens[dotIndex - 1][1]\n    const version = tokens[dotIndex + 1][1]\n    const synIdWithVersion = `${synId}.${version}`\n    tokens.splice(dotIndex, 2)\n    tokens[dotIndex - 1] = ['LITERAL', synIdWithVersion]\n  }\n  const newSql = parser.parse(tokens).toString() as string\n  // construct the sql using their formatter and then alter it to remove erroneous\n  // backticks from the table identifier: e.g. (their output) `syn1234` ->  (our output) syn1234\n  const synId = tokens[tokens.findIndex(el => el[0] === 'FROM') + 1][1]\n  const synIdWithBackticks = `\\`${synId}\\``\n  return newSql.replace(synIdWithBackticks, synId)\n}\n\n//parses synapse entity id from a sql query string\n//look for a pattern of 'from[some number of spaces]syn[somenumbers]` case insensitive\nexport const parseEntityIdFromSqlStatement = (sql: string): string => {\n  const matches = sql.match(/(from)\\s+(syn)\\d+/gi)\n  return matches && matches[0] ? matches[0].substr(5).trim() : ''\n}\n\nexport const resultToJson = <T>(\n  headerColumns: SelectColumn[],\n  rowColumns: Row[],\n): T[] => {\n  const result: T[] = []\n  const rows = rowColumns.map(row => row.values)\n  const headers = headerColumns.map(column => column.name)\n  rows.forEach((row, index) => {\n    result[index] = {} as T\n    row.forEach((text, cellIndex) => {\n      result[index][headers[cellIndex]] = text\n    })\n  })\n  return result\n}\n","import Plotly from 'plotly.js-basic-dist'\nimport * as React from 'react'\nimport createPlotlyComponent from 'react-plotly.js/factory'\nimport { SynapseConstants } from '../../utils/'\nimport { getFullQueryTableResults } from '../../utils/SynapseClient'\nimport {\n  QueryResultBundle,\n  QueryBundleRequest,\n} from '../../utils/synapseTypes/'\nimport { parseEntityIdFromSqlStatement } from '../../utils/functions/sqlFunctions'\nconst Plot = createPlotlyComponent(Plotly)\n\nexport type SynapsePlotProps = {\n  token?: string\n  ownerId?: string\n  wikiId?: string\n  widgetparamsMapped?: any\n}\n\ntype SynapsePlotState = {\n  isLoaded: boolean\n  queryData: QueryResultBundle\n}\n\nclass SynapsePlot extends React.Component<SynapsePlotProps, SynapsePlotState> {\n  constructor(props: SynapsePlotProps) {\n    super(props)\n    this.state = {\n      isLoaded: false,\n      queryData: {} as QueryResultBundle,\n    }\n    this.fetchPlotlyData = this.fetchPlotlyData.bind(this)\n    this.showPlot = this.showPlot.bind(this)\n  }\n\n  public componentDidMount() {\n    this.fetchPlotlyData()\n  }\n  /**\n   * Get data for plotly\n   *\n   * @returns data corresponding to plotly widget\n   */\n  public fetchPlotlyData() {\n    const { token } = this.props\n    const { query } = this.props.widgetparamsMapped\n    const queryRequest: QueryBundleRequest = {\n      concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n      partMask: SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n      entityId: parseEntityIdFromSqlStatement(query),\n      query: {\n        sql: query,\n      },\n    }\n\n    getFullQueryTableResults(queryRequest, token)\n      .then((data: QueryResultBundle) => {\n        this.setState({\n          isLoaded: true,\n          queryData: data,\n        })\n      })\n      .catch((err: any) => {\n        console.log('Error on full table query ', err)\n      })\n  }\n\n  public showPlot() {\n    if (!this.state.isLoaded) {\n      return\n    }\n    const {\n      title,\n      xtitle,\n      ytitle,\n      type,\n      xaxistype,\n      showlegend,\n    } = this.props.widgetparamsMapped\n    const queryData = this.state\n    const isHorizontal = this.props.widgetparamsMapped.horizontal.toLowerCase()\n    const layout: any = {\n      showlegend,\n      title,\n    }\n    if (xtitle) {\n      layout.xaxis = {\n        title: xtitle,\n      }\n    }\n    if (xaxistype) {\n      layout.xaxis = {\n        ...layout.xaxis,\n        xaxistype: xaxistype.toLowerCase(),\n      }\n    }\n    if (ytitle) {\n      layout.yaxis = {\n        title: ytitle,\n      }\n    }\n    // init plot_data\n    const plotData: any = []\n    const orientation = isHorizontal ? 'v' : 'h'\n    const headers = queryData.queryData.queryResult.queryResults.headers\n    for (let i = 0; i < headers.length - 1; i += 1) {\n      // make an entry for each set of data points\n      plotData[i] = {\n        orientation,\n        name: headers[i + 1].name,\n        type: type.toLowerCase(),\n        x: [],\n        y: [],\n      }\n    }\n    // grab all the data\n    for (const row of queryData.queryData.queryResult.queryResults.rows) {\n      for (let j = 1; j < row.values.length; j += 1) {\n        // create pairs of data\n        const rowValues: any = row.values\n        plotData[j - 1].x.push(rowValues[0])\n        plotData[j - 1].y.push(rowValues[j])\n      }\n    }\n    return <Plot layout={layout} data={plotData} />\n  }\n\n  public render() {\n    if (!this.state.isLoaded) {\n      return null\n    }\n    return this.showPlot()\n  }\n}\nexport default SynapsePlot\n","import * as React from 'react'\nimport { useEffect, useState } from 'react'\nimport { getEntity, getFiles } from '../../utils/SynapseClient'\nimport {\n  FileEntity,\n  FileHandleAssociateType,\n  FileHandleAssociation,\n  BatchFileRequest,\n  BatchFileResult,\n} from '../../utils/synapseTypes'\nimport { SynapseConstants } from '../../utils/'\n\nexport type Props = {\n  params: any\n  token?: string\n}\n\nexport default function SynapseVideo({ params, token }: Props) {\n  const [video, setVideo] = useState<string>()\n  const [videoUrl, setVideoUrl] = useState<string>()\n\n  const videoWidth = params.width ?? ''\n  const videoHeight = params.height ?? ''\n  useEffect(() => {\n    const getVideo = () => {\n      if (params.videoId)\n        setVideo(`https://www.youtube.com/embed/${params.videoId}`)\n      else if (params.vimeoId)\n        setVideo(`https://player.vimeo.com/video/${params.vimeoId}`)\n      else {\n        const videoKey =\n          params.oggSynapseId || params.mp4SynapseId || params.webmSynapseId\n\n        getEntity<FileEntity>(token, videoKey).then((data: FileEntity) => {\n          const fileHandleAssociationList: FileHandleAssociation[] = [\n            {\n              associateObjectId: videoKey,\n              associateObjectType: FileHandleAssociateType.FileEntity,\n              fileHandleId: data.dataFileHandleId,\n            },\n          ]\n          getSynapseFiles(fileHandleAssociationList, data.dataFileHandleId)\n        })\n      }\n    }\n\n    const getSynapseFiles = (\n      fileHandleAssociationList: FileHandleAssociation[],\n      id: string,\n    ) => {\n      const request: BatchFileRequest = {\n        includeFileHandles: false,\n        includePreSignedURLs: true,\n        includePreviewPreSignedURLs: false,\n        requestedFiles: fileHandleAssociationList,\n      }\n\n      getFiles(request, token)\n        .then((data: BatchFileResult) => {\n          const { preSignedURL } = data.requestedFiles.filter(\n            el => el.fileHandleId === id,\n          )[0]\n          setVideoUrl(preSignedURL)\n        })\n        .catch(err => {\n          console.error('Error on getting video ', err)\n        })\n    }\n    getVideo()\n  }, [video, params, token, videoHeight, videoWidth])\n\n  const RenderVideo = () => {\n    return (\n      <div>\n        {videoUrl ? (\n          <video\n            controls\n            src={videoUrl}\n            width={videoWidth}\n            height={videoHeight}\n          >\n            It does not support the HTML5 Video element.\n          </video>\n        ) : (\n          <iframe\n            title=\"video frame\"\n            src={video}\n            width={videoWidth}\n            height={videoHeight}\n          ></iframe>\n        )}\n      </div>\n    )\n  }\n  return (\n    <div>\n      {token ? (\n        <RenderVideo />\n      ) : (\n        <p>\n          You will need to\n          <button\n            className={`${SynapseConstants.SRC_SIGN_IN_CLASS} sign-in-btn default\n                `}\n          >\n            Sign in\n          </button>\n          in for access to that resource.\n        </p>\n      )}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { SRC_SIGN_IN_CLASS } from '../utils/SynapseConstants'\n\nexport type SignInProps = {\n  className?: string\n  style?: React.CSSProperties\n}\n// An event listener for the class SRC_SIGN_IN_CLASS is needed to trigger a download\n// modal\nconst SignInButton = ({ className, style }: SignInProps) => {\n  return (\n    <button\n      type=\"button\"\n      style={style}\n      className={`SignInButton ${SRC_SIGN_IN_CLASS} SRC-primary-text-color ${className}`}\n    >\n      Sign In\n    </button>\n  )\n}\n\nexport default SignInButton\n","import * as React from 'react'\nimport { SynapseClientError } from '../utils/SynapseClient'\nimport SignInButton from './SignInButton'\nimport { Alert, Button } from 'react-bootstrap'\nimport { FallbackProps } from 'react-error-boundary'\n\ntype ErrorProps = {\n  token?: string\n  error?: string | Error | SynapseClientError\n}\n\nfunction isSynapseClientError(\n  error: string | Error | SynapseClientError,\n): error is SynapseClientError {\n  return (error as any).status !== undefined\n}\n\nfunction isError(error: string | Error | SynapseClientError): error is Error {\n  return (error as any).message !== undefined\n}\n\nfunction isString(error: string | Error | SynapseClientError): error is string {\n  return typeof error === 'string'\n}\n\nexport const ClientError = (props: {\n  error: SynapseClientError\n  token?: string\n}) => {\n  const { error, token } = props\n  const loginError = (error.status === 403 || error.status === 401) && !token\n  const accessDenied = error.status === 403 && token\n\n  return (\n    <>\n      {loginError && (\n        <>\n          Please <SignInButton /> to view this resource.\n        </>\n      )}\n      {accessDenied && <>You are not authorized to access this resource.</>}\n      {\n        // if we don't have a friendly error message then show the error\n        !accessDenied && !loginError && <>{error.reason}</>\n      }\n    </>\n  )\n}\n\nexport const ErrorBanner = (props: ErrorProps) => {\n  const { error, token } = props\n\n  if (!error) {\n    return <></>\n  }\n\n  let synapseClientError: SynapseClientError | undefined = undefined\n  let jsError: Error | undefined = undefined\n  let stringError: string | undefined = undefined\n  if (isSynapseClientError(error)) {\n    synapseClientError = error\n  } else if (isError(error)) {\n    jsError = error\n  } else if (isString(error)) {\n    stringError = error\n  }\n  return (\n    <div className=\"Error\">\n      <Alert\n        dismissible={false}\n        show={true}\n        variant={'danger'}\n        transition={false}\n      >\n        <p>\n          {synapseClientError && (\n            <ClientError error={synapseClientError} token={token} />\n          )}\n          {jsError && jsError.message}\n          {stringError && stringError}\n        </p>\n      </Alert>\n    </div>\n  )\n}\n\nexport const ErrorBannerFallback = (props: FallbackProps) => {\n  return (\n    <div role=\"alert\" className=\"SRC-marginBottomTop\">\n      <ErrorBanner {...props}></ErrorBanner>\n      <Button onClick={props.resetErrorBoundary}>Reload</Button>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { SynapseClient, SynapseConstants } from '../utils'\nimport { FileHandleResults, WikiPage } from '../utils/synapseTypes/'\nimport UserCard from './UserCard'\nimport Bookmarks from './widgets/Bookmarks'\nimport SynapseImage from './widgets/SynapseImage'\nimport SynapsePlot from './widgets/SynapsePlot'\nimport SynapseVideo from './widgets/SynapseVideo'\nimport { ObjectType } from '../utils/synapseTypes/WikiPageKey'\nimport { ErrorBanner } from './ErrorBanner'\nimport { SynapseClientError } from '../utils/SynapseClient'\n\nconst TOC_CLASS = {\n  1: 'toc-indent1',\n  2: 'toc-indent2',\n  3: 'toc-indent3',\n  4: 'toc-indent4',\n  5: 'toc-indent5',\n  6: 'toc-indent6',\n}\n\ndeclare var katex: any\n\ndeclare var markdownitSynapse: any\ndeclare var markdownit: any\ndeclare var markdownitSub: any\ndeclare var markdownitSup: any\ndeclare var markdownitCentertext: any\ndeclare var markdownitSynapseHeading: any\ndeclare var markdownitSynapseTable: any\ndeclare var markdownitStrikethroughAlt: any\ndeclare var markdownitContainer: any\ndeclare var markdownitEmphasisAlt: any\ndeclare var markdownitInlineComments: any\ndeclare var markdownitBr: any\ndeclare var sanitizeHtml: any\n\ndeclare var markdownitMath: any\n\nexport type MarkdownSynapseProps = {\n  token?: string\n  ownerId?: string\n  wikiId?: string\n  markdown?: string\n  renderInline?: boolean\n  objectType?: ObjectType\n}\nconst md = markdownit({ html: true })\n\ntype MarkdownSynapseState = {\n  md: any\n  data: Partial<WikiPage>\n  fileHandles?: FileHandleResults\n  error: SynapseClientError | undefined\n  isLoading: boolean\n}\n/**\n * Basic Markdown functionality for Synapse, supporting Images/Plots/References/Bookmarks/buttonlinks\n *\n * @class Markdown\n * @extends {React.Component}\n */\nexport default class MarkdownSynapse extends React.Component<\n  MarkdownSynapseProps,\n  MarkdownSynapseState\n> {\n  public markupRef: React.RefObject<HTMLInputElement>\n\n  /**\n   * Creates an instance of Markdown.\n   * @param {*} props\n   */\n  constructor(props: MarkdownSynapseProps) {\n    super(props)\n    // markdownitSynapse wraps around markdownit object and uses its own dependencies\n    markdownitSynapse.init_markdown_it(\n      md,\n      markdownitSub,\n      markdownitSup,\n      markdownitCentertext,\n      markdownitSynapseHeading,\n      markdownitSynapseTable,\n      markdownitStrikethroughAlt,\n      markdownitContainer,\n      markdownitEmphasisAlt,\n      markdownitInlineComments,\n      markdownitBr,\n    )\n\n    const mathSuffix = ''\n    // Update the internal markdownit object with the wrapped synapse object\n    md.use(markdownitSynapse, mathSuffix, 'https://synapse.org').use(\n      markdownitMath,\n      mathSuffix,\n    )\n    const data: any = {}\n    if (this.props.markdown) {\n      data.markdown = this.props.markdown\n    }\n    this.state = {\n      md,\n      error: undefined,\n      fileHandles: undefined,\n      data,\n      isLoading: true,\n    }\n    this.markupRef = React.createRef()\n    this.handleLinkClicks = this.handleLinkClicks.bind(this)\n    // handle widgets and math markdown\n    this.renderMarkdown = this.renderMarkdown.bind(this)\n    this.recursiveRender = this.recursiveRender.bind(this)\n    this.processMath = this.processMath.bind(this)\n    // handle init calls to get wiki related items\n    this.getWikiAttachments = this.getWikiAttachments.bind(this)\n    this.getWikiPageMarkdown = this.getWikiPageMarkdown.bind(this)\n    // handle rendering widgets\n    this.renderWidget = this.renderWidget.bind(this)\n    this.renderSynapseButton = this.renderSynapseButton.bind(this)\n    this.renderSynapseImage = this.renderSynapseImage.bind(this)\n    this.renderVideo = this.renderVideo.bind(this)\n    this.renderSynapsePlot = this.renderSynapsePlot.bind(this)\n    this.renderSynapseTOC = this.renderSynapseTOC.bind(this)\n    this.createHTML = this.createHTML.bind(this)\n    this.addBookmarks = this.addBookmarks.bind(this)\n    this.addIdsToReferenceWidgets = this.addIdsToReferenceWidgets.bind(this)\n    this.addIdsToTocWidgets = this.addIdsToTocWidgets.bind(this)\n  }\n\n  public componentWillUnmount() {\n    // @ts-ignore TODO: find better documentation on typescript/react event params\n    this.markupRef.current &&\n      // @ts-ignore TODO: find better documentation on typescript/react event params\n      this.markupRef.current.removeEventListener('click', this.handleLinkClicks)\n  }\n\n  // Manually handle clicks to anchor tags where the scrollto isn't handled by page hash\n  public handleLinkClicks(event: React.MouseEvent<HTMLElement>) {\n    const genericElement = event.target as HTMLElement\n    if (genericElement.tagName === 'A' || genericElement.tagName === 'BUTTON') {\n      const anchor = event.target as HTMLAnchorElement\n      if (anchor.id.substring(0, 3) === 'ref') {\n        event.preventDefault()\n        // its a reference, so we scroll to the appropriate bookmark\n        const referenceNumber = Number(event.currentTarget.id.substring(3)) // e.g. ref2 => '2'\n        const goTo = this.markupRef.current!.querySelector(\n          `#bookmark${referenceNumber}`,\n        )\n        try {\n          goTo!.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center',\n          })\n        } catch (e) {\n          console.log('error on scroll', e)\n        }\n      } else if (\n        event.currentTarget.id !== null &&\n        anchor.getAttribute('data-anchor')\n      ) {\n        event.preventDefault()\n        // handle table of contents widget\n        const idOfContent = anchor.getAttribute('data-anchor')\n        const goTo = this.markupRef.current!.querySelector(`#${idOfContent}`)\n        try {\n          goTo!.scrollIntoView({\n            behavior: 'smooth',\n            block: 'center',\n            inline: 'center',\n          })\n        } catch (e) {\n          console.log('error on scroll', e)\n        }\n      }\n    }\n  }\n\n  /**\n   * Given input text, generate markdown object to be passed onto inner html of some container.\n   * @param {String} markdown The text being written in plain markdown\n   * @returns {Object} Dictionary to be passed into dangerouslySetInnerHTML with markdown text\n   */\n  public createHTML(markdown?: string) {\n    if (!markdown) {\n      return { __html: '' }\n    }\n    // Note - renderInline parses out any block level elements contained in the markdown\n    const initText = this.props.renderInline\n      ? this.state.md.renderInline(markdown)\n      : this.state.md.render(markdown)\n    const cleanText = sanitizeHtml(initText, {\n      allowedAttributes: {\n        a: ['href', 'target'],\n        button: ['class'],\n        div: ['class'], // PORTALS-1450: including 'style' in the allow-list will cause string values to come through, which crashes the app when used (because it uses jsx).\n        h1: ['toc'],\n        h2: ['toc'],\n        h3: ['toc'],\n        h4: ['toc'],\n        h5: ['toc'],\n        h6: ['toc'],\n        li: ['class'],\n        ol: ['class'],\n        span: ['*'],\n        table: ['class'],\n        th: ['colspan'],\n        thead: ['class'],\n        ul: ['class'],\n        img: ['src', 'alt'],\n      },\n      allowedTags: [\n        'span',\n        'code',\n        'h1',\n        'h2',\n        'h3',\n        'h4',\n        'h5',\n        'p',\n        'b',\n        'i',\n        'em',\n        'strong',\n        'a',\n        'id',\n        'table',\n        'tr',\n        'td',\n        'tbody',\n        'th',\n        'thead',\n        'button',\n        'div',\n        'img',\n        'image',\n        'ol',\n        'ul',\n        'li',\n        'svg',\n        'g',\n        'br',\n        'hr',\n        'summary',\n        'details',\n        'strong',\n      ],\n    })\n    return { __html: cleanText }\n  }\n\n  /**\n   * Find all math identified elements of the form [id^=\\\"mathjax-\\\"]\n   * (e.g. <dom element id=\"mathjax-10\"> text </dom element>)\n   * and transform them to their math markedown equivalents\n   */\n  public processMath() {\n    if (!this.markupRef.current) {\n      return\n    }\n    // use regex to grab all elements\n    const mathExpressions = this.markupRef.current.querySelectorAll<\n      HTMLElement\n    >('[id^=\"mathjax-\"]')\n    // go through all obtained elements and transform them with katex\n    mathExpressions.forEach(element => {\n      element.textContent &&\n        katex.render(element.textContent, element, {\n          // @ts-ignore\n          output: 'html',\n          throwOnError: false,\n        })\n    })\n  }\n  /**\n   * Process all the corresponding bookmark tags of the references made throughout the page\n   *\n   * @memberof MarkdownSynapse\n   */\n  public addBookmarks() {\n    markdownitSynapse.resetFootnotes()\n    this.createHTML(this.state.data.markdown)\n    const footnotesHtml = this.createHTML(markdownitSynapse.footnotes()).__html\n    if (footnotesHtml.length > 0) {\n      return <Bookmarks footnotes={footnotesHtml} />\n    }\n    return\n  }\n\n  /**\n   * Get wiki page markdown and file attachment handles\n   */\n  public async getWikiPageMarkdown() {\n    const { ownerId, wikiId, token, objectType } = this.props\n    if (!ownerId && !wikiId) {\n      return\n    }\n    try {\n      const wikiPage = await SynapseClient.getEntityWiki(\n        token,\n        ownerId,\n        wikiId,\n        objectType,\n      )\n      try {\n        const fileHandles = await this.getWikiAttachments(\n          wikiId ? wikiId : wikiPage.id,\n        )\n        this.setState({\n          data: wikiPage,\n          fileHandles,\n          error: undefined,\n        })\n      } catch (fileHandlesErr) {\n        console.error('fileHandlesErr = ', fileHandlesErr)\n      }\n    } catch (err) {\n      console.error('Error on wiki markdown load\\n', err)\n      this.setState({\n        error: err,\n      })\n    }\n  }\n  public async getWikiAttachments(wikiId: string) {\n    const { token, ownerId, objectType } = this.props\n    if (!ownerId) {\n      console.error(\n        'Cannot get wiki attachments without ownerId on Markdown Component',\n      )\n      return undefined\n    }\n    return await SynapseClient.getWikiAttachmentsFromEntity(\n      token,\n      ownerId,\n      wikiId,\n      objectType,\n    )\n      .then(data => {\n        return data\n      })\n      .catch(err => {\n        console.error('Error on wiki attachment load ', err)\n        return undefined\n      })\n  }\n\n  public addIdsToReferenceWidgets(text: string) {\n    const referenceRegex = /<span id=\"wikiReference.*?<span data-widgetparams.*?span>/g\n    let referenceCount = 1\n\n    return text.replace(referenceRegex, () => {\n      // replace all reference tags with id's of the form id=\"ref<number>\"\" that we can read onClick\n      const current = referenceCount\n      referenceCount += 1\n      return `<a href=\"\" id=\"ref${current}\">[${current}]</a>`\n    })\n  }\n\n  public addIdsToTocWidgets(text: string) {\n    const tocId = 'SRC-header-'\n    let tocIdCount = 1\n    const TOC_HEADER_REGEX = /<h[1-6] toc=\"true\">.*<\\/h[1-6]>/gm\n\n    return text.replace(TOC_HEADER_REGEX, (match: string) => {\n      // replace with id of the form id=\"toc\" so we can read them with onclick events\n      const curTocId = tocIdCount\n      tocIdCount += 1\n      const matchWithId = `${match.substring(\n        0,\n        3,\n      )} id=\"${tocId}${curTocId}\"${match.substring(3)}`\n      return matchWithId\n    })\n  }\n\n  /**\n   * The 'main' method of this class that process all the markdown and transforms it to the appropriate\n   * Synapse widgets.\n   *\n   * @returns JSX of the markdown into widgets\n   * @memberof MarkdownSynapse\n   */\n  public renderMarkdown() {\n    // create initial markup\n    let markup = this.createHTML(this.state.data.markdown).__html\n    // process reference widgets\n    markup = this.addIdsToReferenceWidgets(markup)\n    // process table of contents widgets\n    markup = this.addIdsToTocWidgets(markup)\n    if (markup.length > 0) {\n      const domParser = new DOMParser()\n      const document = domParser.parseFromString(markup, 'text/html')\n      return <>{this.recursiveRender(document.body, markup)}</>\n    }\n    return\n  }\n\n  /**\n   * recursiveRender will render react tree from HTML tree\n   *\n   * @param {Node} element This will be either a text Node or an HTMLElement\n   * @param {string} markdown The original markdown, its kept as a special case for the table of contents widget\n   * @returns {*}\n   * @memberof MarkdownSynapse\n   */\n  public recursiveRender(element: Node, markdown: string): any {\n    /*\n      Recursively render the html tree created from the markdown, there are a few cases:\n      1. element is Node and is text in which case it is simply rendered\n      2. element is an HTMLElement and is: a self closing tag, has no children (e.g. <br>), or its a synapse widget and is \n      rendered accordingly\n      3. element is an HTMLElement and has children so we loop through its childNodes, recurively render those, and then render its own tag\n      as the parent of those child nodes. Note - childNodes was specifically chosen over .children because text Nodes\n      would not come through .children\n    */\n    if (element.nodeType === Node.TEXT_NODE) {\n      // case 1.\n      return <> {element.textContent} </>\n    } else if (\n      element.nodeType === Node.ELEMENT_NODE &&\n      element instanceof HTMLElement\n    ) {\n      const tagName =\n        element.tagName.toLowerCase() === 'body'\n          ? 'span'\n          : element.tagName.toLowerCase()\n      const widgetParams = element.getAttribute('data-widgetparams')\n      if (widgetParams) {\n        // case 2\n        // process widget\n        return this.processHTMLWidgetMapping(widgetParams, markdown)\n      }\n      // manually add on props, depending on what comes through the markdown their could\n      // be unforseen issues with attributes being misnamed according to what react will respect\n      // e.g. class instead of className\n      const attributes = element.attributes\n      const props = {}\n      for (let i = 0; i < attributes.length; i++) {\n        let name = ''\n        let value = ''\n        const attribute = attributes.item(i)\n        if (attribute) {\n          name = attribute.name\n          value = attribute.value\n        }\n        if (name && value) {\n          props[name] = value\n        }\n      }\n      if (element.childNodes.length === 0) {\n        // case 2\n        // e.g. self closing tag like <br/> or <img>\n        return React.createElement(tagName, props)\n      }\n      // case 3\n      // recursively render children\n      const children = Array.from(element.childNodes).map((el, index) => {\n        return (\n          <React.Fragment key={index}>\n            {this.recursiveRender(el, markdown)}\n          </React.Fragment>\n        )\n      })\n      // Render tagName as parent element of the children below\n      return React.createElement(tagName, props, <>{children}</>)\n    }\n  }\n\n  /**\n   *  When the markdown string is transfered over the network certain characters get transformed,\n   * this does a simple transformation back to the original user's string.\n   *\n   * @param {string} xml\n   * @returns\n   * @memberof MarkdownSynapse\n   */\n  public decodeXml(xml: string) {\n    const escapedOneToXmlSpecialMap = {\n      '&amp;': '&',\n      '&gt;': '>',\n      '&lt;': '<',\n      '&quot;': '\"',\n    }\n    return xml.replace(/(&quot;|&lt;|&gt;|&amp;)/g, (str, item) => {\n      return escapedOneToXmlSpecialMap[item]\n    })\n  }\n\n  /**\n   * Given widgetMap renders it in a React component (or originalMarkup in special cases.)\n   *\n   * @param {string} widgetMatch The synapse widget to be rendered\n   * @param {string} originalMarkup The original markup text, this is a special case for widgets that\n   * are html specific.\n   * @returns JSX of the widget to render\n   * @memberof MarkdownSynapse\n   */\n  public processHTMLWidgetMapping(\n    widgetParams: string,\n    originalMarkup: string,\n  ) {\n    // General workflow -\n    //   1. Capture widget parameters\n    //   2. Transform any widget xml parameters to standard text\n    //   3. Split those parameters into a map\n    //   4. Render that widget based on its parameters\n\n    // steps 1,2\n    const decodedWidgetParams = this.decodeXml(widgetParams)\n\n    // decodedWidgetParams look like {<widget>?param1=xxx&param2=yyy}\n    const questionIndex = decodedWidgetParams.indexOf('?')\n    if (questionIndex === -1) {\n      // e.g. toc is passed, there are no params\n      return this.renderWidget(decodedWidgetParams, {}, originalMarkup)\n    }\n    const widgetType = decodedWidgetParams.substring(0, questionIndex)\n    const widgetparamsMapped = {}\n    // map out params and their values\n    decodedWidgetParams\n      .substring(questionIndex + 1)\n      .split('&')\n      .forEach(keyPair => {\n        let [key, value] = keyPair.split('=')\n        value = decodeURIComponent(value)\n        widgetparamsMapped[key] = value\n      })\n    return this.renderWidget(widgetType, widgetparamsMapped, originalMarkup)\n  }\n\n  /**\n   *  Given widgetType renders the apppropriate widget\n   *\n   * @param {string} widgetType The type of synapse widget. (e.g. 'image', 'plot')\n   * @param {*} widgetparamsMapped The parameters for this widget\n   * @param {string} originalMarkup The original markup.\n   * @returns\n   * @memberof MarkdownSynapse\n   */\n  public renderWidget(\n    widgetType: string,\n    widgetparamsMapped: any,\n    originalMarkup: string,\n  ) {\n    // we make keys out of the widget params\n    const key = JSON.stringify(widgetparamsMapped)\n    widgetparamsMapped.reactKey = key\n\n    switch (widgetType) {\n      case 'buttonlink':\n        return this.renderSynapseButton(widgetparamsMapped)\n      case 'image':\n        return this.renderSynapseImage(widgetparamsMapped)\n      case 'plot':\n        return this.renderSynapsePlot(widgetparamsMapped)\n      case 'toc':\n        return this.renderSynapseTOC(originalMarkup)\n      case 'badge':\n        return this.renderUserBadge(widgetparamsMapped)\n      case 'video':\n      case 'vimeo':\n      case 'youtube':\n        return this.renderVideo(widgetparamsMapped)\n      default:\n        return\n    }\n  }\n\n  public renderSynapseButton(widgetparamsMapped: any) {\n    let buttonClasses = ''\n    const { align = '', highlight = '' } = widgetparamsMapped\n    const alignLowerCase = align.toLowerCase()\n    if (alignLowerCase === 'left') {\n      buttonClasses += 'floatLeft '\n    }\n    if (alignLowerCase === 'right') {\n      buttonClasses += 'floatright '\n    }\n    if (highlight === 'true') {\n      buttonClasses += ' SRC-primary-button '\n    } else {\n      buttonClasses += 'SRC-light-button '\n    }\n    if (alignLowerCase === 'center') {\n      return (\n        <div key={widgetparamsMapped.reactKey} style={{ textAlign: 'center' }}>\n          <a\n            href={widgetparamsMapped.url}\n            className={'SRC-standard-button-shape ' + buttonClasses}\n            role=\"button\"\n          >\n            {widgetparamsMapped.text}\n          </a>\n        </div>\n      )\n    }\n    return (\n      <a\n        key={widgetparamsMapped.reactKey}\n        href={widgetparamsMapped.url}\n        className={'SRC-standard-button-shape ' + buttonClasses}\n        role=\"button\"\n      >\n        {widgetparamsMapped.text}\n      </a>\n    )\n  }\n  public renderSynapsePlot(widgetparamsMapped: any) {\n    return (\n      <SynapsePlot\n        key={widgetparamsMapped.reactKey}\n        token={this.props.token}\n        ownerId={this.props.ownerId}\n        wikiId={this.props.wikiId || this.state.data.id}\n        widgetparamsMapped={widgetparamsMapped}\n      />\n    )\n  }\n\n  public renderVideo(widgetparamsMapped: any) {\n    const { token } = this.props\n\n    return <SynapseVideo token={token} params={widgetparamsMapped} />\n  }\n\n  public renderSynapseImage(widgetparamsMapped: any) {\n    const { reactKey } = widgetparamsMapped\n    if (widgetparamsMapped.fileName) {\n      if (!this.state.fileHandles) {\n        // ensure files are loaded\n        return\n      }\n      // if file name is attached then the fileHandle ID is located\n      // in this wiki's file attachment list\n      return (\n        <SynapseImage\n          params={widgetparamsMapped}\n          key={reactKey}\n          token={this.props.token}\n          fileName={widgetparamsMapped.fileName}\n          wikiId={this.props.wikiId || this.state.data.id}\n          fileResults={this.state.fileHandles.list}\n        />\n      )\n    }\n    if (widgetparamsMapped.synapseId) {\n      // otherwise this image's fileHandle ID is not located\n      // in the file attachment list and will be loaded first\n      return (\n        <SynapseImage\n          params={widgetparamsMapped}\n          key={reactKey}\n          token={this.props.token}\n          synapseId={widgetparamsMapped.synapseId}\n        />\n      )\n    }\n    return\n  }\n  public renderSynapseTOC(originalMarkup: string) {\n    const elements: any[] = []\n    const TOC_HEADER_REGEX_WITH_ID = /<h([1-6]) id=\"(.*)\" .*toc=\"true\">(.*)<\\/h[1-6]>/gm\n    let text = ''\n    originalMarkup.replace(TOC_HEADER_REGEX_WITH_ID, (p1, p2, p3, p4) => {\n      text += p4\n      elements.push(\n        <div key={p4}>\n          <a className={`link ${TOC_CLASS[Number(p2)]}`} data-anchor={p3}>\n            {p4}\n          </a>\n        </div>,\n      )\n      return ''\n    })\n    return <div key={text}>{elements}</div>\n  }\n\n  public renderUserBadge(widgetparamsMapped: any) {\n    return (\n      <UserCard\n        key={JSON.stringify(widgetparamsMapped)}\n        size={SynapseConstants.SMALL_USER_CARD}\n        alias={widgetparamsMapped.alias}\n      />\n    )\n  }\n\n  public async componentDidMount() {\n    if (this.state.data.markdown) {\n      this.setState({ isLoading: false })\n      return\n    }\n    // we use this.markupRef.current && because in testing environment refs aren't defined\n    // @ts-ignore\n    this.markupRef.current &&\n      // @ts-ignore\n      this.markupRef.current!.addEventListener('click', this.handleLinkClicks)\n    // unpack and set default value if not specified\n    // get wiki attachments\n    await this.getWikiPageMarkdown()\n    this.processMath()\n    this.setState({ isLoading: false })\n  }\n\n  // on component update find and re-render the math/widget items accordingly\n  public async componentDidUpdate(prevProps: MarkdownSynapseProps) {\n    let shouldUpdate = this.props.token !== prevProps.token\n    shouldUpdate = shouldUpdate || this.props.ownerId !== prevProps.ownerId\n    shouldUpdate = shouldUpdate || this.props.wikiId !== prevProps.wikiId\n\n    // we have to carefully update the component so it doesn't encounter an infinite loop\n    if (shouldUpdate) {\n      await this.getWikiPageMarkdown()\n    }\n    this.processMath()\n  }\n\n  public render() {\n    const { renderInline, token } = this.props\n    const { isLoading, error } = this.state\n\n    if (error) {\n      return <ErrorBanner token={token} error={error} />\n    }\n    const bookmarks = this.addBookmarks()\n    const content = (\n      <>\n        {isLoading && <span className=\"spinner\" />}\n        {this.renderMarkdown()}\n        {bookmarks && <div>{this.addBookmarks()}</div>}\n      </>\n    )\n    if (renderInline) {\n      return (\n        <span className=\"markdown markdown-inline\" ref={this.markupRef}>\n          {content}\n        </span>\n      )\n    }\n    return (\n      <div className=\"markdown\" ref={this.markupRef}>\n        {content}\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\nimport { useState, useEffect } from 'react'\nimport MarkdownSynapse from '../MarkdownSynapse'\nimport {\n  WikiPageKey,\n  AccessRequirementStatus,\n  AccessRequirement,\n  UserProfile,\n  TermsOfUseAccessRequirement,\n  SelfSignAccessRequirement,\n  ManagedACTAccessRequirement,\n  AccessApproval,\n  ApprovalState,\n  ACTAccessRequirement,\n} from '../../utils/synapseTypes/'\nimport { SynapseClient } from '../../utils'\nimport AccessApprovalCheckMark from './AccessApprovalCheckMark'\nimport { SUPPORTED_ACCESS_REQUIREMENTS } from './AccessRequirementList'\n\nexport type AcceptedRequirementsProps = {\n  user: UserProfile | undefined\n  token: string | undefined\n  wikiPage: WikiPageKey | undefined\n  entityId: string\n  accessRequirement:\n    | AccessRequirement\n    | TermsOfUseAccessRequirement\n    | SelfSignAccessRequirement\n    | ManagedACTAccessRequirement\n  accessRequirementStatus: AccessRequirementStatus | undefined\n  showButton?: boolean\n  onHide?: Function\n}\n\nexport default function AcceptedRequirements({\n  user,\n  token,\n  wikiPage,\n  accessRequirement,\n  accessRequirementStatus,\n  showButton = true,\n  entityId,\n  onHide,\n}: AcceptedRequirementsProps) {\n  const [isHide, setIsHide] = useState<boolean>(true)\n  const propsIsApproved = accessRequirementStatus?.isApproved\n  const [isApproved, setIsApproved] = useState<boolean | undefined>(\n    propsIsApproved,\n  )\n\n  let acceptButtonText = ''\n  if (\n    accessRequirement.concreteType ===\n      SUPPORTED_ACCESS_REQUIREMENTS.ManagedACTAccessRequirement ||\n    accessRequirement.concreteType ===\n      SUPPORTED_ACCESS_REQUIREMENTS.ACTAccessRequirement\n  ) {\n    if (\n      window.location.hostname === 'www.synapse.org' ||\n      window.location.hostname === 'staging.synapse.org'\n    ) {\n      acceptButtonText = 'Request access'\n    } else {\n      acceptButtonText = 'Request access via Synapse.org'\n    }\n  } else {\n    acceptButtonText = 'I Accept Terms of Use'\n  }\n\n  useEffect(() => {\n    setIsApproved(propsIsApproved)\n  }, [propsIsApproved])\n\n  const gotoSynapseAccessRequirementPage = () => {\n    window.open(\n      `https://www.synapse.org/#!AccessRequirement:AR_ID=${accessRequirement.id}&TYPE=ENTITY&ID=${entityId}`,\n    )\n  }\n  const onAcceptClicked = () => {\n    if (\n      accessRequirement.concreteType ===\n        SUPPORTED_ACCESS_REQUIREMENTS.ManagedACTAccessRequirement ||\n      accessRequirement.concreteType ===\n        SUPPORTED_ACCESS_REQUIREMENTS.ACTAccessRequirement\n    ) {\n      gotoSynapseAccessRequirementPage()\n    } else {\n      if (!isApproved) {\n        const accessApprovalRequest: AccessApproval = {\n          requirementId: accessRequirement?.id!,\n          submitterId: user?.ownerId!,\n          accessorId: user?.ownerId!,\n          state: ApprovalState.APPROVED,\n        }\n\n        SynapseClient.postAccessApproval(token, accessApprovalRequest)\n          .then(_ => {\n            setIsApproved(true)\n          })\n          .catch(err => console.error('Error on post access approval: ', err))\n      }\n    }\n  }\n\n  const termsOfUse = (accessRequirement as TermsOfUseAccessRequirement)\n    .termsOfUse\n\n  const actContactInfo = (accessRequirement as ACTAccessRequirement)\n    .actContactInfo\n\n  const isTermsOfUse =\n    accessRequirement.concreteType ===\n    SUPPORTED_ACCESS_REQUIREMENTS.TermsOfUseAccessRequirement\n  const isActContactInfo =\n    accessRequirement.concreteType ===\n    SUPPORTED_ACCESS_REQUIREMENTS.ACTAccessRequirement\n\n  const isActOrTermsOfUse =\n    (isTermsOfUse && termsOfUse) || (isActContactInfo && actContactInfo)\n\n  let markdown = <></>\n\n  if (wikiPage) {\n    markdown = (\n      <div className=\"AcceptRequirementsMarkdown\">\n        <MarkdownSynapse\n          token={token}\n          wikiId={wikiPage?.wikiPageId}\n          ownerId={wikiPage?.ownerObjectId}\n          objectType={wikiPage?.ownerObjectType}\n        />\n      </div>\n    )\n  } else if (isActOrTermsOfUse) {\n    markdown = (\n      <MarkdownSynapse\n        markdown={isTermsOfUse ? termsOfUse : actContactInfo}\n        token={token}\n      />\n    )\n  }\n\n  const isManagedActAr =\n    accessRequirement.concreteType ===\n    SUPPORTED_ACCESS_REQUIREMENTS.ManagedACTAccessRequirement  \n  return (\n    <>\n      <div className=\"requirement-container\">\n        <AccessApprovalCheckMark isCompleted={isApproved} />\n        <div className=\"terms-of-use-content\">\n          {isApproved ? (\n            <div>\n              <p>\n                You have accepted the terms of use.\n                {isManagedActAr && (\n                  <button\n                    className=\"update-request-button bold-text\"\n                    onClick={() => {\n                      gotoSynapseAccessRequirementPage()\n                    }}\n                  >\n                    Update Request\n                  </button>\n                )}\n                <button\n                  className=\"view-terms-button bold-text\"\n                  onClick={() => {\n                    setIsHide(!isHide)\n                  }}\n                >\n                  View Terms\n                </button>\n              </p>\n              <div className={`view-terms ${isHide ? 'hidden' : 'show'}`}>\n                {markdown}\n              </div>\n            </div>\n          ) : (\n            markdown\n          )}\n        </div>\n      </div>\n      {token && showButton && (\n        <div className={`button-container ${isApproved ? `hide` : `default`}`}>\n          <div className=\"accept-button-container\">\n            <button className=\"accept-button\" onClick={onAcceptClicked}>\n              {acceptButtonText}\n            </button>\n          </div>\n\n          <div className=\"not-accept-button-container\">\n            <button className=\"not-accpet-button\" onClick={() => onHide?.()}>\n              I do not accept\n            </button>\n          </div>\n        </div>\n      )}\n    </>\n  )\n}\n","import * as React from 'react'\nimport { useEffect, useState } from 'react'\nimport {\n  SelfSignAccessRequirement,\n  WikiPageKey,\n  UserBundle,\n} from '../../utils/synapseTypes'\nimport { SynapseClient, SynapseConstants } from '../../utils'\nimport AccessApprovalCheckMark from './AccessApprovalCheckMark'\nimport AcceptedRequirements from './AcceptedRequirements'\nimport { AccessRequirementProps } from './AccessRequirementProps'\n\nexport default function SelfSignAccessRequirementComponent({\n  accessRequirement,\n  token,\n  user,\n  onHide,\n  accessRequirementStatus,\n  entityId,\n}: AccessRequirementProps<SelfSignAccessRequirement>) {\n  const [wikiPage, setWikiPage] = useState<WikiPageKey | undefined>(undefined)\n  const [userBundle, setUserBundle] = useState<UserBundle | undefined>(\n    undefined,\n  )\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  useEffect(() => {\n    const getSelfSignAccessData = async () => {\n      try {\n        setIsLoading(true)\n        const wikiPageRequirment = await SynapseClient.getWikiPageKeyForAccessRequirement(\n          token,\n          accessRequirement.id,\n        )\n\n        setWikiPage(wikiPageRequirment)\n\n        const certificationOrVerification =\n          SynapseConstants.USER_BUNDLE_MASK_IS_CERTIFIED |\n          SynapseConstants.USER_BUNDLE_MASK_IS_VERIFIED\n\n        if (user?.ownerId) {\n          const bundle = await SynapseClient.getUserBundle(\n            user.ownerId,\n            certificationOrVerification,\n            token,\n          )\n          setUserBundle(bundle)\n        }\n      } catch (err) {\n        console.error('Error on get Self Sign Access Requirement: ', err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    getSelfSignAccessData()\n  }, [accessRequirement, token, user])\n\n  return (\n    <>\n      {accessRequirement.isCertifiedUserRequired && (\n        <div className=\"requirement-container\">\n          <AccessApprovalCheckMark isCompleted={userBundle?.isCertified} />\n          <div>\n            <p className=\"self-sign-access-title bold-text\">\n              You must first become a\n              <a\n                className=\"self-sign-access-certified bold-text\"\n                href=\"https://www.synapse.org/#!Quiz:\"\n              >\n                &nbsp;certified user\n              </a>\n            </p>\n            {isLoading && <span className=\"spinner\" />}\n\n            <p\n              className={`self-sign-access-certified-success-text ${\n                userBundle?.isCertified ? 'show' : 'hidden'\n              }`}\n            >\n              You are a certified user\n            </p>\n          </div>\n        </div>\n      )}\n      {accessRequirement.isValidatedProfileRequired && (\n        <div className=\"requirement-container\">\n          <AccessApprovalCheckMark isCompleted={userBundle?.isVerified} />\n          <div>\n            <p className=\"self-sign-access-title bold-text\">\n              You must first apply to have your\n              <a\n                className=\"self-sign-access-validated bold-text\"\n                href=\"https://www.synapse.org/#!Profile:v/settings\"\n              >\n                &nbsp;user profile validated\n              </a>\n            </p>\n            {isLoading && <span className=\"spinner\" />}\n\n            <p\n              className={`self-sign-access-verified-success-text ${\n                userBundle?.isVerified ? 'show' : 'hidden'\n              }`}\n            >\n              You have applied to have user profile valiadation successfully\n            </p>\n          </div>\n        </div>\n      )}\n      <AcceptedRequirements\n        user={user}\n        token={token}\n        wikiPage={wikiPage}\n        accessRequirement={accessRequirement}\n        accessRequirementStatus={accessRequirementStatus}\n        onHide={onHide}\n        entityId={entityId}\n      />\n    </>\n  )\n}\n","import * as React from 'react'\nimport { useEffect, useState } from 'react'\nimport {\n  WikiPageKey,\n  TermsOfUseAccessRequirement,\n} from '../../utils/synapseTypes'\nimport { SynapseClient } from '../../utils'\nimport AcceptedRequirements from './AcceptedRequirements'\nimport { AccessRequirementProps } from './AccessRequirementProps'\n\nexport default function TermsOfUseAccessRequirementComponent({\n  accessRequirement,\n  token,\n  user,\n  onHide,\n  accessRequirementStatus,\n  entityId,\n}: AccessRequirementProps<TermsOfUseAccessRequirement>) {\n  const [wikiPage, setWikiPage] = useState<WikiPageKey | undefined>(undefined)\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n\n  useEffect(() => {\n    const getTermsOfUseData = async () => {\n      setIsLoading(true)\n\n      try {\n        const wikiPageRequirement = await SynapseClient.getWikiPageKeyForAccessRequirement(\n          token,\n          accessRequirement.id,\n        )\n        setWikiPage(wikiPageRequirement)\n      } catch (err) {\n        console.error('Error on prepare terms of use ', err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    getTermsOfUseData()\n  }, [token, accessRequirement])\n\n  return (\n    <>\n      {isLoading && <span className=\"spinner\" />}\n      <AcceptedRequirements\n        user={user}\n        token={token}\n        wikiPage={wikiPage}\n        accessRequirement={accessRequirement}\n        accessRequirementStatus={accessRequirementStatus}\n        onHide={onHide}\n        entityId={entityId}\n      />\n    </>\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  ManagedACTAccessRequirement,\n  WikiPageKey,\n} from '../../utils/synapseTypes'\nimport { SynapseClient } from '../../utils'\nimport AcceptedRequirements from './AcceptedRequirements'\nimport { AccessRequirementProps } from './AccessRequirementProps'\n\nexport default function ManagedACTAccessRequirementComponent({\n  accessRequirement,\n  token,\n  user,\n  onHide,\n  accessRequirementStatus,\n  entityId,\n}: AccessRequirementProps<ManagedACTAccessRequirement>) {\n  const [wikiPage, setWikiPage] = useState<WikiPageKey>()\n\n  useEffect(() => {\n    const getManagedACTAccessData = async () => {\n      try {\n        const wikipageRequirement = await SynapseClient.getWikiPageKeyForAccessRequirement(\n          token,\n          accessRequirement.id,\n        )\n        setWikiPage(wikipageRequirement)\n      } catch (err) {\n        console.error('Error on get ManagedACTAccessRequirement', err)\n      }\n    }\n\n    getManagedACTAccessData()\n  }, [token, accessRequirement])\n\n  return (\n    <AcceptedRequirements\n      accessRequirement={accessRequirement}\n      accessRequirementStatus={accessRequirementStatus}\n      entityId={entityId}\n      token={token}\n      user={user}\n      wikiPage={wikiPage}\n      onHide={onHide}\n    />\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport { ACTAccessRequirement, WikiPageKey } from '../../utils/synapseTypes'\nimport { SynapseClient } from '../../utils'\nimport AcceptedRequirements from './AcceptedRequirements'\nimport { AccessRequirementProps } from './AccessRequirementProps'\n\nexport default function ACTAccessRequirementComponent({\n  accessRequirement,\n  token,\n  user,\n  onHide,\n  accessRequirementStatus,\n  entityId,\n}: AccessRequirementProps<ACTAccessRequirement>) {\n  const [wikiPage, setWikiPage] = useState<WikiPageKey>()\n\n  useEffect(() => {\n    const getACTAccessData = async () => {\n      try {\n        const wikipageRequirement = await SynapseClient.getWikiPageKeyForAccessRequirement(\n          token,\n          accessRequirement.id,\n        )\n        setWikiPage(wikipageRequirement)\n      } catch (err) {\n        console.error('Error on get ACTAccessRequirement', err)\n      }\n    }\n\n    getACTAccessData()\n  }, [token, accessRequirement])\n\n  return (\n    <AcceptedRequirements\n      accessRequirement={accessRequirement}\n      accessRequirementStatus={accessRequirementStatus}\n      token={token}\n      user={user}\n      wikiPage={wikiPage}\n      onHide={onHide}\n      entityId={entityId}\n    />\n  )\n}\n","import { useState } from 'react'\nimport { EntityHeader, Reference, ReferenceList } from '../synapseTypes'\nimport { getEntityHeader } from '../SynapseClient'\nimport { getUserProfileWithProfilePicAttached } from '../functions/getUserData'\nimport { UserProfile } from '../synapseTypes'\nimport { SynapseConstants } from '..'\nimport { without, chunk, uniq } from 'lodash-es'\nimport useDeepCompareEffect from 'use-deep-compare-effect'\n\nexport type HookType = 'ENTITY_HEADER' | 'USER_PROFILE'\nexport type UseGetInfoFromIdsProps = {\n  ids: string[]\n  token: string | undefined\n  type: HookType\n}\n\ntype LookupRequestType = string | Reference\n\nconst UserProfileTemplate: UserProfile = {\n  ownerId: '', // A foreign key to the ID of the 'principal' object for the user\n  firstName: 'Unknown', // This person's given name (forename)\n  lastName: 'Unknown', // This person's family name (surname)\n  userName: 'Unknown', // A name chosen by the user that uniquely identifies them\n}\n\nconst entityHeaderTemplate: EntityHeader = {\n  name: 'Unknown', //\tThe name of the entity\n  id: 'unknown', //\tThe id of the entity\n  type: 'unknown', //\tThe type of the entity\n  versionNumber: 0, //\tThe version number of the entity\n  versionLabel: 'placeholder', //\tThe user defined version label of the entity\n  benefactorId: 0, //\tThe ID of the entity that this Entity's ACL is inherited from.\n  createdOn: 'null', //\tThe date this entity was created.\n  modifiedOn: 'null', //\tThe date this entity was last modified.\n  createdBy: 'null', //\tThe ID of the user that created this entity.\n  modifiedBy: 'null', //\tThe ID of the user that last modified this entity.\n}\n\nconst getEntityHeaderItems = async (\n  lookupList: ReferenceList,\n  token: string | undefined,\n): Promise<EntityHeader[]> => {\n  const newData = await getEntityHeader(lookupList, token)\n  const notFound = lookupList.filter(\n    item => newData.results.map(item => item.id).indexOf(item.targetId) === -1,\n  )\n  const notFoundPlaceholders = notFound.map(item => ({\n    ...entityHeaderTemplate,\n    id: item.targetId,\n    name: `${item.targetId}`,\n  }))\n\n  return [...newData.results, ...notFoundPlaceholders]\n}\n\nconst getUserProfileItems = async (\n  lookupList: string[],\n  token: string | undefined,\n): Promise<UserProfile[]> => {\n  const newData = await getUserProfileWithProfilePicAttached(lookupList, token)\n  const notFound = lookupList.filter(\n    item => newData.list.map(item => item.ownerId).indexOf(item) === -1,\n  )\n  const notFoundPlaceholders = notFound.map(item => ({\n    ...UserProfileTemplate,\n    ownerId: item,\n    name: `Unknown User (${item})`,\n  }))\n\n  return [...newData.list, ...notFoundPlaceholders]\n}\n\n// React hook to get user profiles or entities\n//******************************************************************************************* */\nexport default function useGetInfoFromIds<T extends EntityHeader | UserProfile>(\n  props: UseGetInfoFromIdsProps,\n) {\n  const { token, ids, type } = props\n  const [data, setData] = useState<Array<T>>([])\n\n  const idProp = (type: HookType) =>\n    type === 'USER_PROFILE' ? 'ownerId' : 'id'\n\n  const storageKey = (type: HookType) =>\n    type === 'USER_PROFILE'\n      ? SynapseConstants.USER_PROFILE_STORAGE_KEY\n      : SynapseConstants.ENTITY_HEADER_STORAGE_KEY\n\n  // look at current list of data, see if incoming ids has new data,\n  // if so grab those ids\n  const curList = data.map(el => el[idProp(type)])\n  const incomingList = ids.filter(el => el !== SynapseConstants.VALUE_NOT_SET)\n  const newValues = uniq(without(incomingList, ...curList))\n\n  const saveToSessionStorage = (data: T[], type: HookType) => {\n    if (!data.length) {\n      return\n    }\n    //get what's there\n    const dataInStorage = sessionStorage.getItem(storageKey(type))\n    try {\n      const dataInStorageAsObjectArr: T[] = dataInStorage\n        ? JSON.parse(dataInStorage)\n        : []\n      //get an array of ids for items already in storage\n      const ids = dataInStorageAsObjectArr.map(item => item[idProp(type)])\n      //push all the new data if ids are new\n      for (const dataObject of data) {\n        if (!ids.includes(dataObject[idProp(type)])) {\n          dataInStorageAsObjectArr.push(dataObject)\n        }\n      }\n      sessionStorage.setItem(\n        storageKey(type),\n        JSON.stringify(dataInStorageAsObjectArr),\n      )\n    } catch (e) {\n      sessionStorage.setItem(storageKey(type), JSON.stringify(data))\n    }\n  }\n\n  // Alina TODO: check if the items are already in Local Storage before making server call.\n\n  // Michael TODO: There's a bug where the data held in useGetInfoFromIds will be stale if the user token changes,\n  // this can be solved by using the useCompare hook on the token to track when it changes\n  useDeepCompareEffect(() => {\n    const getData = async () => {\n      if (newValues.length > 0) {\n        try {\n          const newIds = Array.from<string>(newValues)\n          const newReferences: LookupRequestType[] =\n            type === 'USER_PROFILE'\n              ? newIds\n              : newIds.map(el => ({ targetId: el }))\n          const newReferencesChunks = chunk(newReferences, 45)\n          const totalData: T[] = []\n          for (const newReferences of newReferencesChunks) {\n            const newData =\n              type === 'USER_PROFILE'\n                ? await getUserProfileItems(newReferences as string[], token)\n                : await getEntityHeaderItems(\n                    newReferences as ReferenceList,\n                    token,\n                  )\n            totalData.push(...(newData as T[]))\n          }\n          setData(oldData => oldData.concat(...(totalData as T[])))\n        } catch (error) {\n          console.error('Error on data retrieval', error)\n        }\n      }\n      saveToSessionStorage(data, type)\n    }\n    getData()\n  }, [token, type, newValues])\n  return data\n}\n","import React, { useState, useEffect } from 'react'\nimport { AccessRequirement } from '../../utils/synapseTypes/AccessRequirement/AccessRequirement'\nimport { getAllAccessRequirements } from '../../utils/SynapseClient'\nimport { SynapseConstants, SynapseClient } from '../../utils/'\nimport useCompare from '../../utils/hooks/useCompare'\nimport * as ReactBootstrap from 'react-bootstrap'\nimport SelfSignAccessRequirementComponent from './SelfSignAccessRequirement'\nimport TermsOfUseAccessRequirementComponent from './TermsOfUseAccessRequirement'\nimport ManagedACTAccessRequirementComponent from './ManagedACTAccessRequirement'\nimport ACTAccessRequirementComponent from './ACTAccessRequirement'\nimport {\n  UserProfile,\n  EntityHeader,\n  ACTAccessRequirement,\n  ManagedACTAccessRequirement,\n  TermsOfUseAccessRequirement,\n  SelfSignAccessRequirement,\n  AccessRequirementStatus,\n} from '../../utils/synapseTypes'\nimport useGetInfoFromIds, {\n  UseGetInfoFromIdsProps,\n} from '../../utils/hooks/useGetInfoFromIds'\nimport AccessApprovalCheckMark from './AccessApprovalCheckMark'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFile } from '@fortawesome/free-solid-svg-icons'\nimport { sortBy } from 'lodash-es'\n\nlibrary.add(faFile)\n\ntype AccessRequirementAndStatus = {\n  accessRequirement: AccessRequirement\n  accessRequirementStatus: AccessRequirementStatus\n}\n\nexport type AccessRequirementListProps = {\n  entityId: string\n  token?: string\n  accessRequirementFromProps?: Array<AccessRequirement>\n  onHide?: Function\n  renderAsModal?: boolean\n}\n\nexport enum SUPPORTED_ACCESS_REQUIREMENTS {\n  SelfSignAccessRequirement = 'org.sagebionetworks.repo.model.SelfSignAccessRequirement',\n  TermsOfUseAccessRequirement = 'org.sagebionetworks.repo.model.TermsOfUseAccessRequirement',\n  ManagedACTAccessRequirement = 'org.sagebionetworks.repo.model.ManagedACTAccessRequirement',\n  ACTAccessRequirement = 'org.sagebionetworks.repo.model.ACTAccessRequirement',\n}\n\nexport const checkHasUnsportedRequirement = (\n  accessRequirements: Array<AccessRequirement>,\n): boolean => {\n  return accessRequirements.filter(isARUnsupported).length > 0\n}\n\nconst isARUnsupported = (accessRequirement: AccessRequirement) => {\n  switch (accessRequirement.concreteType) {\n    case SUPPORTED_ACCESS_REQUIREMENTS.ACTAccessRequirement:\n    case SUPPORTED_ACCESS_REQUIREMENTS.ManagedACTAccessRequirement:\n    case SUPPORTED_ACCESS_REQUIREMENTS.TermsOfUseAccessRequirement:\n    case SUPPORTED_ACCESS_REQUIREMENTS.SelfSignAccessRequirement:\n      return false\n    default:\n      return true\n  }\n}\n\nexport default function AccessRequirementList({\n  entityId,\n  token,\n  onHide,\n  accessRequirementFromProps,\n  renderAsModal,\n}: AccessRequirementListProps) {\n  const [accessRequirements, setAccessRequirements] = useState<\n    Array<AccessRequirementAndStatus> | undefined\n  >(undefined)\n\n  const [user, setUser] = useState<UserProfile>()\n\n  const entityHeaderProps: UseGetInfoFromIdsProps = {\n    ids: [entityId],\n    token: token,\n    type: 'ENTITY_HEADER',\n  }\n\n  const hasTokenChanged = useCompare(token)\n  const shouldUpdateData = hasTokenChanged || !accessRequirements\n\n  const entityInformation = useGetInfoFromIds<EntityHeader>(entityHeaderProps)\n\n  useEffect(() => {\n    const sortAccessRequirementByCompletion = async (\n      requirements: Array<AccessRequirement>,\n    ): Promise<Array<AccessRequirementAndStatus>> => {\n      const statuses = requirements.map(req => {\n        return SynapseClient.getAccessRequirementStatus(token, req.id)\n      })\n      const accessRequirementStatuses = await Promise.all(statuses)\n\n      const requirementsAndStatuses = requirements.map(req => {\n        return {\n          accessRequirement: req,\n          accessRequirementStatus: accessRequirementStatuses.find(\n            el => Number(el.accessRequirementId) === req.id,\n          )!,\n        }\n      })\n\n      const sortedRequirementsAndStatuses = sortBy(\n        requirementsAndStatuses,\n        reqAndStatus => {\n          // if its true then it should come first, which means that it should be higher in the list\n          // which is sorted ascendingly\n          return -1 * Number(reqAndStatus.accessRequirementStatus.isApproved)\n        },\n      )\n\n      return sortedRequirementsAndStatuses\n    }\n\n    const getAccessRequirements = async () => {\n      try {\n        if (!shouldUpdateData) {\n          return\n        }\n        if (!accessRequirementFromProps) {\n          const requirements = await getAllAccessRequirements(token, entityId)\n          const sortedAccessRequirements = await sortAccessRequirementByCompletion(\n            requirements,\n          )\n          setAccessRequirements(sortedAccessRequirements)\n        } else {\n          const sortedAccessRequirements = await sortAccessRequirementByCompletion(\n            accessRequirementFromProps!,\n          )\n          setAccessRequirements(sortedAccessRequirements)\n        }\n\n        const userProfile = await SynapseClient.getUserProfile(token)\n        setUser(userProfile)\n\n        // we use a functional update below https://reactjs.org/docs/hooks-reference.html#functional-updates\n        // because we want react hooks to update without a dependency on accessRequirements\n      } catch (err) {\n        console.error('Error on get access requirements: ', err)\n      }\n    }\n\n    getAccessRequirements()\n  }, [token, entityId, accessRequirementFromProps, shouldUpdateData])\n\n  // Using Boolean(value) converts undefined,null, 0,'',false -> false\n  // one alternative to using Boolean(value) is the double bang operator !!value,\n  // but doesn't ready well\n  const isSignedIn: boolean = Boolean(token)\n\n  /**\n   * Returns rendering for the access requirement.\n   *\n   * Only supports SelfSignAccessRequirement and TermsOfUseAccessRequirement\n   *\n   * @param {AccessRequirement} accessRequirement accessRequirement being rendered\n   */\n  const renderAccessRequirement = (\n    accessRequirement: AccessRequirement,\n    accessRequirementStatus: AccessRequirementStatus,\n  ) => {\n    switch (accessRequirement.concreteType) {\n      case SUPPORTED_ACCESS_REQUIREMENTS.SelfSignAccessRequirement:\n        return (\n          <SelfSignAccessRequirementComponent\n            accessRequirement={accessRequirement as SelfSignAccessRequirement}\n            accessRequirementStatus={accessRequirementStatus}\n            token={token}\n            user={user}\n            onHide={onHide}\n            entityId={entityId}\n          />\n        )\n      case SUPPORTED_ACCESS_REQUIREMENTS.TermsOfUseAccessRequirement:\n        return (\n          <TermsOfUseAccessRequirementComponent\n            accessRequirement={accessRequirement as TermsOfUseAccessRequirement}\n            accessRequirementStatus={accessRequirementStatus}\n            token={token}\n            user={user}\n            onHide={onHide}\n            entityId={entityId}\n          />\n        )\n      case SUPPORTED_ACCESS_REQUIREMENTS.ManagedACTAccessRequirement:\n        return (\n          <ManagedACTAccessRequirementComponent\n            accessRequirement={accessRequirement as ManagedACTAccessRequirement}\n            accessRequirementStatus={accessRequirementStatus}\n            token={token}\n            user={user}\n            onHide={onHide}\n            entityId={entityId}\n          />\n        )\n      case SUPPORTED_ACCESS_REQUIREMENTS.ACTAccessRequirement:\n        return (\n          <ACTAccessRequirementComponent\n            accessRequirement={accessRequirement as ACTAccessRequirement}\n            accessRequirementStatus={accessRequirementStatus}\n            token={token}\n            user={user}\n            onHide={onHide}\n            entityId={entityId}\n          />\n        )\n      // case not supported yet\n      default:\n        return undefined\n    }\n  }\n  const content = (\n    <>\n      <ReactBootstrap.Modal.Header closeButton={true}>\n        <ReactBootstrap.Modal.Title className=\"AccessRequirementList__title\">\n          Data Access Request\n        </ReactBootstrap.Modal.Title>\n      </ReactBootstrap.Modal.Header>\n      <ReactBootstrap.Modal.Body>\n        <div>\n          <h4 className=\"AccessRequirementList__instruction AccessRequirementList__access\">\n            Access For:\n          </h4>\n          <a\n            className=\"AccessRequirementList__register-text-link\"\n            href={`https://www.synapse.org/#!Synapse:${entityId}`}\n          >\n            <FontAwesomeIcon\n              size=\"lg\"\n              icon=\"file\"\n              className=\"AccessRequirementList__file\"\n            />\n            &nbsp;{entityInformation[0]?.name}\n          </a>\n          <h4 className=\"AccessRequirementList__instruction\">\n            What do I need to do?\n          </h4>\n          <div className=\"requirement-container\">\n            <AccessApprovalCheckMark isCompleted={isSignedIn} />\n            <div>\n              {!isSignedIn && (\n                <>\n                  <p className=\"AccessRequirementList__signin\">\n                    <button\n                      className={`${SynapseConstants.SRC_SIGN_IN_CLASS} SRC-primary-text-color SRC-boldText `}\n                    >\n                      Sign in\n                    </button>\n                    with a Sage Platform (Synapse) user account.\n                  </p>\n                  <p>\n                    If you do not have a Sage Account, you can\n                    <a\n                      className=\"register-text-link bold-text\"\n                      href=\"https://www.synapse.org/#!RegisterAccount:0\"\n                    >\n                      &nbsp;Register for free.\n                    </a>\n                  </p>\n                </>\n              )}\n              {isSignedIn && (\n                <p>\n                  You have signed with Sage Platform (Synapse) user account as{' '}\n                  <b className=\"SRC-primary-text-color\">\n                    {user?.userName}@synapse.org\n                  </b>\n                </p>\n              )}\n            </div>\n          </div>\n          {accessRequirements?.map(\n            ({ accessRequirement, accessRequirementStatus }) => {\n              return (\n                <React.Fragment key={accessRequirement.id}>\n                  {renderAccessRequirement(\n                    accessRequirement,\n                    accessRequirementStatus,\n                  )}\n                </React.Fragment>\n              )\n            },\n          )}\n        </div>\n      </ReactBootstrap.Modal.Body>\n    </>\n  )\n\n  if (renderAsModal) {\n    return (\n      <ReactBootstrap.Modal\n        className=\"AccessRequirementList\"\n        onHide={() => onHide?.()}\n        show={true}\n        animation={false}\n        centered={true}\n        scrollable={true}\n        size=\"lg\"\n      >\n        {content}\n      </ReactBootstrap.Modal>\n    )\n  }\n  return <div className=\"AccessRequirementList\">{content}</div>\n}\n","import { IconProp, library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faCircle,\n  faDatabase,\n  faLink,\n  faUnlockAlt,\n  faLock,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as React from 'react'\nimport ReactTooltip from 'react-tooltip'\nimport { SynapseClient } from '../utils'\nimport {\n  BackendDestinationEnum,\n  getEndpoint,\n} from '../utils/functions/getEndpoint'\nimport {\n  FileHandle,\n  RestrictableObjectType,\n  RestrictionInformationRequest,\n  RestrictionInformationResponse,\n  RestrictionLevel,\n  FileEntity,\n  AccessRequirement,\n  implementsExternalFileHandleInterface,\n} from '../utils/synapseTypes/'\nimport { TOOLTIP_DELAY_SHOW } from './table/SynapseTableConstants'\nimport AccessRequirementList, {\n  checkHasUnsportedRequirement,\n  AccessRequirementListProps,\n} from './access_requirement_list/AccessRequirementList'\nimport { SRC_SIGN_IN_CLASS } from '../utils/SynapseConstants'\n\nlibrary.add(faUnlockAlt)\nlibrary.add(faDatabase)\nlibrary.add(faCircle)\n\nexport type HasAccessProps = {\n  onHide?: Function\n  fileHandle?: FileHandle\n  entityId: string\n  isInDownloadList?: boolean // set to show errors in UI about package creation\n  entityVersionNumber?: string\n  token?: string\n  forceSamePage?: boolean\n  set_arPropsFromHasAccess?: (props: AccessRequirementListProps) => void\n}\n\ntype HasAccessState = {\n  restrictionInformation?: RestrictionInformationResponse\n  fileHandleDownloadType?: FileHandleDownloadTypeEnum\n  displayAccessRequirement: boolean\n  accessRequirements?: Array<AccessRequirement>\n  isGettingRestrictionInformation: boolean\n  isGettingEntityInformation: boolean\n  errorOnGetRestrictionInformation: boolean\n}\n\nexport enum GoogleCloudFileHandleEnum {\n  GoogleCloudFileHandle = 'org.sagebionetworks.repo.model.file.GoogleCloudFileHandle',\n}\n\nexport const GIGABYTE_SIZE = 2 ** 30\n\nexport enum FileHandleDownloadTypeEnum {\n  ExternalCloudFile = 'ExternalCloudFile',\n  ExternalFileLink = 'ExternalFileLink',\n  TooLarge = 'TooLarge',\n  Accessible = 'Accessible',\n  AccessBlockedByRestriction = 'AccessBlockedByRestriction',\n  AccessBlockedByACL = 'AccessBlockedByACL',\n  AccessBlockedToAnonymous = 'AccessBlockedToAnonymous',\n  NoFileHandle = 'NoFileHandle',\n}\n\nexport const getDownloadTypeForFileHandle = (\n  fileHandle: FileHandle,\n  isInDownloadList?: boolean,\n) => {\n  if (fileHandle && !isInDownloadList) {\n    return FileHandleDownloadTypeEnum.Accessible\n  }\n  const { concreteType, contentSize } = fileHandle\n  // check if it's too large\n  if (contentSize >= GIGABYTE_SIZE) {\n    return FileHandleDownloadTypeEnum.TooLarge\n  }\n  // check if it's a google cloud file handle\n  if (concreteType === GoogleCloudFileHandleEnum.GoogleCloudFileHandle) {\n    return FileHandleDownloadTypeEnum.ExternalCloudFile\n  }\n  // check if it's an external file handle\n  if (implementsExternalFileHandleInterface(fileHandle)) {\n    return FileHandleDownloadTypeEnum.ExternalFileLink\n  }\n  // otherwise its available\n  return FileHandleDownloadTypeEnum.Accessible\n}\n\n/**\n * HasAccess shows if the user has access to the file or not.\n *\n * The component's behavior changes whether it's passed in a FileHandle or not.\n * If passed a file handle then it will give more detailed information about the download.\n *\n * @export\n * @class HasAccess\n * @extends {React.Component<HasAccessProps, HasAccessState>}\n */\nexport default class HasAccess extends React.Component<\n  HasAccessProps,\n  HasAccessState\n> {\n  public static tooltipText = {\n    [FileHandleDownloadTypeEnum.AccessBlockedToAnonymous]:\n      'You must sign in to access this file.',\n    // Note AccessBlockedByRestriction is never explicitly set, its value is calculated\n    [FileHandleDownloadTypeEnum.AccessBlockedByRestriction]:\n      'You must request access to this restricted file.',\n    [FileHandleDownloadTypeEnum.AccessBlockedByACL]:\n      'You do not have download access for this item.',\n    [FileHandleDownloadTypeEnum.TooLarge]:\n      'This file is too large to download as a package and must be downloaded manually.',\n    [FileHandleDownloadTypeEnum.ExternalFileLink]:\n      'This is an external link, which must be downloaded manually.',\n    [FileHandleDownloadTypeEnum.ExternalCloudFile]:\n      'This file must be downloaded manually (e.g. a file in Google Cloud).',\n  }\n\n  constructor(props: HasAccessProps) {\n    super(props)\n    this.getRestrictionInformation = this.getRestrictionInformation.bind(this)\n    this.getFileEntityFileHandle = this.getFileEntityFileHandle.bind(this)\n    this.updateStateFileHandleAccessBlocked = this.updateStateFileHandleAccessBlocked.bind(\n      this,\n    )\n\n    this.state = {\n      fileHandleDownloadType: undefined,\n      displayAccessRequirement: false,\n      accessRequirements: [],\n      isGettingEntityInformation: false,\n      isGettingRestrictionInformation: false,\n      errorOnGetRestrictionInformation: false,\n    }\n  }\n\n  componentDidMount() {\n    this.refresh()\n  }\n\n  componentDidUpdate(prevProps: HasAccessProps) {\n    const forceRefresh = prevProps.token !== this.props.token\n    // if there token has updated then force refresh the component state\n    this.refresh(forceRefresh)\n  }\n\n  refresh = (forceRefresh?: boolean) => {\n    if (\n      this.state.isGettingEntityInformation ||\n      this.state.isGettingRestrictionInformation ||\n      this.state.errorOnGetRestrictionInformation\n    ) {\n      return\n    }\n    this.getRestrictionInformation(forceRefresh)\n    this.getFileEntityFileHandle(forceRefresh)\n  }\n\n  updateStateFileHandleAccessBlocked = () => {\n    const { token } = this.props\n    const fileHandleDownloadType = token\n      ? FileHandleDownloadTypeEnum.AccessBlockedByACL\n      : FileHandleDownloadTypeEnum.AccessBlockedToAnonymous\n    this.setState({\n      fileHandleDownloadType,\n    })\n  }\n\n  getFileEntityFileHandle = (forceRefresh?: boolean) => {\n    const {\n      entityId,\n      entityVersionNumber,\n      token,\n      isInDownloadList,\n      fileHandle,\n    } = this.props\n\n    if (this.state.fileHandleDownloadType && !forceRefresh) {\n      // already know the downloadType\n      return\n    }\n    if (fileHandle) {\n      const fileHandleDownloadType = getDownloadTypeForFileHandle(\n        fileHandle,\n        isInDownloadList,\n      )\n      this.setState({\n        fileHandleDownloadType,\n      })\n      return\n    }\n    this.setState({\n      isGettingEntityInformation: true,\n    })\n    // fileHandle was not passed to us, ask for it.\n    // is this a FileEntity?\n    return SynapseClient.getEntity(token, entityId, entityVersionNumber)\n      .then(entity => {\n        if (entity.hasOwnProperty('dataFileHandleId')) {\n          // looks like a FileEntity, get the FileHandle\n          return SynapseClient.getFileEntityFileHandle(\n            entity as FileEntity,\n            token,\n          ).then((fileHandle: FileHandle) => {\n            const fileHandleDownloadType = getDownloadTypeForFileHandle(\n              fileHandle,\n              isInDownloadList,\n            )\n            this.setState({\n              fileHandleDownloadType,\n              isGettingEntityInformation: false,\n            })\n          })\n        } else {\n          // entity looks like something else.\n          this.setState({\n            fileHandleDownloadType: FileHandleDownloadTypeEnum.NoFileHandle,\n            isGettingEntityInformation: false,\n          })\n          return Promise.resolve()\n        }\n      })\n      .catch(err => {\n        // this could be a self-imposed error or one from the backend, only log the latter\n        if (err.reason) {\n          console.error('Error on get Entity = ', err)\n        }\n        // could not get entity\n        this.updateStateFileHandleAccessBlocked()\n        this.setState({\n          isGettingEntityInformation: false,\n        })\n      })\n  }\n\n  getRestrictionInformation = (forceRefresh?: boolean) => {\n    const { entityId, token } = this.props\n    if (this.state.restrictionInformation && !forceRefresh) {\n      return\n    }\n    this.setState({\n      isGettingRestrictionInformation: true,\n    })\n    const request: RestrictionInformationRequest = {\n      restrictableObjectType: RestrictableObjectType.ENTITY,\n      objectId: entityId,\n    }\n    return SynapseClient.getRestrictionInformation(request, token)\n      .then(restrictionInformation => {\n        this.setState({\n          restrictionInformation,\n        })\n      })\n      .catch(err => {\n        console.error(\n          'Error on getRestrictionInformation. This should not happen: ',\n          err,\n        )\n        this.setState({\n          errorOnGetRestrictionInformation: true,\n        })\n      })\n      .finally(() => {\n        this.setState({\n          isGettingRestrictionInformation: false,\n        })\n      })\n  }\n\n  renderIconHelper = (iconProp: IconProp, classColor: string) => {\n    return (\n      <span className=\"fa-layers fa-fw\">\n        <FontAwesomeIcon\n          icon={faCircle}\n          className={classColor}\n          size=\"1x\"\n          style={{ fontSize: '24px' }}\n        />\n        <FontAwesomeIcon\n          icon={iconProp}\n          className=\"SRC-whiteText\"\n          size=\"1x\"\n          transform={{ x: 5 }}\n          style={{ fontSize: '13px' }}\n        />\n      </span>\n    )\n  }\n\n  renderIcon = (\n    downloadType: FileHandleDownloadTypeEnum | string,\n    restrictionInformation?: RestrictionInformationResponse,\n  ) => {\n    // if there are any access restrictions\n    if (restrictionInformation?.hasUnmetAccessRequirement) {\n      return this.renderIconHelper(faLock, 'SRC-warning-color')\n    }\n    switch (downloadType) {\n      // fileHandle available\n      case FileHandleDownloadTypeEnum.ExternalFileLink:\n      case FileHandleDownloadTypeEnum.ExternalCloudFile:\n        return this.renderIconHelper(faLink, 'SRC-warning-color')\n      case FileHandleDownloadTypeEnum.TooLarge:\n        return this.renderIconHelper(faDatabase, 'SRC-danger-color')\n      // was FileEntity, but no fileHandle was available\n      case FileHandleDownloadTypeEnum.AccessBlockedByACL:\n      case FileHandleDownloadTypeEnum.AccessBlockedToAnonymous:\n        return this.renderIconHelper(faLock, 'SRC-warning-color')\n      // was a FileEntity, and fileHandle was available\n      case FileHandleDownloadTypeEnum.Accessible:\n      // or was not a FileEntity, but no unmet access restrictions\n      case FileHandleDownloadTypeEnum.NoFileHandle:\n        return this.renderIconHelper(faUnlockAlt, 'SRC-success-color')\n      default:\n        // nothing is rendered until access requirement is loaded\n        return <></>\n    }\n  }\n\n  handleGetAccess = () => {\n    const { token, entityId, set_arPropsFromHasAccess } = this.props\n    SynapseClient.getAllAccessRequirements(token, entityId).then(\n      requirements => {\n        if (checkHasUnsportedRequirement(requirements)) {\n          window.open(\n            `${getEndpoint(\n              BackendDestinationEnum.PORTAL_ENDPOINT,\n            )}#!AccessRequirements:ID=${entityId}&TYPE=ENTITY`,\n            '_blank',\n          )\n        } else {\n          if (set_arPropsFromHasAccess) {\n            set_arPropsFromHasAccess({\n              accessRequirementFromProps: requirements,\n              entityId,\n            })\n          } else {\n            this.setState({\n              accessRequirements: requirements,\n              displayAccessRequirement: true,\n            })\n          }\n        }\n      },\n    )\n  }\n\n  // Show Access Requirements\n  renderARsLink = () => {\n    const { entityId, token } = this.props\n    const {\n      restrictionInformation,\n      displayAccessRequirement,\n      accessRequirements,\n    } = this.state\n    if (!restrictionInformation) {\n      // loading\n      return <></>\n    }\n    const hasUnmetAccessRequirement =\n      restrictionInformation?.hasUnmetAccessRequirement\n    const restrictionLevel = restrictionInformation?.restrictionLevel\n    let linkText = ''\n\n    if (hasUnmetAccessRequirement) {\n      linkText = 'Request Access'\n    } else if (RestrictionLevel.OPEN === restrictionLevel) {\n      // they need to sign in\n      return <></>\n    } else {\n      linkText = 'View Terms'\n    }\n    return (\n      <>\n        <button\n          style={{\n            fontSize: '14px',\n            cursor: 'pointer',\n            marginLeft: '10px',\n          }}\n          onClick={this.handleGetAccess}\n          className=\"SRC-primary-text-color\"\n        >\n          {linkText}\n        </button>\n        {displayAccessRequirement && (\n          <AccessRequirementList\n            token={token}\n            entityId={entityId}\n            accessRequirementFromProps={accessRequirements}\n            renderAsModal={true}\n            onHide={() => {\n              this.setState({ displayAccessRequirement: false })\n              this.refresh()\n            }}\n          />\n        )}\n      </>\n    )\n  }\n\n  render() {\n    const { restrictionInformation, fileHandleDownloadType } = this.state\n    if (typeof fileHandleDownloadType === 'undefined') {\n      // note, this can't be \"if (!downloadType)\" since DownloadTypeEnum has a 0 value (which is falsy)\n      // loading\n      return <></>\n    }\n    let tooltipText = HasAccess.tooltipText[fileHandleDownloadType]\n    if (\n      fileHandleDownloadType ===\n        FileHandleDownloadTypeEnum.AccessBlockedByACL &&\n      restrictionInformation?.hasUnmetAccessRequirement\n    ) {\n      // If blocked by ACL check if blocked by Access Restrictions, those can be taken care of\n      // though they will then be blocked by ACL afterwards.\n      tooltipText =\n        HasAccess.tooltipText[\n          FileHandleDownloadTypeEnum.AccessBlockedByRestriction\n        ]\n    }\n    const entityId = this.props.entityId\n    const icon = this.renderIcon(fileHandleDownloadType, restrictionInformation)\n    const viewARsLink: React.ReactElement = this.renderARsLink()\n    const iconContainer =\n      fileHandleDownloadType ===\n      FileHandleDownloadTypeEnum.AccessBlockedToAnonymous ? (\n        <button\n          type=\"button\"\n          className={SRC_SIGN_IN_CLASS}\n          onClick={ev => {\n            if (ev.isTrusted) {\n              /*\n                There is a tricky problem - \n                The portals listens to click events for buttons with the class SRC_SIGN_IN_CLASS set, it listens to this event\n                so that it can display the login modal.\n\n                This button has an svg inside of it which is problematic because more often than not clicking this button will \n                instead click that svg. The event listener in the portals will break as a result.\n\n                Though the svg may get the actual click event, because of event bubbling this button will get its onClick called.\n                Once onClick is called we can manually dispatch an event off of this button. This does pose a problem, we end up in a \n                infinite loop because this button keeps disptaching click events, so we can use the isTrusted to recognize if onClick was\n                triggered programmatically or by user click. Lastly, using { bubbles: true } ensures the event bubbles up to the document level.\n\n              */\n              const clickEvent = new MouseEvent('click', { bubbles: true })\n              ev.currentTarget.dispatchEvent(clickEvent)\n            }\n          }}\n        >\n          {icon}\n        </button>\n      ) : (\n        <span tabIndex={0} data-for={entityId} data-tip={tooltipText}>\n          {icon}\n        </span>\n      )\n\n    return (\n      <span style={{ whiteSpace: 'nowrap' }}>\n        {tooltipText && (\n          <>\n            {iconContainer}\n            <ReactTooltip\n              delayShow={TOOLTIP_DELAY_SHOW}\n              place=\"top\"\n              type=\"dark\"\n              effect=\"solid\"\n              id={entityId}\n              className=\"has-access-tooltip-width\"\n            />\n            {viewARsLink}\n          </>\n        )}\n        {!tooltipText && (\n          <>\n            {icon} {viewARsLink}\n          </>\n        )}\n      </span>\n    )\n  }\n}\n","import * as React from 'react'\nimport { SynapseVersion } from '../../lib/utils/synapseTypes/'\nimport { SynapseClient } from '../../lib/utils/'\nimport Uploader from '../../lib/containers/Uploader'\nimport FileContentDownloadUploadDemo from '../../lib/containers/FileContentDownloadUploadDemo'\nimport StatisticsPlot from 'lib/containers/StatisticsPlot'\nimport { testDownloadSpeed } from '../../lib/utils/functions/testDownloadSpeed'\nimport HasAccess from 'lib/containers/HasAccess'\n\ntype DemoState = {\n  token: string | null\n  ownerId: string\n  isLoading: boolean\n  showMarkdown: boolean\n  version: number\n  userFormDataSynId?: string\n  estimatedDownloadBytesPerSecond?: number\n}\n\ntype DemoProps = {\n  forceSamePage?: boolean\n}\n/**\n * Demo of features that can be used from src/demo/utils/SynapseClient\n * module\n\n */\nclass Demo extends React.Component<DemoProps, DemoState> {\n  entityFormRef: any\n  searchParamsProps: any\n  /**\n   * Maintain internal state of user session\n   */\n  constructor(props: DemoProps) {\n    super(props)\n    this.entityFormRef = React.createRef()\n    this.state = {\n      isLoading: true,\n      ownerId: '',\n      showMarkdown: true,\n      token: '',\n      version: 0,\n    }\n    this.getVersion = this.getVersion.bind(this)\n    this.onRunDownloadSpeedTest = this.onRunDownloadSpeedTest.bind(this)\n    this.searchParamsProps = {}\n    const searchParams = new URLSearchParams(window.location.search)\n    searchParams.forEach((value, key) => {\n      this.searchParamsProps[key] = value\n    })\n  }\n\n  public onSubmitEntityForm() {\n    this.entityFormRef.current.submitForm()\n  }\n\n  public onEntityFormSubmitted(synId: string) {\n    this.setState({ userFormDataSynId: synId })\n  }\n\n  public onRunDownloadSpeedTest() {\n    const { token } = this.state\n    if (token) {\n      testDownloadSpeed(token)\n        .then((estimatedDownloadBytesPerSecond: number) => {\n          this.setState({ estimatedDownloadBytesPerSecond })\n        })\n        .catch((error: any) => {\n          console.error('estimate download speed failed', error)\n        })\n    }\n  }\n\n  /**\n   * Get the current version of Synapse\n   */\n  public getVersion(): void {\n    // IMPORTANT: Your component should have a property (with default) to change the endpoint.  This is necessary for Synapse.org integration.\n    // Pass your endpoint through to the rpc call:\n    // SynapseClient.getVersion('https://repo-staging.prod.sagebase.org')\n    SynapseClient.getVersion()\n      .then((data: SynapseVersion) => this.setState({ version: data.version }))\n      .catch((error: any) => {\n        // Handle HTTPError.  Has status and message.\n        console.error('Get version failed', error)\n      })\n  }\n\n  public componentDidMount() {\n    // Note:  All portals should do this once on the initial app load.\n    // This looks for the session token cookie (HttpOnly, unable to directly access), and initialize the session if it does exists.\n    SynapseClient.detectSSOCode()\n    SynapseClient.getSessionTokenFromCookie()\n      .then(sessionToken => {\n        this.setState({\n          token: sessionToken,\n        })\n      })\n      .catch((error: any) => {\n        console.error(error)\n      })\n    this.getVersion()\n  }\n  public render(): JSX.Element {\n    const { forceSamePage = false } = this.props\n    const { token, estimatedDownloadBytesPerSecond } = this.state\n    return (\n      <div>\n        <p className=\"App-intro text-center\">\n          Synapse production version: {this.state.version}\n        </p>\n        {token && (\n          <div className=\"container\">\n            <button\n              className=\"btn btn-default\"\n              onClick={this.onRunDownloadSpeedTest}\n            >\n              Run Download Speed Test\n            </button>\n            <hr />\n          </div>\n        )}\n        {estimatedDownloadBytesPerSecond && (\n          <div className=\"container\">\n            <h5>\n              Estimated Download Speed:{' '}\n              {(estimatedDownloadBytesPerSecond / 1000000).toFixed(2)} MBps\n            </h5>\n            <hr />\n          </div>\n        )}\n        {token && (\n          <div className=\"container\">\n            <h5>Upload File(s) Demo</h5>\n            <Uploader token={token} parentContainerId=\"syn18987891\" />\n            <hr />\n          </div>\n        )}\n        {token && (\n          <div className=\"container\">\n            <h5>Download File Content Demo (syn12196718)</h5>\n            <FileContentDownloadUploadDemo\n              token={token}\n              targetEntityId=\"syn12196718\"\n            />\n            <hr />\n          </div>\n        )}\n        {\n          <div className=\"container\">\n            <h5>Public Folder - HasAccess widget</h5>\n            <HasAccess\n              token={token ? token : undefined}\n              entityId={'syn7122428'}\n              isInDownloadList={false}\n              forceSamePage={forceSamePage}\n            />\n            <h5>A Controlled Access Folder - HasAccess widget</h5>\n            <HasAccess\n              token={token ? token : undefined}\n              entityId={'syn7383419'}\n              isInDownloadList={false}\n              forceSamePage={forceSamePage}\n            />\n            <h5>Open Data</h5>\n            <HasAccess\n              token={token ? token : undefined}\n              entityId={'syn5481758'}\n              isInDownloadList={false}\n              forceSamePage={forceSamePage}\n            />\n            <h5>Acces Requirements required Data</h5>\n            <HasAccess\n              token={token ? token : undefined}\n              entityId={'syn2426398'}\n              isInDownloadList={false}\n              forceSamePage={forceSamePage}\n            />\n            <h5>\n              Acces Requirements required Data without unsupported requirement\n            </h5>\n            <HasAccess\n              token={token ? token : undefined}\n              entityId={'syn4993293'}\n              isInDownloadList={false}\n              forceSamePage={forceSamePage}\n            />\n\n            <hr />\n          </div>\n        }\n        {token && (\n          <div className=\"container\">\n            <h5>Project Statistics Demo</h5>\n            <StatisticsPlot\n              token={token}\n              request={{\n                concreteType:\n                  'org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsRequest',\n                objectId: 'syn2580853',\n                fileDownloads: true,\n                fileUploads: true,\n              }}\n            />\n            <StatisticsPlot\n              token={token}\n              request={{\n                concreteType:\n                  'org.sagebionetworks.repo.model.statistics.ProjectFilesStatisticsRequest',\n                objectId: 'syn5585645',\n                fileDownloads: true,\n                fileUploads: true,\n              }}\n            />\n            <hr />\n          </div>\n        )}\n\n      </div>\n    )\n  }\n}\nexport default Demo\n","import { QueryBundleRequest } from '../synapseTypes/'\nimport { SynapseClient, SynapseConstants } from '..'\nimport { QueryResultBundle } from '../synapseTypes/'\nimport { cloneDeep } from 'lodash-es'\n\ntype PartialStateObject = {\n  hasMoreData: boolean\n  data: QueryResultBundle\n}\n\n/**\n * Retrieve the index of a column using the column name\n * @param name the column name\n * @param result the QueryResultBundle containing the columns\n * @returns The index of the column, or -1 if the column doesn't exist in the result\n */\nexport const getFieldIndex = (\n  name: string,\n  result: QueryResultBundle | undefined,\n) => {\n  return (\n    result?.selectColumns?.findIndex(el => {\n      return el.name === name\n    }) ?? -1\n  )\n}\n\n/**\n * Grab the next page of data, pulling in 25 more rows.\n *\n * @param {*} queryRequest Query request as specified by\n *                         https://docs.synapse.org/rest/org/sagebionetworks/repo/model/table/Query.html\n */\nexport const getNextPageOfData = async (\n  queryRequest: QueryBundleRequest,\n  data: QueryResultBundle,\n  token?: string,\n) => {\n  return await SynapseClient.getQueryTableResults(queryRequest, token)\n    .then((newData: QueryResultBundle) => {\n      const oldData: QueryResultBundle = cloneDeep(data)!\n      // push on the new data retrieved from the API call\n      const hasMoreData =\n        newData.queryResult.queryResults.rows.length ===\n        SynapseConstants.PAGE_SIZE\n      oldData.queryResult.queryResults.rows.push(\n        ...newData.queryResult.queryResults.rows,\n      )\n      const newState: PartialStateObject = {\n        hasMoreData,\n        data: oldData,\n      }\n      return newState\n    })\n    .catch(err => {\n      console.log('Failed to get data ', err)\n      return {} as PartialStateObject\n    })\n}\n","const sufixes: string[] = [\n  'Bytes',\n  'KB',\n  'MB',\n  'GB',\n  'TB',\n  'PB',\n  'EB',\n  'ZB',\n  'YB',\n]\n\nexport function calculateFriendlyFileSize(bytes: number) {\n  if (!bytes) {\n    return ''\n  }\n  // https://stackoverflow.com/questions/10420352/converting-file-size-in-bytes-to-human-readable-string\n  const i = Math.floor(Math.log(bytes) / Math.log(1024))\n  // tslint:disable-next-line\n  return (\n    (!bytes && '0 Bytes') ||\n    (bytes / Math.pow(1024, i)).toFixed(2) + ' ' + sufixes[i]\n  )\n}\n","import * as React from 'react'\nimport { DATASET } from '../../utils/SynapseConstants'\nimport { calculateFriendlyFileSize } from '../../utils/functions/calculateFriendlyFileSize'\nimport * as Utils from './utils'\nimport { renderValueOrMultiValue } from '../GenericCard'\nimport { SelectColumn, ColumnModel } from '../../utils/synapseTypes'\n\ntype DatasetProps = {\n  data?: any\n  schema?: any\n  secondaryLabelLimit?: number\n  selectColumns?: SelectColumn[]\n  columnModels?: ColumnModel[]\n}\n\nclass Dataset extends React.Component<DatasetProps, {}> {\n  constructor(props: DatasetProps) {\n    super(props)\n    this.handleLinkClick = this.handleLinkClick.bind(this)\n  }\n\n  public handleLinkClick = (link: string) => (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault()\n    window.open(`https://www.synapse.org/#!Synapse:${link}`, '_blank')\n  }\n\n  public render() {\n    const { data, schema, selectColumns, columnModels } = this.props\n    const datasetName = data[schema.datasetName]\n    const summary = data[schema.summary]\n    const tumorType = renderValueOrMultiValue({\n      columnName: 'tumorType',\n      value: data[schema.tumorType],\n      selectColumns,\n      columnModels,\n    }).str\n    const diseaseFocus = renderValueOrMultiValue({\n      columnName: 'diseaseFocus',\n      value: data[schema.diseaseFocus],\n      selectColumns,\n      columnModels,\n    }).str\n    const id = data[schema.id]\n    const fundingAgency = data[schema.fundingAgency]\n    const fileCount = data[schema.fileCount]\n    const fileSize = calculateFriendlyFileSize(data[schema.fileSize])\n    const values = [\n      [\n        'FUNDER',\n        renderValueOrMultiValue({\n          columnName: 'fundingAgency',\n          value: fundingAgency,\n          selectColumns,\n          columnModels,\n        }).str,\n      ],\n      ['SIZE', fileSize],\n      ['FILES', fileCount],\n    ]\n    return (\n      <div className=\"SRC-portalCard SRC-typeDataset  \">\n        <div className=\"SRC-cardThumbnail\">\n          <Utils.Icon type={DATASET} />\n          <div>{fileSize}</div>\n        </div>\n        <div className=\"SRC-cardContent SRC-dataset\">\n          <div className=\"SRC-type\">Dataset </div>\n          <div>\n            <h3>\n              <a\n                target=\"_self\"\n                href={`https://www.synapse.org/#!Synapse:${id}`}\n              >\n                {datasetName}\n              </a>\n            </h3>\n          </div>\n          <div className=\"SRC-description-dataset\">\n            <p className=\"SRC-description-text\">{summary}</p>\n            <div className=\"SRC-cardAction\">\n              <button\n                className=\"SRC-datasetButton\"\n                onClick={this.handleLinkClick(id)}\n                type=\"button\"\n              >\n                Download Dataset\n              </button>\n            </div>\n          </div>\n          <div className=\"SRC-cardAnnotations\">\n            <Utils.ChipContainer chips={[tumorType, diseaseFocus]} />\n          </div>\n        </div>\n        <Utils.CardFooter\n          isHeader={false}\n          secondaryLabelLimit={this.props.secondaryLabelLimit}\n          values={values}\n        />\n      </div>\n    )\n  }\n}\nexport default Dataset\n","import * as React from 'react'\n\ntype FunderProps = {\n  data?: any\n  schema?: any\n}\n\nexport default class Funder extends React.Component<FunderProps, {}> {\n  constructor(props: FunderProps) {\n    super(props)\n    this.handleLinkClick = this.handleLinkClick.bind(this)\n  }\n  public handleLinkClick = (link: string) => (\n    event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    event.preventDefault()\n    window.open(link, '_blank')\n  }\n  public render() {\n    const { data, schema } = this.props\n    const organizationName = data[schema.organizationName]\n    const organizationPath = data[schema.organizationPath]\n    const summary = data[schema.summary]\n    const website = data[schema.website]\n    const logoHref: string = data[schema.logo]\n    // remove leading http(s):// and trailing /\n    let websiteDisplayName = website.replace('https://', '')\n    websiteDisplayName = websiteDisplayName.replace('http://', '')\n    if (websiteDisplayName.charAt(websiteDisplayName.length - 1) === '/') {\n      websiteDisplayName = websiteDisplayName.substring(\n        0,\n        websiteDisplayName.length - 1,\n      )\n    }\n    const isOnOrgPath = window.location.hash.substring(1) === organizationPath\n    const style: any = {}\n    let showOrgLink\n    if (!isOnOrgPath) {\n      showOrgLink = (\n        <div className=\"SRC-marginAuto SRC-cardAction\">\n          <a href={organizationPath}>View Funded Research</a>\n        </div>\n      )\n    } else {\n      style.paddingBottom = '42px'\n    }\n    return (\n      <div className=\"SRC-portalCard SRC-typeFunder \" style={style}>\n        <div className=\"SRC-cardContent\">\n          <div className=\"SRC-type\">Organization</div>\n          {logoHref && (\n            <div className=\"SRC-cardThumbnail\">\n              <img alt=\"funder logo\" className=\"SRC-logo\" src={logoHref} />\n            </div>\n          )}\n          <div>\n            <h3>\n              {isOnOrgPath && organizationName}\n              {!isOnOrgPath && (\n                <a href={organizationPath}>{organizationName}</a>\n              )}\n            </h3>\n          </div>\n          <div className=\"SRC-website\">\n            <a rel=\"noopener noreferrer\" target=\"_blank\" href={website}>\n              {websiteDisplayName}\n            </a>\n          </div>\n          <div className=\"SRC-description\">{summary}</div>\n        </div>\n        {showOrgLink}\n      </div>\n    )\n  }\n}\n","import { FacetSelection } from '../../containers/QueryWrapper'\nimport { QueryBundleRequest } from '../synapseTypes/'\nimport { FacetColumnValuesRequest } from '../synapseTypes/'\nimport { SELECT_SINGLE_FACET } from '../../containers/Facets'\nimport { FacetColumnResultValueCount } from '../synapseTypes/'\n\n/*\n  TODO: This code is deprecated, delete once stackedbarchart.tsx and facets.tsx are no longer used\n*/\n\n/**\n *  Calculates the state of a specific facet value given the current state\n *  of the application.\n *\n * @param\n *     isLoading: boolean | undefined,\n *     lastFacetSelection: FacetSelection | undefined,\n *     curFacetSelection: any,\n *     columnName: string\n * @returns boolean\n */\n\nexport const getIsValueSelected = ({\n  isLoading,\n  lastFacetSelection,\n  curFacetSelection,\n  columnName,\n}: {\n  isLoading: boolean | undefined\n  lastFacetSelection: FacetSelection | undefined\n  curFacetSelection: FacetColumnResultValueCount\n  columnName: string\n}) => {\n  if (isLoading && columnName === lastFacetSelection!.columnName) {\n    // indicates there is a selection made with this current facet value\n    if (lastFacetSelection!.facetValue === curFacetSelection.value) {\n      return !curFacetSelection.isSelected\n    }\n    if (lastFacetSelection!.selector === SELECT_SINGLE_FACET) {\n      return false\n    }\n  }\n  /*\n    else, the information has come back from the server and we can\n    rely on that\n  */\n  return curFacetSelection.isSelected\n}\n\nexport type SyntheticHTMLInputElement = {\n  value: string\n  checked: boolean\n}\n\n/**\n * Function reads over a set of checkboxes and then returns a corresponding\n * queryRequest given the state of the prior queryRequest\n *   htmlCheckboxes: any,\n *   selector : string,\n *   queryRequest: QueryBundleRequest,\n *   facet: string,\n *   value?: string\n * }\n * @returns\n */\nexport const readFacetValues = ({\n  htmlCheckboxes,\n  selector,\n  queryRequest,\n  facet,\n  value,\n}: {\n  htmlCheckboxes: SyntheticHTMLInputElement[]\n  selector: string\n  queryRequest: QueryBundleRequest\n  facet: string\n  value?: string\n}) => {\n  const facetValues: string[] = []\n\n  if (!selector) {\n    // no selector was clicked -- read over facet values as normal and see what was clicked\n    for (let i = 0; i < htmlCheckboxes.length; i += 1) {\n      const checkbox = htmlCheckboxes[i]\n      const isSelected = checkbox.checked\n      if (isSelected) {\n        facetValues.push(checkbox.value)\n      }\n    }\n  } else if (selector === SELECT_SINGLE_FACET) {\n    // SELECT_SINGLE_FACET acts as a radio selection, thats the only selection\n    facetValues.push(value!)\n  } // else selector === SELECT_ALL, we don't add any values, empty is treated as SELECT_ALL\n  const newQueryRequest: QueryBundleRequest = queryRequest\n  const { selectedFacets = [] } = newQueryRequest.query\n\n  const specificFacet = selectedFacets!.find(el => el.columnName === facet)!\n  if (!specificFacet) {\n    const facetColumnValuesRequest: FacetColumnValuesRequest = {\n      facetValues,\n      concreteType:\n        'org.sagebionetworks.repo.model.table.FacetColumnValuesRequest',\n      columnName: facet,\n    }\n    selectedFacets.push(facetColumnValuesRequest)\n    // align the reference to selectedFacets\n    newQueryRequest.query.selectedFacets = selectedFacets\n  } else {\n    specificFacet.facetValues = facetValues\n  }\n\n  return { newQueryRequest }\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faPlus } from '@fortawesome/free-solid-svg-icons'\nimport * as React from 'react'\nimport {\n  getIsValueSelected,\n  readFacetValues,\n} from '../utils/functions/facetUtils'\nimport {\n  FacetColumnResultValues,\n  QueryBundleRequest,\n} from '../utils/synapseTypes/'\nimport { getColorPallette } from './ColorGradient'\nimport { FacetSelection, QueryWrapperChildProps } from './QueryWrapper'\nimport { SELECT_ALL } from './table/SynapseTableConstants'\nimport TotalQueryResults from './TotalQueryResults'\nlibrary.add(faPlus)\n\nexport const SELECT_SINGLE_FACET = 'SELECT_SINGLE_FACET'\n\ntype CheckboxGroupProps = {\n  isAllFilterSelected: boolean\n  rgbIndex: number\n  facetColumnResult: FacetColumnResultValues\n  applyChanges: (\n    ref: React.RefObject<HTMLSpanElement>,\n    facetValue: string,\n    selector: string,\n    index: number,\n  ) => (_event: React.MouseEvent<HTMLSpanElement>) => void\n  showAllFacets: boolean\n  lastFacetSelection: FacetSelection\n  isLoading: boolean\n}\n\nexport const FACET_SELECTED_CLASS = 'FACET_SELECTED_CLASS'\nexport const FACET_NOT_SELECTED_CLASS = 'FACET_NOT_SELECTED_CLASS'\n\n/**\n * Checkbox group represents one column's set of checkbox filters\n *\n * @class CheckboxGroup\n * @extends {React.Component}\n */\nconst CheckboxGroup: React.FunctionComponent<CheckboxGroupProps> = (\n  props: CheckboxGroupProps,\n) => {\n  const {\n    facetColumnResult,\n    showAllFacets,\n    lastFacetSelection,\n    isLoading,\n    rgbIndex,\n    isAllFilterSelected,\n  } = props\n  const children: any = []\n  const ref: React.RefObject<HTMLSpanElement> = React.createRef()\n  // Note: this actually sorts the data when it appears in the\n  // table as it stands currently, this may change depending on\n  // if that arrangment is no longer desired\n  facetColumnResult.facetValues.sort((a: any, b: any) => {\n    return b.count - a.count\n  })\n  const { colorPalette, textColors } = getColorPallette(\n    rgbIndex,\n    facetColumnResult.facetValues.length,\n  )\n  facetColumnResult.facetValues.forEach(\n    (facetColumnResultValues, index: number) => {\n      const key =\n        facetColumnResult.columnName +\n        facetColumnResultValues.value +\n        facetColumnResultValues.count\n      const textColor = textColors[index]\n      const curColor = colorPalette[index]\n      let style: any = {}\n\n      const isSelected = isAllFilterSelected\n        ? true\n        : getIsValueSelected({\n            isLoading,\n            lastFacetSelection,\n            columnName: facetColumnResult.columnName,\n            curFacetSelection: facetColumnResultValues,\n          })\n\n      if (isSelected) {\n        style = {\n          background: curColor,\n        }\n      } else {\n        style = {\n          background: '#C4C4C4',\n        }\n      }\n      // we add this class for testability\n      const backgroundClass = isSelected\n        ? FACET_SELECTED_CLASS\n        : FACET_NOT_SELECTED_CLASS\n      style.color = textColor\n      const { value, count } = facetColumnResultValues\n      const displayValue =\n        value === 'org.sagebionetworks.UNDEFINED_NULL_NOTSET'\n          ? 'Unannotated'\n          : value\n\n      children.push(\n        <label\n          style={style}\n          className=\"SRC-facets SRC-primary-background-color-hover \"\n          key={key}\n        >\n          <span className=\"SRC-facets-text\">\n            {displayValue} ({count})\n          </span>\n          <input\n            // @ts-ignore\n            onChange={props.applyChanges(\n              ref,\n              value,\n              SELECT_SINGLE_FACET,\n              index,\n            )}\n            checked={isSelected}\n            type=\"checkbox\"\n            value={value}\n            className={`SRC-hidden SRC-facet-checkboxes ${backgroundClass}`}\n          />\n        </label>,\n      )\n    },\n  )\n  // By default only show 5 facets unless the user has clicked a facet, in which case\n  // showAllFacets will be true.\n  const childrenView = showAllFacets ? children : children.slice(0, 5)\n  return (\n    // need a span so that we can have a ref attachable\n    <span ref={ref}>{childrenView}</span>\n  )\n}\n\ntype FacetsState = {\n  showAllFacets: boolean\n}\n\nclass Facets extends React.Component<QueryWrapperChildProps, FacetsState> {\n  constructor(props: QueryWrapperChildProps) {\n    super(props)\n    this.applyChanges = this.applyChanges.bind(this)\n    this.state = {\n      showAllFacets: false,\n    }\n    this.showAllFacets = this.showAllFacets.bind(this)\n    this.showButtons = this.showButtons.bind(this)\n  }\n  /**\n   * Display the view of the facets\n   *\n   * @returns\n   * @memberof Facets\n   */\n  public showFacetFilter() {\n    if (!this.props.data!.facets) {\n      throw Error(\n        'Error on query request, must include facets in partmask to show facets',\n      )\n    }\n    // Find the facetcolumn result according to the input filter\n    const facetColumnResult = this.props.data!.facets!.find(\n      el =>\n        el.columnName === this.props.facet && el.facetType === 'enumeration',\n    ) as FacetColumnResultValues\n    if (!facetColumnResult) {\n      throw Error('Error no matching facet found given specified facet')\n    }\n\n    return (\n      <CheckboxGroup\n        isAllFilterSelected={\n          this.props.isAllFilterSelectedForFacet![this.props.facet!]\n        }\n        showAllFacets={this.state.showAllFacets}\n        rgbIndex={this.props.rgbIndex!}\n        key={facetColumnResult.columnName}\n        facetColumnResult={facetColumnResult}\n        applyChanges={this.applyChanges}\n        isLoading={this.props.isLoading!}\n        lastFacetSelection={this.props.lastFacetSelection!}\n      />\n    )\n  }\n\n  /**\n   * Handle checkbox click event\n   */\n  public applyChanges = (\n    ref: React.RefObject<HTMLSpanElement>,\n    facetValue: string,\n    selector: string,\n    index: number,\n  ) => (event: React.MouseEvent<HTMLSpanElement>) => {\n    event.preventDefault()\n    if (!this.state.showAllFacets) {\n      this.setState({\n        showAllFacets: true,\n      })\n    }\n\n    const { facet = '', isAllFilterSelectedForFacet = {} } = this.props\n\n    const lastFacetSelection = {\n      facetValue,\n      selector,\n      columnName: facet,\n    } as FacetSelection\n    isAllFilterSelectedForFacet[facet] = selector === SELECT_ALL\n    this.props.updateParentState!({\n      lastFacetSelection,\n      isAllFilterSelectedForFacet,\n      chartSelectionIndex: index,\n    })\n\n    // read input and fetch data\n    const htmlCheckboxes = Array.from(\n      ref.current!.querySelectorAll('.SRC-facet-checkboxes'),\n    ) as HTMLInputElement[]\n    // queryRequest is a deep clone\n    const queryRequest: QueryBundleRequest = this.props.getLastQueryRequest!()\n    const { newQueryRequest } = readFacetValues({\n      htmlCheckboxes,\n      queryRequest,\n      selector,\n      facet,\n      value: facetValue,\n    })\n\n    queryRequest.query.offset = 0\n    this.props.executeQueryRequest!(newQueryRequest)\n  }\n\n  public showAllFacets(event: React.MouseEvent<HTMLButtonElement>) {\n    event.preventDefault()\n    this.setState({\n      showAllFacets: true,\n    })\n  }\n\n  public showButtons(\n    curFacetsLength: number,\n    ref: React.RefObject<HTMLDivElement>,\n  ) {\n    if (this.state.showAllFacets || curFacetsLength <= 5) {\n      // this is hidden if there are > 5 facets, wait for user to make\n      // an action for this to appear\n      return (\n        <button\n          className=\"SRC-primary-text-color SRC-facet-select-all SRC-no-text-decor\"\n          onClick={this.applyChanges(ref, '', SELECT_ALL, 0)}\n        >\n          Select All\n        </button>\n      )\n    }\n    return (\n      <button\n        id=\"showAllFacetsButton\"\n        className=\"SRC-primary-text-color SRC-no-text-decor\"\n        onClick={this.showAllFacets}\n      >\n        Show All ({curFacetsLength})\n      </button>\n    )\n  }\n\n  public render() {\n    if (!this.props.data) {\n      return <div />\n    }\n    const { data, facet, unitDescription, isLoading, showBarChart } = this.props\n    const { facets } = data\n    if (!facets) {\n      throw Error(\n        'Error on query request, must include facets in partmask to show facets',\n      )\n    }\n    const curFacetsIndex = facets.findIndex(\n      curFacet =>\n        curFacet.columnName === facet && curFacet.facetType === 'enumeration',\n    )\n    // cast is necessary because filter returns an array of arrays\n    const facetColumnResultValues = facets[\n      curFacetsIndex\n    ] as FacetColumnResultValues\n\n    if (!facetColumnResultValues) {\n      return <div />\n    }\n    const ref: React.RefObject<HTMLDivElement> = React.createRef()\n    return (\n      <div className=\"SRC-syn-border-spacing\">\n        {!showBarChart && (\n          <TotalQueryResults\n            lastQueryRequest={this.props.getLastQueryRequest!()}\n            token={this.props.token}\n            unitDescription={unitDescription!}\n            frontText={'Displaying'}\n            isLoading={isLoading!}\n          />\n        )}\n        <form>\n          <div ref={ref} className=\"SRC-marginFive form-group\">\n            {this.showFacetFilter()}\n            {this.showButtons(facetColumnResultValues.facetValues.length, ref)}\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport { Facets, CheckboxGroup }\n","import { QueryBundleRequest } from '../synapseTypes/Table/QueryBundleRequest'\nimport { Query } from '../synapseTypes'\nimport { SynapseConstants } from '..'\nimport { parseEntityIdFromSqlStatement } from './sqlFunctions'\n\n//id consists of a component class/function name and it's index\nfunction getComponentSearchHashId(\n  componentName: string,\n  componentIndex: number,\n): string {\n  return `${componentName}${componentIndex}`\n}\n\n//returns updated search string with the component's info\nfunction patchSearchString(\n  componentSearchHashId: string,\n  stringifiedQuery: string,\n): string | undefined {\n  const searchString = window.location.search\n\n  const searchFragment = `${componentSearchHashId}=${stringifiedQuery}`\n  if (!searchString) {\n    return searchFragment\n  }\n\n  if (!searchString.includes(`${componentSearchHashId}=`)) {\n    //substr(1) because we don't want '?' character\n    return `${searchString.substr(1)}&${searchFragment}`\n  }\n  const searchHashes = window.location.search\n    .slice(searchString.indexOf('?') + 1)\n    .split('&')\n\n  const searchHashesUpdated = searchHashes\n    .map(item => {\n      const split = item.split('=')\n      if (split[0] === componentSearchHashId) {\n        return `${searchFragment}`\n      } else return item\n    })\n    .join('&')\n  return searchHashesUpdated\n}\n\n//gets a value for the search param for the component from the url\nexport function getSearchParamValueFromUrl(\n  componentName: string,\n  componentIndex: number,\n): string | undefined {\n  if (!window.location.search) {\n    return undefined\n  }\n  const componentSearchHashId = getComponentSearchHashId(\n    componentName,\n    componentIndex,\n  )\n  const hashes = window.location.search\n    .slice(window.location.search.indexOf('?') + 1)\n    .split('&')\n  const getSearchParamValue = hashes\n    .filter(item => {\n      const hash = item.split('=')\n      return hash[0] === componentSearchHashId\n    })\n    .map(item => item.split('=')[1])[0]\n  return getSearchParamValue\n    ? decodeURIComponent(getSearchParamValue)\n    : undefined\n}\n\n//updates the url with the components new search params\nexport function updateUrlWithNewSearchParam(\n  componentName: string,\n  componentIndex: number | undefined,\n  stringifiedQuery: string,\n) {\n  const componentSearchHashId =\n    componentIndex !== undefined\n      ? getComponentSearchHashId(componentName, componentIndex)\n      : componentName\n  const searchString = patchSearchString(\n    componentSearchHashId,\n    stringifiedQuery,\n  )\n  const location = window.location\n  const newURL = `${location.protocol}//${location.hostname}${\n    location.port ? ':' + location.port : ''\n  }${location.pathname}?${searchString}`\n\n  window.history.pushState('object or string', 'Title', newURL)\n}\n\nexport function getQueryRequestFromLink(\n  componentName: string,\n  componentIndex: number,\n): QueryBundleRequest | undefined {\n  const searchParamValue = getSearchParamValueFromUrl(\n    componentName,\n    componentIndex,\n  )\n\n  let initQueryRequest: QueryBundleRequest | undefined = undefined\n  if (searchParamValue) {\n    const query = JSON.parse(searchParamValue) as Query\n    if (query.sql) {\n      initQueryRequest = {\n        concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n        partMask:\n          SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS |\n          SynapseConstants.BUNDLE_MASK_QUERY_FACETS |\n          SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS |\n          SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n        entityId: parseEntityIdFromSqlStatement(query.sql),\n        query,\n      }\n    }\n  }\n  return initQueryRequest\n}\n","import * as React from 'react'\n\nimport { SynapseClient, SynapseConstants } from '../utils/'\nimport { getNextPageOfData } from '../utils/functions/queryUtils'\nimport * as DeepLinkingUtils from '../utils/functions/deepLinkingUtils'\nimport {\n  AsynchronousJobStatus,\n  FacetColumnResultValues,\n  QueryBundleRequest,\n  QueryResultBundle,\n} from '../utils/synapseTypes/'\nimport { cloneDeep } from 'lodash-es'\nimport { SynapseClientError } from '../utils/SynapseClient'\nexport type QueryWrapperProps = {\n  visibleColumnCount?: number\n  initQueryRequest: QueryBundleRequest\n  rgbIndex?: number\n  token?: string\n  facet?: string\n  unitDescription?: string\n  facetAliases?: {}\n  loadNow?: boolean\n  showBarChart?: boolean\n  componentIndex?: number //used for deep linking\n  shouldDeepLink?: boolean\n  hiddenColumns?: string[]\n  lockedFacet?: LockedFacet\n}\n\nexport type TopLevelControlsState = {\n  showFacetVisualization: boolean\n  showFacetFilter: boolean\n  showColumnFilter: boolean\n  showSearchBar: boolean\n  showDownloadConfirmation: boolean\n  showColumnSelectDropdown: boolean\n}\n\nexport type SearchQuery = {\n  columnName: string\n  searchText: string\n}\n\nexport type QueryWrapperState = {\n  /*\n    isAllFilterSelectedForFacet tracks whether for a particular\n     facet if the 'All' button has been selected, this tracks the\n     click event and syncs Facets.tsx and SynapseTable.tsx\n  */\n  isAllFilterSelectedForFacet: {}\n  data: QueryResultBundle | undefined\n  isLoadingNewData: boolean // occurs when props change\n  isLoading: boolean // occurs when state changes\n  lastQueryRequest: QueryBundleRequest\n  hasMoreData: boolean\n  // TODO: Delete lastFacetSelection once StackedBarChart.tsx/Facets.tsx are deleted\n  lastFacetSelection: FacetSelection\n  chartSelectionIndex: number\n  asyncJobStatus?: AsynchronousJobStatus\n  facetAliases?: {}\n  loadNowStarted: boolean\n  topLevelControlsState?: TopLevelControlsState\n  isColumnSelected: string[]\n  selectedRowIndices?: number[]\n  error: SynapseClientError | undefined\n}\n\n/*\n  For details page: to lock a facet name (e.g. study, grant) so that the facet name\n  and its all possible values will not appear on the details page. The facet name is\n  given by the url's search param. The type is defined here so that other child components\n  in SRC won't generate type errors.\n */\nexport type LockedFacet = {\n  facet?: string,\n  value?: string\n}\n\nexport type FacetSelection = {\n  columnName: string\n  facetValue: string\n  selector: string\n}\n\n// Since the component is an HOC we export the props passed down\nexport type QueryWrapperChildProps = {\n  isAllFilterSelectedForFacet?: {}\n  isLoading?: boolean\n  token?: string\n  entityId?: string\n  isLoadingNewData?: boolean\n  executeQueryRequest?: (param: QueryBundleRequest) => void\n  executeInitialQueryRequest?: () => void\n  getNextPageOfData?: (queryRequest: QueryBundleRequest) => void\n  getLastQueryRequest?: () => QueryBundleRequest\n  getInitQueryRequest?: () => QueryBundleRequest\n  data?: QueryResultBundle\n  facet?: string\n  updateParentState?: <K extends keyof QueryWrapperState>(\n    param: Pick<QueryWrapperState, K>,\n  ) => void\n  rgbIndex?: number\n  unitDescription?: string\n  facetAliases?: {}\n  lastFacetSelection?: FacetSelection\n  chartSelectionIndex?: number\n  asyncJobStatus?: AsynchronousJobStatus\n  showBarChart?: boolean\n  hasMoreData?: boolean\n  topLevelControlsState?: TopLevelControlsState\n  isColumnSelected?: string[]\n  selectedRowIndices?: number[]\n  error?: SynapseClientError | undefined,\n  lockedFacet?: LockedFacet\n}\n\n/**\n * Class wraps around any Synapse views that are dependent on a query bundle\n * Those classes then take in as props:\n *\n * @class QueryWrapper\n * @extends {React.Component}\n */\nexport default class QueryWrapper extends React.Component<\n  QueryWrapperProps,\n  QueryWrapperState\n> {\n  private componentIndex: number\n  constructor(props: QueryWrapperProps) {\n    super(props)\n    this.executeInitialQueryRequest = this.executeInitialQueryRequest.bind(this)\n    this.executeQueryRequest = this.executeQueryRequest.bind(this)\n    this.getLastQueryRequest = this.getLastQueryRequest.bind(this)\n    this.getNextPageOfData = this.getNextPageOfData.bind(this)\n    this.updateParentState = this.updateParentState.bind(this)\n    this.getInitQueryRequest = this.getInitQueryRequest.bind(this)\n    this.state = {\n      data: undefined,\n      isLoading: true,\n      isLoadingNewData: true,\n      hasMoreData: true,\n      lastFacetSelection: {\n        columnName: '',\n        facetValue: '',\n        selector: '',\n      },\n      chartSelectionIndex: 0,\n      isAllFilterSelectedForFacet: {},\n      loadNowStarted: false,\n      lastQueryRequest: cloneDeep(this.props.initQueryRequest!),\n      topLevelControlsState: {\n        showColumnFilter: true,\n        showFacetFilter: true,\n        showFacetVisualization: true,\n        showSearchBar: false,\n        showDownloadConfirmation: false,\n        showColumnSelectDropdown: false,\n      },\n      isColumnSelected: [],\n      selectedRowIndices: [],\n      error: undefined,\n    }\n    this.componentIndex = props.componentIndex || 0\n  }\n\n  /**\n   * Compute default query request\n   *\n   * @memberof QueryWrapper\n   */\n  public componentDidMount() {\n    const { loadNow = true } = this.props\n    const query = DeepLinkingUtils.getQueryRequestFromLink(\n      'QueryWrapper',\n      this.componentIndex,\n    )\n\n    if (loadNow) {\n      this.executeInitialQueryRequest(query)\n    }\n  }\n\n  /**\n   * @memberof QueryWrapper\n   */\n  public componentDidUpdate(prevProps: QueryWrapperProps) {\n    /**\n     *  If component updates and the token has changed (they signed in) then the data should be pulled in. Or if the\n     *  sql query has changed of the component then perform an update.\n     */\n\n    const { loadNow = true } = this.props\n    if (loadNow && !this.state.loadNowStarted) {\n      this.executeInitialQueryRequest()\n    } else if (loadNow && this.props.token !== prevProps.token) {\n      // if loadNow is true and they've logged in with a token that is not undefined, null, or an empty string when it was before\n      this.executeQueryRequest(this.getLastQueryRequest())\n    } else if (\n      prevProps.initQueryRequest.query.sql !==\n      this.props.initQueryRequest!.query.sql\n    ) {\n      this.executeInitialQueryRequest()\n    }\n  }\n\n  /**\n   * Pass down a deep clone (so no side affects on the child's part) of the\n   * last query request made\n   *\n   * @returns\n   * @memberof QueryWrapper\n   */\n  public getLastQueryRequest(): QueryBundleRequest {\n    return cloneDeep(this.state.lastQueryRequest)\n  }\n\n  /**\n   * Pass down a deep clone (so no side affects on the child's part) of the\n   * first query request made\n   *\n   * @returns\n   * @memberof QueryWrapper\n   */\n  public getInitQueryRequest(): QueryBundleRequest {\n    return cloneDeep(this.props.initQueryRequest)\n  }\n  /**\n   * Execute the given query\n   *\n   * @param {*} queryRequest Query request as specified by\n   *                         https://docs.synapse.org/rest/org/sagebionetworks/repo/model/table/Query.html\n   * @memberof QueryWrapper\n   */\n  public executeQueryRequest(queryRequest: QueryBundleRequest) {\n    const clonedQueryRequest = cloneDeep(queryRequest)\n    this.setState({\n      isLoading: true,\n      lastQueryRequest: clonedQueryRequest,\n      selectedRowIndices: [], // reset selected row indices any time the query is re-run\n    })\n\n    if (clonedQueryRequest.query) {\n      const stringifiedQuery = encodeURIComponent(\n        JSON.stringify(clonedQueryRequest.query),\n      )\n      if (this.props.shouldDeepLink) {\n        DeepLinkingUtils.updateUrlWithNewSearchParam(\n          'QueryWrapper',\n          this.componentIndex,\n          stringifiedQuery,\n        )\n      }\n    }\n    return SynapseClient.getQueryTableResults(\n      clonedQueryRequest,\n      this.props.token,\n      this.updateParentState,\n    )\n      .then((data: QueryResultBundle) => {\n        const hasMoreData =\n          data.queryResult.queryResults.rows.length ===\n          SynapseConstants.PAGE_SIZE\n        const newState = {\n          hasMoreData,\n          data,\n          asyncJobStatus: undefined,\n        }\n        this.setState(newState)\n      })\n      .catch(error => {\n        console.error('Failed to get data ', error)\n        this.setState(error)\n      })\n      .finally(() => {\n        this.setState({ isLoading: false, isLoadingNewData: false })\n      })\n  }\n\n  /**\n   * Grab the next page of data, pulling in 25 more rows.\n   *\n   * @param {*} queryRequest Query request as specified by\n   *                         https://docs.synapse.org/rest/org/sagebionetworks/repo/model/table/Query.html\n   * @memberof QueryWrapper\n   */\n  public async getNextPageOfData(queryRequest: QueryBundleRequest) {\n    this.setState({\n      isLoading: true,\n    })\n\n    await getNextPageOfData(\n      queryRequest,\n      this.state.data!,\n      this.props.token,\n    ).then(newState => {\n      this.setState({\n        ...newState,\n        isLoading: false,\n        lastQueryRequest: cloneDeep(queryRequest),\n      })\n    })\n  }\n\n  /**\n   * Execute the initial query passed into the component\n   *\n   * @param {*} queryRequest Query request as specified by\n   *                         https://docs.synapse.org/rest/org/sagebionetworks/repo/model/table/Query.html\n   * @memberof QueryWrapper\n   */\n  public executeInitialQueryRequest(\n    initQueryRequest: QueryBundleRequest = this.props.initQueryRequest,\n  ) {\n    const lastQueryRequest: QueryBundleRequest = cloneDeep(initQueryRequest)\n    this.setState({\n      isLoading: true,\n      chartSelectionIndex: 0,\n      loadNowStarted: true,\n      lastQueryRequest,\n    })\n    SynapseClient.getQueryTableResults(\n      initQueryRequest,\n      this.props.token,\n      this.updateParentState,\n    )\n      .then((data: QueryResultBundle) => {\n        const hasMoreData =\n          data.queryResult.queryResults.rows.length ===\n          SynapseConstants.PAGE_SIZE\n        const isAllFilterSelectedForFacet = cloneDeep(\n          this.state.isAllFilterSelectedForFacet,\n        )\n        let { chartSelectionIndex } = this.state\n        if (this.props.facet) {\n          if (!data.facets) {\n            throw Error(\n              'Error on query request, must include facets in partmask to show facets',\n            )\n          }\n          const enumFacets = data.facets.filter(\n            el => el.facetType === 'enumeration',\n          ) as FacetColumnResultValues[]\n          enumFacets.forEach(el => {\n            // isAll is only true iff there are no facets selected or all elements are selected\n            const { facetValues } = el\n            const isAllFalse = facetValues.every(facet => !facet.isSelected)\n            const isAllTrue = facetValues.every(facet => facet.isSelected)\n            const isByDefaultSelected = isAllFalse || isAllTrue\n            isAllFilterSelectedForFacet[el.columnName] = isByDefaultSelected\n            if (el.columnName === this.props.facet && !isAllFalse) {\n              // Note - this picks the first selected facet\n              chartSelectionIndex = facetValues\n                .sort((a, b) => b.count - a.count)\n                .findIndex(facet => facet.isSelected)\n            }\n          })\n        }\n        const newState = {\n          isAllFilterSelectedForFacet,\n          hasMoreData,\n          data,\n          chartSelectionIndex,\n          asyncJobStatus: undefined,\n          isColumnSelected:\n            data?.selectColumns\n              ?.slice(0, this.props.visibleColumnCount ?? Infinity)\n              .map(el => el.name) ?? [],\n        }\n        this.setState(newState)\n      })\n      .catch(error => {\n        console.error('Failed to get data ', error)\n        this.setState({\n          error,\n        })\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n          isLoadingNewData: false,\n        })\n      })\n  }\n\n  public updateParentState<K extends keyof QueryWrapperState>(\n    update: Pick<QueryWrapperState, K>,\n  ) {\n    this.setState(update)\n  }\n\n  /**\n   * remove a particular facet name (e.g. study) and its all possible values based on the parameter specified in the url\n   * this is to remove the facet from the charts, search and filter.\n   * @return data: QueryResultBundle\n   */\n  public removeLockedFacetData (){\n    const lockedFacet = this.props.lockedFacet?.facet\n    if (lockedFacet && this.state.data) {  // for details page, return data without the \"locked\" facet\n      const data = cloneDeep(this.state.data)\n      const facets = data.facets?.filter( item => item.columnName.toLowerCase() !== lockedFacet.toLowerCase())\n      data.facets = facets\n      return data\n    } else {  // for other pages, just return the data\n      return this.state.data\n    }\n  }\n\n  /**\n   * Render the children without any formatting\n   */\n  public render() {\n    const { isLoading } = this.state\n    const { children, ...rest } = this.props\n    // inject props in children of this component\n    const childrenWithProps = React.Children.map(children, (child: any) => {\n      if (!child) {\n        return child\n      }\n      const queryWrapperChildProps: QueryWrapperChildProps = {\n        isAllFilterSelectedForFacet: this.state.isAllFilterSelectedForFacet,\n        data: this.removeLockedFacetData(),\n        hasMoreData: this.state.hasMoreData,\n        lastFacetSelection: this.state.lastFacetSelection,\n        chartSelectionIndex: this.state.chartSelectionIndex,\n        isLoading: this.state.isLoading,\n        isLoadingNewData: this.state.isLoadingNewData,\n        asyncJobStatus: this.state.asyncJobStatus,\n        topLevelControlsState: this.state.topLevelControlsState,\n        isColumnSelected: this.state.isColumnSelected,\n        selectedRowIndices: this.state.selectedRowIndices,\n        error: this.state.error,\n        executeInitialQueryRequest: this.executeInitialQueryRequest,\n        executeQueryRequest: this.executeQueryRequest,\n        getLastQueryRequest: this.getLastQueryRequest,\n        getNextPageOfData: this.getNextPageOfData,\n        updateParentState: this.updateParentState,\n        getInitQueryRequest: this.getInitQueryRequest,\n        ...rest,\n      }\n      return React.cloneElement(child, queryWrapperChildProps)\n    })\n\n    const loadingCusrorClass = isLoading ? 'SRC-logo-cursor' : ''\n    return (\n      <div className={`SRC-wrapper ${loadingCusrorClass}`}>\n        {childrenWithProps}\n      </div>\n    )\n  }\n}\n","import { EntityHeader, UserProfile } from '../synapseTypes'\nimport { SynapseConstants } from '..'\n\nexport const getStoredEntityHeaders = (): EntityHeader[] => {\n    try {\n      const lookUpEntityHeaders: EntityHeader[] = JSON.parse(\n        sessionStorage.getItem(SynapseConstants.ENTITY_HEADER_STORAGE_KEY) || '',\n      )\n      return lookUpEntityHeaders\n    } catch (e) {\n      return []\n    }\n  }\n\n  export const getStoredUserProfiles = (): UserProfile[] => {\n    try {\n      const lookUpUserIds: UserProfile[] = JSON.parse(\n        sessionStorage.getItem(SynapseConstants.USER_PROFILE_STORAGE_KEY) || '',\n      )\n      return lookUpUserIds\n    } catch (e) {\n      return []\n    }\n  }","import React, { FunctionComponent } from 'react'\nimport {\n  FontAwesomeIcon,\n  FontAwesomeIconProps,\n} from '@fortawesome/react-fontawesome'\nimport ReactTooltip from 'react-tooltip'\nimport { TOOLTIP_DELAY_SHOW } from '../table/SynapseTableConstants'\nimport { IconDefinition } from '@fortawesome/fontawesome-svg-core'\nimport { Dropdown } from 'react-bootstrap'\nimport { Icon } from '../row_renderers/utils'\n\ntype CustomImageProps = {\n  svgImg: React.ComponentElement<any, any>\n  altText: string\n}\n\nexport type TooltipVisualProps = {\n  delayShow: number\n  place: 'top' | 'right' | 'bottom' | 'left'\n  type: 'dark' | 'success' | 'warning' | 'error' | 'info' | 'light'\n  effect: 'float' | 'solid'\n  border?: boolean\n}\n\n/*****************************************\n *  The control needs to either have a child element or needs to have an image supplied\n *  If the child element is supplied the control renders the child applying additional properties\n *  If the image is supplied the control renders a clickable image\n *  If there are no children and callback Fn is not supplied it is assumed to be a a dropdown trigger\n */\n\ntype ElementWithTooltipProps = {\n  image?: IconDefinition | CustomImageProps\n  imageColor?: string\n  idForToolTip: string\n  tooltipText: string\n  callbackFn?: Function\n  className?: string\n  tooltipVisualProps?: TooltipVisualProps\n  darkTheme?: boolean\n  size?: FontAwesomeIconProps['size']\n  icon?: string\n}\n\nfunction getTooltipTriggerContents(\n  image: IconDefinition | CustomImageProps,\n  imageColor: string | undefined,\n  size: FontAwesomeIconProps['size'] | undefined,\n): JSX.Element {\n  if ('svgImg' in image) {\n    return image.svgImg\n  } else {\n    return (\n      <FontAwesomeIcon\n        size={size ?? '1x'}\n        color={imageColor || 'white'}\n        icon={image}\n      />\n    )\n  }\n}\n\nexport const ElementWithTooltip: FunctionComponent<ElementWithTooltipProps> = ({\n  image,\n  idForToolTip,\n  callbackFn,\n  tooltipText,\n  className = '',\n  imageColor,\n  tooltipVisualProps = { place: 'top', type: 'dark', effect: 'solid' },\n  children,\n  darkTheme,\n  size,\n  icon\n}) => {\n  const { place, type, effect, border } = tooltipVisualProps\n  const iconComponent = icon ? (<Icon type={icon}></Icon>) : undefined\n  const tooltipTriggerContents = iconComponent ? iconComponent : image\n    ? getTooltipTriggerContents(image, imageColor, size)\n    : children || <></>\n\n  //if there is no callbackFn - assume it's a toggle\n\n  let tooltipTrigger: JSX.Element\n  if (!children) {\n    tooltipTrigger = callbackFn ? (\n      <button\n        tabIndex={0}\n        id={idForToolTip}\n        data-for={idForToolTip}\n        data-tip={tooltipText}\n        className={`ElementWithTooltip SRC-hand-cursor SRC-primary-background-color-hover ${className} ${\n          darkTheme ? 'dark-theme' : ''\n        } `}\n        onKeyPress={() => callbackFn()}\n        onClick={() => callbackFn()}\n        aria-label={tooltipText}\n      >\n        {tooltipTriggerContents}\n      </button>\n    ) : (\n      <Dropdown.Toggle\n        data-for={idForToolTip}\n        data-tip={tooltipText}\n        id={idForToolTip}\n        className={`ElementWithTooltip SRC-hand-cursor SRC-primary-background-color-hover ${className} ${\n          darkTheme ? 'dark-theme' : ''\n        } `}\n        variant={'light'}\n      >\n        {tooltipTriggerContents}\n      </Dropdown.Toggle>\n    )\n  } else {\n    const outerChild = children as JSX.Element\n    tooltipTrigger = React.cloneElement(outerChild, {\n      className: `${outerChild.props.className} SRC-hand-cursor`,\n      id: idForToolTip,\n      'data-for': idForToolTip,\n      'data-tip': tooltipText,\n    })\n  }\n\n  return (\n    <>\n      {tooltipTrigger}\n      <ReactTooltip\n        delayShow={TOOLTIP_DELAY_SHOW}\n        place={place}\n        type={type}\n        effect={effect}\n        border={border ? true : false}\n        id={idForToolTip}\n      />\n    </>\n  )\n}\n","import * as React from 'react'\nimport { useState, useEffect } from 'react'\nexport type CheckboxProps = {\n  label: string\n  id: string\n  checked?: boolean\n  className?: string\n  onChange: Function\n  isSelectAll?: boolean\n}\n\nexport const Checkbox: React.FunctionComponent<CheckboxProps> = (\n  props: CheckboxProps,\n) => {\n  const { checked: propsChecked = false, isSelectAll = false } = props\n  const [checked, setChecked] = useState<boolean>(propsChecked)\n\n  useEffect(() => {\n    setChecked(propsChecked)\n  }, [propsChecked])\n\n  const handleCheckboxChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.checked)\n    if (isSelectAll && event.target.checked === false) {\n      /* \n         You can click the all checkbox from off -> on\n         but clicking it off is a no-op\n      */\n      setChecked(true)\n    } else {\n      setChecked(event.target.checked)\n    }\n  }\n\n  const className = props.className ? `checkbox ${props.className}` : `checkbox`\n\n  return (\n    <div className={className}>\n      <label>\n        <span>\n          <input\n            type=\"checkbox\"\n            checked={checked}\n            id={props.id}\n            onChange={handleCheckboxChange}\n          />\n          <span>{props.label}</span>\n        </span>\n      </label>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { unCamelCase } from '../../../utils/functions/unCamelCase'\nimport iconPlus from '../../../assets/icons/icon_plus.svg'\nimport iconMinus from '../../../assets/icons/icon_minus.svg'\nimport '../../../style/components/query_filter/_facet-filter-header.scss'\n\nexport type FacetFilterHeaderProps = {\n  label: string\n  isCollapsed: boolean\n  onClick: Function\n  facetAliases: {} | undefined\n}\nexport const FacetFilterHeader: React.FunctionComponent<FacetFilterHeaderProps> = ({\n  label,\n  isCollapsed,\n  onClick,\n  facetAliases,\n}: FacetFilterHeaderProps) => {\n  return (\n    <div className=\"FacetFilterHeader\">\n      <label className=\"FacetFilterHeader__label\">\n        {unCamelCase(label, facetAliases)}\n      </label>\n      <button\n        className=\"FacetFilterHeader__collapseToggleBtn\"\n        onClick={() => onClick(!isCollapsed)}\n      >\n        {isCollapsed ? <img src={iconPlus} alt=\"Expand Menu\" className=\"icon-plus\" /> : <img src={iconMinus} alt=\"Collapse Menu\"  className=\"icon-minus\" />}\n      </button>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Dropdown } from 'react-bootstrap'\nimport {\n  FacetColumnResultValueCount,\n  ColumnModel,\n} from '../../../utils/synapseTypes/Table'\nimport { Checkbox } from '../Checkbox'\nimport { SynapseConstants } from '../../../utils'\nimport { useState } from 'react'\nimport { EntityHeader } from '../../../utils/synapseTypes/EntityHeader'\nimport { UserProfile } from '../../../utils/synapseTypes'\nimport useGetInfoFromIds from '../../../utils/hooks/useGetInfoFromIds'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FacetFilterHeader } from './FacetFilterHeader'\nimport { ElementWithTooltip } from '../../../containers/widgets/ElementWithTooltip'\nimport useDeepCompareEffect from 'use-deep-compare-effect'\n\nlibrary.add(faArrowLeft)\n\nexport type EnumFacetFilterProps = {\n  facetValues: FacetColumnResultValueCount[]\n  columnModel: ColumnModel\n  token?: string\n  onChange: Function\n  onClear: Function\n  facetAliases: {} | undefined\n  containerAs?: 'Collapsible' | 'Dropdown'\n  collapsed?: boolean\n}\n\nfunction valueToId(value: string): string {\n  return value.replace(/\\s/g, '').toLowerCase()\n}\n\nfunction valueToLabel(\n  facet: FacetColumnResultValueCount,\n  profiles: UserProfile[] = [],\n  entityHeaders: EntityHeader[] = [],\n): string {\n  const { value } = facet\n  let displayValue = value\n  if (value === SynapseConstants.VALUE_NOT_SET) {\n    displayValue = 'Unannotated'\n  }\n  const profile = profiles.find(profile => profile.ownerId === value)\n  if (profile) {\n    displayValue = profile ? profile.userName : `unknown (${value})`\n  }\n\n  const eh = entityHeaders.find(eh => eh.id === value)\n  if (eh) {\n    displayValue = eh ? eh.name : `unknown (${value})`\n  }\n\n  return `${displayValue}`\n}\n\nfunction formatFacetValuesForDisplay(\n  facetValues: FacetColumnResultValueCount[],\n  isShowAll: boolean,\n  visibleItemsCount: number,\n) {\n  //sort facets by count\n  const facets = [...facetValues.sort((a, b) => b.count - a.count)]\n  if (isShowAll || facets.length <= visibleItemsCount) {\n    return facets\n  } else {\n    //if we are not hiding elected facets\n    if (facets.slice(visibleItemsCount).find(item => item.isSelected)) {\n      return facets\n    } else {\n      return facets.splice(0, visibleItemsCount)\n    }\n  }\n}\n\n/************* QUERY ENUM CONMPONENT  *************/\n\nexport const EnumFacetFilter: React.FunctionComponent<EnumFacetFilterProps> = ({\n  token,\n  facetValues,\n  columnModel,\n  onClear,\n  onChange,\n  facetAliases,\n  containerAs = 'Collapsible',\n  collapsed = false,\n}: EnumFacetFilterProps) => {\n  const [isShowAll, setIsShowAll] = useState<boolean>(false)\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(collapsed)\n  const [isShowDropdown, setIsShowDropdown] = useState<boolean>(false)\n  const [showSearch, setShowSearch] = useState<boolean>(false)\n  const [searchTerm, setSearchText] = useState<string>('')\n  const [filteredSet, setFilteredSet] = useState<FacetColumnResultValueCount[]>(\n    facetValues,\n  )\n\n  useDeepCompareEffect(() => {\n    setFilteredSet(facetValues)\n  }, [facetValues])\n\n  const visibleItemsCount = 5\n  const selectionDelay = 1500 // in ms\n  const textInput: React.RefObject<HTMLInputElement> = React.createRef()\n  const selectedValuesMap = {}\n  let timer: ReturnType<typeof setTimeout>\n\n  const userIds =\n    columnModel?.columnType === 'USERID'\n      ? facetValues.map(facet => facet.value)\n      : []\n  const userProfiles = useGetInfoFromIds<UserProfile>({\n    ids: userIds,\n    token,\n    type: 'USER_PROFILE',\n  })\n\n  const entityIds =\n    columnModel?.columnType === 'ENTITYID'\n      ? facetValues.map(facet => facet.value)\n      : []\n  const entityHeaders = useGetInfoFromIds<EntityHeader>({\n    ids: entityIds,\n    token,\n    type: 'ENTITY_HEADER',\n  })\n\n  const handleTextInputFilterEvent = (\n    e: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    const inputValue: string = e.target.value\n    setSearchText(inputValue)\n    setIsShowAll(true) // While in filter search mode, display all filtered values\n\n    if (!inputValue) {\n      // if input field is empty, display all facet values\n      facetValues.forEach(obj => {\n        obj.isSelected = false\n      })\n      setFilteredSet(facetValues)\n    } else {\n      // display only facet values that contain text from the text input field\n      const filtered = facetValues.filter(obj => {\n        const label = valueToLabel(obj, userProfiles, entityHeaders)\n        return label.toLowerCase().indexOf(inputValue.trim().toLowerCase()) > -1\n          ? obj\n          : null\n      })\n      setFilteredSet(filtered)\n    }\n  }\n\n  if (!columnModel) {\n    return <></>\n  }\n  const isDropdown = containerAs === 'Dropdown'\n  const content = (\n    <div className={isDropdown ? 'EnumFacetFilter__dropdown_menu' : ''}>\n      <div className=\"EnumFacetFilter__checkboxContainer--forAll\">\n        <div\n          className={\n            showSearch\n              ? 'EnumFacetFilter__search active'\n              : 'EnumFacetFilter__search'\n          }\n        >\n          <button // Close Search Button\n            className=\"EnumFacetFilter__closeSearch\"\n            onClick={() => {\n              setFilteredSet(facetValues)\n              setShowSearch(false)\n              setIsShowAll(false)\n            }}\n          >\n            <FontAwesomeIcon\n              className=\"EnumFacetFilter__previous\"\n              icon={faArrowLeft}\n            />\n          </button>\n          {searchTerm.length > 0 && (\n            <button // Clear Search Filter Text Button\n              className=\"EnumFacetFilter__resetSearch\"\n              onClick={() => {\n                setSearchText('')\n                textInput.current?.focus()\n              }}\n            >\n              <FontAwesomeIcon\n                className=\"EnumFacetFilter__reset\"\n                icon={'times'}\n              />\n            </button>\n          )}\n          <input // Search Filter Text\n            type=\"text\"\n            placeholder=\"Find values\"\n            value={searchTerm}\n            ref={textInput}\n            onChange={e => {\n              handleTextInputFilterEvent(e)\n            }}\n          />\n        </div>\n        {!showSearch && (\n          <div className=\"EnumFacetFilter__checkAll\">\n            <Checkbox\n              className=\"EnumFacetFilter__checkbox\"\n              onChange={() => {\n                onClear()\n              }}\n              key=\"select_all\"\n              checked={facetValues.filter(item => item.isSelected).length === 0}\n              label=\"All\"\n              id=\"select_all\"\n              isSelectAll={true}\n            ></Checkbox>\n            <button\n              className=\"EnumFacetFilter__searchbtn\"\n              onClick={() => {\n                setSearchText('')\n                setShowSearch(true)\n                textInput.current?.focus()\n              }}\n            >\n              <FontAwesomeIcon\n                className=\"EnumFacetFilter__searchicon\"\n                icon={'search'}\n              />\n            </button>\n          </div>\n        )}\n      </div>\n      <div>\n        {filteredSet.length > 0 &&\n          formatFacetValuesForDisplay(\n            filteredSet,\n            isShowAll || isDropdown,\n            visibleItemsCount,\n          ).map((facet, index: number) => {\n            const id = valueToId(facet.value)\n            return (\n              <div\n                className=\"EnumFacetFilter__checkboxContainer\"\n                key={`checkLabel${index}`}\n              >\n                <Checkbox\n                  className=\"EnumFacetFilter__checkbox\"\n                  onChange={(isChecked: boolean) => {\n                    selectedValuesMap[facet.value] = isChecked\n                    clearTimeout(timer)\n                    timer = setTimeout(() => {\n                      onChange(selectedValuesMap)\n                    }, selectionDelay)\n                  }}\n                  key={id + index}\n                  checked={facet.isSelected}\n                  label={valueToLabel(facet, userProfiles, entityHeaders)}\n                  id={id}\n                ></Checkbox>\n                {isDropdown && (\n                  <span className=\"EnumFacetFilter__count\">\n                    ({facet.count})\n                  </span>\n                )}\n                {!isDropdown && (\n                  <div className=\"EnumFacetFilter__count\">{facet.count}</div>\n                )}\n              </div>\n            )\n          })}\n        {!isDropdown && (\n          <>\n            {!isShowAll && filteredSet.length > visibleItemsCount && (\n              <button\n                className=\"EnumFacetFilter__showMoreFacetsBtn\"\n                onClick={() => setIsShowAll(true)}\n              >\n                <div className=\"EnumFacetFilter__checkboxContainer\">\n                  <div className=\"EnumFacetFilter__showMoreFacetsLabel\">\n                    Show more\n                  </div>\n                  <div className=\"EnumFacetFilter__howMoreFacetsCount\">\n                    {filteredSet.length}\n                  </div>\n                </div>\n              </button>\n            )}\n            {isShowAll && filteredSet.length > visibleItemsCount && (\n              <button\n                className=\"EnumFacetFilter__showMoreFacetsBtn\"\n                onClick={() => setIsShowAll(false)}\n              >\n                <div className=\"EnumFacetFilter__checkboxContainer\">\n                  <div className=\"EnumFacetFilter__showMoreFacetsLabel\">\n                    Show Less\n                  </div>\n                </div>\n              </button>\n            )}\n          </>\n        )}\n        {filteredSet.length <= 0 && (\n          <div className=\"EnumFacetFilter__noMatch\">No match found</div>\n        )}\n      </div>\n    </div>\n  )\n\n  // Any click event for the Dropdown will close the dropdown (assuming its open), so we have\n  // to handle the onToggle event and manually manage the dropdown open state. If metadata\n  // is defined the event occuring is inside the dropdown which we then want to keep open, otherwise\n  // we close it.\n  const onToggle = (_show: boolean, _event: any, metadata: any) => {\n    if (metadata.source) {\n      setIsShowDropdown(true)\n    } else {\n      setIsShowDropdown(false)\n    }\n  }\n\n  if (isDropdown) {\n    return (\n      <Dropdown\n        className=\"EnumFacetFilter\"\n        show={isShowDropdown}\n        onToggle={onToggle}\n      >\n        <ElementWithTooltip\n          idForToolTip=\"facetFilterTooltip\"\n          tooltipText=\"Filter by specific facet\"\n          key=\"facetFilterTooltip\"\n          darkTheme={true}\n          icon={\"filter\"}\n        />\n        <Dropdown.Menu>{content}</Dropdown.Menu>\n      </Dropdown>\n    )\n  } else {\n    return (\n      <>\n        <FacetFilterHeader\n          facetAliases={facetAliases}\n          isCollapsed={isCollapsed}\n          label={columnModel.name}\n          onClick={(isCollapsed: boolean) => setIsCollapsed(isCollapsed)}\n        />\n        <div\n          className=\"EnumFacetFilter\"\n          style={{ display: isCollapsed ? 'none' : 'block' }}\n        >\n          {content}\n        </div>\n      </>\n    )\n  }\n}\n","import React, { useState } from 'react'\nimport moment from 'moment'\n\ntype ControlType = 'number' | 'date'\n\nexport type RangeValues = {\n  min?: string\n  max?: string\n}\n\nexport type RangeProps = {\n  type: ControlType\n  initialValues?: RangeValues\n  className?: string\n  errorText?: string\n  onChange: Function\n}\n\nexport const Range: React.FunctionComponent<RangeProps> = (\n  props: RangeProps,\n) => {\n  const errorText = 'Min value should be less then max value'\n  const [error, setError] = useState(false)\n  const [values, setValues] = useState(() =>\n    props.type === 'number' && props.initialValues\n      ? props.initialValues\n      : (props.initialValues && {\n          min: moment(props.initialValues.min).format('YYYY-MM-DD'),\n          max: moment(props.initialValues.max).format('YYYY-MM-DD'),\n        }) || {\n          min: undefined,\n          max: undefined,\n        },\n  )\n\n  const className = props.className ? `range ${props.className}` : `range`\n\n  const isValid = (\n    { min, max }: RangeValues,\n\n    type: ControlType = 'number',\n  ) => {\n    if (\n      min === null ||\n      min === undefined ||\n      max === null ||\n      max === undefined\n    ) {\n      setError(false)\n      return true\n    }\n\n    if (type === 'number') {\n      if (Number(min) > Number(max)) {\n        setError(true)\n        return false\n      }\n    }\n    if (Date.parse(min) > Date.parse(max)) {\n      setError(true)\n      return false\n    }\n    setError(false)\n    return true\n  }\n\n  const handleAppyChanges = (\n    values: RangeValues,\n    callBackFn: Function,\n    type: ControlType = 'number',\n  ) => {\n    if (isValid(values, type)) {\n      callBackFn(values)\n    }\n  }\n\n  return (\n    <div className={className} style={{ display: 'flex', flexWrap: 'wrap' }}>\n      <div style={{ marginRight: '10px' }}>\n        <input\n          key=\"range_min\"\n          type={props.type}\n          value={values.min}\n          onChange={({ target }: React.ChangeEvent<HTMLInputElement>) =>\n            setValues({ min: target.value, max: values.max })\n          }\n        />\n        <div>to</div>\n        <input\n          key=\"range_max\"\n          type={props.type}\n          value={values.max}\n          onChange={({ target }: React.ChangeEvent<HTMLInputElement>) =>\n            setValues({ min: values.min, max: target.value })\n          }\n        />\n      </div>\n      <button\n        className=\"btn btn-link SRC-noPadding\"\n        onClick={() => handleAppyChanges(values, props.onChange, props.type)}\n      >\n        Apply\n      </button>\n      {error && (\n        <div className=\"SRC-danger-color\">{props.errorText || errorText}</div>\n      )}\n    </div>\n  )\n}\n","import * as React from 'react'\n\nimport { Slider, Rail, Handles, Tracks, Ticks } from 'react-compound-slider'\nimport {\n  SliderItem,\n  GetHandleProps,\n  GetTrackProps,\n} from 'react-compound-slider'\nimport { RangeValues } from './Range'\nimport { useState } from 'react'\n\n\n/**************** RANGE SLIDER SUBCOMPONENTS *********************/\n\n/***  handles ***/\n\ninterface IHandleProps {\n  domain: number[]\n  handle: SliderItem\n  getHandleProps: GetHandleProps\n}\n\nexport const Handle: React.FunctionComponent<IHandleProps> = ({\n  domain: [min, max],\n  handle: { id, value, percent },\n  getHandleProps,\n}) => (\n  <div\n    role=\"slider\"\n    className=\"RangeSlider__handle\"\n    aria-valuemin={min}\n    aria-valuemax={max}\n    aria-valuenow={value}\n    style={{\n      left: `${percent}%`,\n    }}\n    {...getHandleProps(id)}\n  />\n)\n\n\n/***   track  ***/\ninterface ITrackProps {\n  source: SliderItem\n  target: SliderItem\n  getTrackProps: GetTrackProps\n}\n\nexport const Track: React.FunctionComponent<ITrackProps> = ({\n  source,\n  target,\n  getTrackProps,\n}) => (\n  <div\n    className=\"RangeSlider__track\"\n    style={{\n      left: `${source.percent}%`,\n      width: `${target.percent - source.percent}%`,\n    }}\n    {...getTrackProps()}\n  />\n)\n\n/***   tick  ***/\ninterface ITickProps {\n  key: string\n  tick: SliderItem\n  count: number\n  mode?: 'SHOWALL' | 'SHOWNONE' | 'SHOWMINMAX'\n}\n\nexport const Tick: React.FunctionComponent<ITickProps> = ({\n  tick,\n  count,\n  mode = 'SHOWMINMAX',\n}) => (\n  <div>\n    <div\n      className=\"RangeSlider__tick\"\n      style={{\n        left: `${tick.percent}%`,\n      }}\n    />\n    <div\n      className=\"RangeSlider__tickInner\"\n      style={{\n        marginLeft: `${-(100 / count) / 2}%`,\n        width: `${100 / count}%`,\n        left: `${tick.percent}%`,\n      }}\n    >\n      {(mode === 'SHOWALL' ||\n        (mode === 'SHOWMINMAX' &&\n          (tick.percent == 0 || tick.percent == 100))) &&\n        tick.value}\n    </div>\n  </div>\n)\n\n\n/*************  RANGE SLIDER COMPONENT ****************/\n\n\nexport type RangeSliderProps = {\n  domain: string[]\n  initialValues: RangeValues\n  step: number\n  doUpdateOnApply?: boolean\n  maxTickCount?: number\n  onChange: Function\n}\n\nexport type RangeSliderState = {\n  values: readonly number[]\n}\n\nfunction getInitialValues(initialValues: RangeValues, domain: string[]) {\n  const result = [\n    initialValues.min ? Number(initialValues.min) : Number(domain[0]),\n    initialValues.max ? Number(initialValues.max) : Number(domain[1]),\n  ]\n  return result\n}\n\nexport const RangeSlider: React.FunctionComponent<RangeSliderProps> = ({doUpdateOnApply=true, ...props} ) => {\n  const stringArrToNumArr = (inputArr: string[]) =>\n    inputArr.map(value => Number(value))\n\n  const [values, setValues] = useState<number[]>(() =>\n    getInitialValues(props.initialValues, props.domain),\n  )\n\n  const numDomain = stringArrToNumArr(props.domain)\n\n  const handleSliderChange = (\n    values: readonly number[],\n    callbackFn?: Function,\n  ) => {\n    setValues([...values])\n    if (callbackFn) {\n      callbackFn({ min: values[0], max: values[1] })\n    }\n  }\n\n  let ticksCount = numDomain[1] - numDomain[0]\n  if (props.maxTickCount && ticksCount > props.maxTickCount) {\n    ticksCount = props.maxTickCount\n  }\n\n  return (\n    <div className=\"RangeSlider\">\n      <div className=\"RangeSlider__values\">{values[0]} - {values[1]}</div>\n      <div\n        className={`RangeSlider__wrapper${\n          doUpdateOnApply ? '--flex' : '--block'\n        }`}\n      >\n        <Slider\n          mode={1}\n          step={props.step}\n          domain={stringArrToNumArr(props.domain)}\n          className=\"RangeSlider__slider\"\n          onChange={(values: readonly number[]) =>\n            handleSliderChange(\n              values,\n              doUpdateOnApply ? undefined : props.onChange,\n            )\n          }\n          values={getInitialValues(props.initialValues, props.domain)}\n        >\n          <Rail>\n            {({ getRailProps }) => (\n              <div className=\"RangeSlider__rail\" {...getRailProps()} />\n            )}\n          </Rail>\n          <Handles>\n            {({ handles, getHandleProps }) => (\n              <div className=\"slider-handles\">\n                {handles.map(handle => (\n                  <Handle\n                    key={handle.id + handle.percent}\n                    handle={handle}\n                    domain={stringArrToNumArr(props.domain)}\n                    getHandleProps={getHandleProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Handles>\n          <Tracks left={true} right={true}>\n            {({ tracks, getTrackProps }) => (\n              <div>\n                {tracks.map(({ id, source, target }) => (\n                  <Track\n                    key={id}\n                    source={source}\n                    target={target}\n                    getTrackProps={getTrackProps}\n                  />\n                ))}\n              </div>\n            )}\n          </Tracks>\n          <Ticks count={ticksCount}>\n            {({ ticks }) => (\n              <div>\n                {ticks.map(tick => (\n                  <Tick key={tick.id} tick={tick} count={ticks.length} />\n                ))}\n              </div>\n            )}\n          </Ticks>\n        </Slider>\n        {doUpdateOnApply && (\n          <button\n            className=\"RangeSlider__btnApply\"\n            onClick={() =>  props.onChange({ min: values[0], max: values[1] })}\n          >\n            Apply\n          </button>\n        )}\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Range, RangeValues } from '../Range'\nimport { RangeSlider } from '../RangeSlider'\nimport { FacetColumnResultRange } from '../../../utils/synapseTypes/Table/FacetColumnResult'\nimport { ColumnModel } from '../../../utils/synapseTypes/Table/ColumnModel'\nimport { VALUE_NOT_SET } from '../../../utils/SynapseConstants'\nimport { FacetFilterHeader } from './FacetFilterHeader'\nimport { RadioGroup } from '../RadioGroup'\nimport { useState } from 'react'\n\nexport enum RadioValuesEnum {\n  NOT_SET = 'org.sagebionetworks.UNDEFINED_NULL_NOTSET',\n  RANGE = 'RANGE',\n  ANY = '',\n}\n\nexport type RangeFacetFilterProps = {\n  facetResult: FacetColumnResultRange\n  columnModel: ColumnModel\n  onChange: Function\n  facetAliases: {} | undefined\n  collapsed?: boolean\n}\n\nexport type RangeFacetFilterState = {\n  facetResult: FacetColumnResultRange\n  columnModel: ColumnModel\n}\n\nexport const RangeFacetFilter: React.FunctionComponent<RangeFacetFilterProps> = ({\n  facetResult,\n  columnModel,\n  onChange,\n  facetAliases,\n  collapsed = false,\n}: RangeFacetFilterProps) => {\n  const [isCollapsed, setIsCollapsed] = useState<boolean>(collapsed)\n  const options = [\n    { label: 'Unannotated', value: RadioValuesEnum.NOT_SET },\n    { label: 'Any', value: RadioValuesEnum.ANY },\n    { label: 'Range', value: RadioValuesEnum.RANGE },\n  ]\n\n  let { columnMin, columnMax, selectedMin, selectedMax } = facetResult // the upper bound of the selected range\n\n  const hasAnyValue = !selectedMin && !selectedMax\n\n  selectedMin = selectedMin || columnMin\n  selectedMax = selectedMax || columnMax\n\n  const rangeType = columnModel.columnType === 'DOUBLE' ? 'number' : 'date'\n\n  const getRadioValue = (min: string, isAnyValue: boolean) => {\n    if (isAnyValue) {\n      return RadioValuesEnum.ANY\n    } else if (min === VALUE_NOT_SET) {\n      return RadioValuesEnum.NOT_SET\n    }\n    return RadioValuesEnum.RANGE\n  }\n\n  const handleRadioGroupChange = (\n    radioValue: RadioValuesEnum,\n    onChangeCallback: Function,\n  ) => {\n    setRadioValue(radioValue)\n\n    if (radioValue !== RadioValuesEnum.RANGE) {\n      onChangeCallback([radioValue, radioValue])\n    }\n  }\n\n  const [radioValue, setRadioValue] = useState(\n    getRadioValue(selectedMin, hasAnyValue),\n  )\n\n  const result = (\n    <div>\n      <FacetFilterHeader\n        isCollapsed={isCollapsed}\n        label={columnModel.name}\n        onClick={(isCollapsed: boolean) => setIsCollapsed(isCollapsed)}\n        facetAliases={facetAliases}\n      ></FacetFilterHeader>\n      <div style={{ display: isCollapsed ? 'none' : 'block' }}>\n        <RadioGroup\n          value={radioValue}\n          id=\"rangeSelector\"\n          options={options}\n          onChange={(radioValue: RadioValuesEnum) =>\n            handleRadioGroupChange(radioValue, onChange)\n          }\n        ></RadioGroup>\n        {radioValue === RadioValuesEnum.RANGE &&\n          (columnMin === columnMax ? (\n            <label>{columnMax}</label>\n          ) : (\n            <>\n              {columnModel.columnType === 'INTEGER' && (\n                <RangeSlider\n                  key=\"RangeSlider\"\n                  domain={[columnMin, columnMax]}\n                  initialValues={{ min: selectedMin, max: selectedMax }}\n                  step={1}\n                  doUpdateOnApply={true}\n                  onChange={(values: RangeValues) =>\n                    onChange([values.min, values.max])\n                  }\n                >\n                  ) {'>'}\n                </RangeSlider>\n              )}\n\n              {(columnModel.columnType === 'DATE' ||\n                columnModel.columnType === 'DOUBLE') && (\n                <Range\n                  key=\"Range\"\n                  initialValues={{\n                    min: selectedMin,\n                    max: selectedMax,\n                  }}\n                  type={rangeType}\n                  onChange={(values: RangeValues) =>\n                    onChange([values.min, values.max])\n                  }\n                ></Range>\n              )}\n            </>\n          ))}\n      </div>\n    </div>\n  )\n  return result\n}\n","import * as React from 'react'\n\nexport type RadioGroupProps = {\n  options: { label: string; value: string }[]\n  id: string\n  className?: string\n  value?: string\n  onChange: Function\n}\n\nexport const RadioGroup: React.FunctionComponent<RadioGroupProps> = (\n  props: RadioGroupProps,\n) => {\n\n  const className = props.className\n    ? `radiogroup ${props.className}`\n    : `radiogroup`\n\n  return (\n    <div className={className}>\n      {props.options.map(option => (\n        <div className=\"radio\" key={option.value}>\n          {props.value == option.value}\n          <label>\n            <span>\n              <input\n                type=\"radio\"\n                checked={props.value === option.value}\n                value={option.value}\n                onChange={({ target }: React.ChangeEvent<HTMLInputElement>) =>\n                  props.onChange(target.value, target.checked)\n                }\n              />\n              <span>{option.label}</span>\n            </span>\n          </label>\n        </div>\n      ))}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { RangeFacetFilter } from './RangeFacetFilter'\nimport { EnumFacetFilter } from './EnumFacetFilter'\n\nimport {\n  FacetColumnResultValues,\n  FacetColumnResult,\n  FacetColumnResultRange,\n} from '../../../utils/synapseTypes/Table/FacetColumnResult'\nimport {\n  FacetColumnValuesRequest,\n  FacetColumnRangeRequest,\n  FacetColumnRequest,\n} from '../../../utils/synapseTypes/Table/FacetColumnRequest'\nimport {\n  QueryBundleRequest,\n  QueryResultBundle,\n} from '../../../utils/synapseTypes'\n\nexport type QueryFilterProps = {\n  isLoading?: boolean\n  data?: QueryResultBundle\n  getLastQueryRequest?: Function\n  executeQueryRequest?: Function\n  token?: string\n  facetAliases?: {}\n}\n\nconst convertFacetToFacetColumnValuesRequest = (\n  facet: FacetColumnResultValues,\n): FacetColumnValuesRequest => ({\n  concreteType: 'org.sagebionetworks.repo.model.table.FacetColumnValuesRequest',\n  columnName: facet.columnName,\n  facetValues: facet.facetValues\n    .filter(facet => facet.isSelected === true)\n    .map(facet => facet.value),\n})\n\nconst convertFacetColumnRangeRequest = (\n  facet: FacetColumnResultRange,\n): FacetColumnRangeRequest => {\n  let result = {\n    concreteType:\n      'org.sagebionetworks.repo.model.table.FacetColumnRangeRequest',\n    columnName: facet.columnName, // The name of the faceted column\n  }\n\n  if (facet.columnMin) {\n    result = { ...result, ...{ min: facet.columnMin, max: facet.columnMax } }\n  }\n  return result\n}\n\nconst patchRequestFacets = (\n  changedFacet: FacetColumnRequest,\n  lastRequest?: QueryBundleRequest,\n): FacetColumnRequest[] => {\n  const selections = lastRequest?.query?.selectedFacets ?? []\n  const changedFacetIndex = selections.findIndex(\n    facet => facet.columnName === changedFacet.columnName,\n  )\n\n  const isEmptyValuesFacet =\n    changedFacet.concreteType ===\n      'org.sagebionetworks.repo.model.table.FacetColumnValuesRequest' &&\n    (!changedFacet.facetValues || !changedFacet.facetValues.length)\n  if (changedFacetIndex > -1) {\n    if (isEmptyValuesFacet) {\n      selections.splice(changedFacetIndex, 1)\n    } else {\n      selections[changedFacetIndex] = changedFacet\n    }\n  } else {\n    selections.push(changedFacet)\n  }\n  return selections\n}\n\nexport function applyChangesToValuesColumn(\n  lastRequest: QueryBundleRequest | undefined,\n  facet: FacetColumnResultValues,\n  onChangeFn: Function,\n  facetName?: string,\n  checked: boolean = false,\n) {\n  if (facetName) {\n    facet.facetValues.forEach(facetValue => {\n      if (facetValue.value === facetName) {\n        facetValue.isSelected = checked\n      }\n    })\n  } else {\n    // else clear all\n    facet.facetValues.forEach(facet => {\n      facet.isSelected = false\n    })\n  }\n\n  const changedFacet = convertFacetToFacetColumnValuesRequest(facet)\n  const result = patchRequestFacets(changedFacet, lastRequest)\n  onChangeFn(result)\n}\n\n// This handles multiple checkbox selection with delay refresh\nexport const applyMultipleChangesToValuesColumn = (\n  lastRequest: QueryBundleRequest | undefined,\n  facet: FacetColumnResultValues,\n  onChangeFn: Function,\n  facetNameMap?: {},\n) => {\n  const facetNames = (facetNameMap && Object.keys(facetNameMap)) || []\n  if (facetNames.length) {\n    facet.facetValues.forEach(facetValue => {\n      if (facetNames.includes(facetValue.value)) {\n        facetValue.isSelected = facetNameMap\n          ? facetNameMap[facetValue.value]\n          : false\n      }\n    })\n  }\n  const changedFacet = convertFacetToFacetColumnValuesRequest(facet)\n  const result = patchRequestFacets(changedFacet, lastRequest)\n  onChangeFn(result)\n}\n\n//rangeChanges\nexport const applyChangesToRangeColumn = (\n  lastRequest: QueryBundleRequest | undefined,\n  facet: FacetColumnResultRange,\n  onChangeFn: Function,\n  values: string[],\n) => {\n  facet.columnMin = values[0]\n  facet.columnMax = values[1]\n  const changedFacet = convertFacetColumnRangeRequest(facet)\n  const result = patchRequestFacets(changedFacet, lastRequest)\n  onChangeFn(result)\n}\n\nexport const QueryFilter: React.FunctionComponent<QueryFilterProps> = ({\n  data,\n  isLoading = false,\n  getLastQueryRequest,\n  executeQueryRequest,\n  token,\n  facetAliases,\n}: QueryFilterProps): JSX.Element => {\n  if (!data) {\n    return <></>\n  }\n  const columnModels = data.columnModels\n  const facets = data.facets as FacetColumnResult[]\n  const lastRequest = getLastQueryRequest ? getLastQueryRequest() : undefined\n\n  const applyChanges = (facets: FacetColumnRequest[]) => {\n    const queryRequest: QueryBundleRequest = getLastQueryRequest!()\n    queryRequest.query.selectedFacets = facets\n    queryRequest.query.offset = 0\n    executeQueryRequest!(queryRequest)\n  }\n\n  return (\n    <div className=\"QueryFilter\">\n      {isLoading && <div>Loading...</div>}\n      {!isLoading &&\n        facets.map((facet, index) => {\n          const columnModel = columnModels!.find(\n            model => model.name === facet.columnName,\n          )\n\n          const shouldStartCollapsed = index > 2\n\n          return (\n            <div className=\"QueryFilter__facet\" key={facet.columnName}>\n              {facet.facetType === 'enumeration' && columnModel && (\n                <EnumFacetFilter\n                  containerAs=\"Collapsible\"\n                  collapsed={shouldStartCollapsed}\n                  facetValues={(facet as FacetColumnResultValues).facetValues}\n                  columnModel={columnModel!}\n                  token={token}\n                  facetAliases={facetAliases}\n                  onChange={(facetNamesMap: {}) =>\n                    applyMultipleChangesToValuesColumn(\n                      lastRequest,\n                      facet as FacetColumnResultValues,\n                      applyChanges,\n                      facetNamesMap,\n                    )\n                  }\n                  onClear={() =>\n                    applyChangesToValuesColumn(\n                      lastRequest,\n                      facet as FacetColumnResultValues,\n                      applyChanges,\n                    )\n                  }\n                ></EnumFacetFilter>\n              )}\n              {facet.facetType === 'range' && columnModel && (\n                <RangeFacetFilter\n                  facetResult={facet as FacetColumnResultRange}\n                  columnModel={columnModel}\n                  facetAliases={facetAliases}\n                  collapsed={shouldStartCollapsed}\n                  onChange={(values: string[]) =>\n                    applyChangesToRangeColumn(\n                      lastRequest,\n                      facet as FacetColumnResultRange,\n                      applyChanges,\n                      values,\n                    )\n                  }\n                ></RangeFacetFilter>\n              )}\n            </div>\n          )\n        })}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { BarLoader } from 'react-spinners'\n\nconst loadingScreen = (\n  <div className=\"bar-loader\">\n    <BarLoader color=\"#878787\" loading={true} height={5}/>\n  </div>\n)\n\nexport default loadingScreen\n","// ALINA WIP TODO:\n// - bar chart\n// - filter\n// - show 9 labels on expanded facet\nimport * as React from 'react'\nimport Plotly from 'plotly.js-basic-dist'\nimport * as PlotlyTyped from 'plotly.js'\nimport createPlotlyComponent from 'react-plotly.js/factory'\nimport { SizeMe } from 'react-sizeme'\nimport { Dropdown } from 'react-bootstrap'\n\nimport { QueryWrapperChildProps } from '../../../containers/QueryWrapper'\nimport {\n  FacetColumnResultValues,\n  FacetColumnResultValueCount,\n  ColumnType,\n  QueryBundleRequest,\n} from '../../../utils/synapseTypes'\nimport getColorPallette from '../../../containers/ColorGradient'\n\nimport { unCamelCase } from '../../../utils/functions/unCamelCase'\nimport {\n  getStoredEntityHeaders,\n  getStoredUserProfiles,\n} from '../../../utils/functions/getDataFromFromStorage'\nimport { useEffect, useState } from 'react'\nimport { ElementWithTooltip } from '../../../containers/widgets/ElementWithTooltip'\nimport { EnumFacetFilter } from '../query-filter/EnumFacetFilter'\nimport {\n  applyMultipleChangesToValuesColumn,\n  applyChangesToValuesColumn,\n} from '../query-filter/QueryFilter'\nimport loadingScreen from '../../LoadingScreen'\n\nconst Plot = createPlotlyComponent(Plotly)\n\nexport type FacetNavPanelOwnProps = {\n  applyChangesToGraphSlice: Function\n  applyChangesToFacetFilter: Function\n  index: number\n  facetToPlot: FacetColumnResultValues\n  onHide: Function\n  onExpand?: Function\n  onCollapse?: Function\n  lastQueryRequest: QueryBundleRequest | undefined\n}\n\nconst maxLabelLength: number = 19\nconst maxLegendLength: number = 30\n\ntype FacetNavPanelProps = FacetNavPanelOwnProps & QueryWrapperChildProps\n\nexport type PlotType = 'PIE' | 'BAR'\n\nconst layout: Partial<PlotlyTyped.Layout> = {\n  showlegend: false,\n  annotations: [],\n  margin: { l: 0, r: 0, b: 0, t: 0, pad: 0 },\n  yaxis: {\n    visible: false,\n    showgrid: false,\n  },\n  xaxis: {\n    visible: false,\n    showgrid: false,\n  },\n}\n\n// https://github.com/plotly/plotly.js/blob/fa51e33d3e1f8ca0c029b3029f3d006a5205c8f3/src/lib/index.js#L1173\nconst formatPercent = (ratio: number, n: number) => {\n  n = n || 0\n  let str =\n    (Math.round(100 * ratio * Math.pow(10, n)) * Math.pow(0.1, n)).toFixed(n) +\n    '%'\n  for (let i = 0; i < n; i++) {\n    if (str.indexOf('.') !== -1) {\n      str = str.replace('0%', '%')\n      str = str.replace('.%', '%')\n    }\n  }\n  return str\n}\n\nexport type GraphData = {\n  data: PlotlyTyped.Data[]\n  labels: FacetWithLabel[]\n  colors: string[]\n}\n\nexport function truncate(str: string | undefined, n: number) {\n  if (!str) {\n    return str\n  }\n  const trimmedStr: string = str.trim()\n  return trimmedStr.length > n ? trimmedStr.substr(0, n - 1) + '…' : str\n}\n\nexport function extractPlotDataArray(\n  facetToPlot: FacetColumnResultValues,\n  columnType: ColumnType | undefined,\n  index: number,\n  plotType: PlotType,\n) {\n  const { colorPalette } = getColorPallette(\n    index,\n    facetToPlot.facetValues.length,\n  )\n\n  const getLabels = (\n    facetValues: FacetColumnResultValueCount[],\n    truncateFlag: boolean,\n    columnType?: ColumnType,\n  ) => {\n    return facetValues.map(facetValue => ({\n      label: getLabel(facetValue, truncateFlag, columnType),\n      count: facetValue.count,\n    }))\n  }\n\n  const getLabel = (\n    facetValue: FacetColumnResultValueCount,\n    truncateFlag: boolean,\n    columnType?: ColumnType,\n  ): string => {\n    if (facetValue.value === 'org.sagebionetworks.UNDEFINED_NULL_NOTSET') {\n      return 'Unannotated'\n    }\n\n    if (columnType === 'ENTITYID') {\n      const lookup = getStoredEntityHeaders()\n      let value = lookup.find(item => item.id === facetValue.value)?.name\n      if (truncateFlag) {\n        value = truncate(value, maxLabelLength)\n      }\n      return value || facetValue.value\n    }\n\n    if (columnType === 'USERID') {\n      const lookup = getStoredUserProfiles()\n      let value = lookup.find(item => item.ownerId === facetValue.value)\n        ?.userName\n      if (truncateFlag) {\n        value = truncate(value, maxLabelLength)\n      }\n      return value || facetValue.value\n    }\n    const value = facetValue.value\n    return truncateFlag ? truncate(value, maxLabelLength)! : value\n  }\n\n  const labels = getLabels(facetToPlot.facetValues, false, columnType)\n  const text = getLabels(facetToPlot.facetValues, true, columnType).map(\n    el => el.label,\n  )\n\n  const anyFacetsSelected = facetToPlot.facetValues.some(value => value.isSelected)\n\n  const selectionAwareColorPalette = anyFacetsSelected ? facetToPlot.facetValues.map((facetValue, index) =>\n    facetValue.isSelected ? colorPalette[index] : colorPalette[index].replace('rgb(', 'rgba(').replace(')', ', 0.25)'),\n  ) : colorPalette\n  const singleChartData: PlotlyTyped.Data = {\n    values:\n      plotType === 'PIE'\n        ? facetToPlot.facetValues.map(facet => facet.count)\n        : undefined,\n    labels: labels.map(el => el.label),\n    text,\n    x:\n      plotType === 'BAR'\n        ? facetToPlot.facetValues.map(facet =>\n            getLabel(facet, false, columnType),\n          )\n        : undefined,\n    y:\n      plotType === 'BAR'\n        ? facetToPlot.facetValues.map(facet => facet.count)\n        : undefined,\n    // @ts-ignore\n    facetEnumerationValues: facetToPlot.facetValues.map(\n      facetValue => facetValue.value,\n    ),\n    name: facetToPlot.columnName,\n    hovertemplate:\n      plotType === 'PIE'\n        ? '<b>%{text}</b><br>%{value} (%{percent})<br><extra></extra>'\n        : '<b>%{text}: </b><br>%{value} <br><extra></extra>',\n    textinfo: 'none',\n    type: plotType === 'PIE' ? 'pie' : 'bar',\n    pull:\n      plotType === 'PIE'\n        ? facetToPlot.facetValues.map(facetValue =>\n            facetValue.isSelected ? 0.10 : 0,\n          )\n        : undefined,\n    marker: {\n      colors: plotType === 'PIE' ? selectionAwareColorPalette : undefined,\n      color: plotType === 'BAR' ? selectionAwareColorPalette : undefined,\n    },\n  }\n\n  const result = {\n    data: [singleChartData],\n    labels,\n    colors:\n      plotType === 'PIE'\n        ? ((singleChartData.marker as any)?.colors as string[])\n        : (singleChartData.marker?.color as string[]),    \n  }\n  return result\n}\n\nconst applyFacetFilter = (\n  event: PlotlyTyped.PlotMouseEvent,\n  allFacetValues: FacetColumnResultValues,\n  callbackApplyFn: Function,\n) => {\n  if (event.points && event.points[0]) {\n    const plotPointData: any = event.points[0]\n    const facetValueClickedValue =\n      plotPointData.data.facetEnumerationValues[plotPointData.pointNumber]\n    const facetValueClicked = allFacetValues.facetValues.find(\n      facet => facet.value === facetValueClickedValue,\n    )\n    callbackApplyFn(\n      allFacetValues,\n      facetValueClicked,\n      !facetValueClicked!.isSelected,\n    )\n  }\n}\n\nexport function getPlotStyle (\n  parentWidth: number | null,\n  plotType: PlotType,\n  maxHeight: number,\n): { width: string; height: string } {\n  const quotient = plotType === 'BAR' ? 0.8 : 0.6\n  const width = parentWidth ? parentWidth * quotient : 200\n  let height = plotType === 'PIE' ? width : width / 3\n  // max height of .FacetNav row col* is 200px, so the effective plot height max is around 150 unless it's expanded\n  if (height > maxHeight) {\n    height = maxHeight\n  }\n\n  return {\n    width: `${width}px`,\n    height: `${height}px`,\n  }\n}\n\nexport type FacetWithLabel = {\n  label: string\n  count: number\n}\n\nexport function renderLegend (\n  labels: FacetWithLabel[] | undefined,\n  colors: string[] = [],\n  isExpanded: boolean,\n): JSX.Element {\n  if (!labels) {\n    return <></>\n  }\n  const numLegendItems = isExpanded\n    ? Math.min(labels.length, 9)\n    : Math.min(labels.length, 3)\n  if (numLegendItems === 0) {\n    return <></>\n  }\n  const totalCount = labels.reduce(\n    (curValue, curFacet) => curValue + curFacet.count,\n    0,\n  )\n  return (\n    <div\n      className={`FacetNavPanel__body__legend${isExpanded ? '--expanded' : ''}`}\n    >\n      {labels.slice(0, numLegendItems).map((facetValue, index) => {\n        const percent = formatPercent(facetValue.count / totalCount, 1)\n        const label = `(${percent}) ${facetValue.label}`\n        const labelDisplay = truncate(label, maxLegendLength)\n        return (\n          <ElementWithTooltip\n            idForToolTip={facetValue.label}\n            tooltipText={facetValue.label}\n            key={facetValue.label}\n          >\n            <div\n              className=\"FacetNavPanel__body__legend__row\"\n              key={`legendLabel_${index}`}\n              style={{ cursor: 'default' }}\n            >\n              <div style={{ backgroundColor: colors[index] }}></div>\n              <label>{labelDisplay}</label>\n            </div>\n          </ElementWithTooltip>\n        )\n      })}\n    </div>\n  )\n}\n\nconst getClassNameForPlotDiv = (isExpanded: boolean, plotType: PlotType) => {\n  if (!isExpanded) {\n    return 'FacetNavPanel__body__plot'\n  }\n  return `FacetNavPanel__body__plot--expanded${\n    plotType === 'BAR' ? 'Bar' : 'Pie'\n  }`\n}\n\nconst FacetNavPanel: React.FunctionComponent<FacetNavPanelProps> = ({\n  onHide,\n  onExpand,\n  onCollapse,\n  applyChangesToFacetFilter,\n  applyChangesToGraphSlice,\n  isLoadingNewData,\n  index,\n  facetToPlot,\n  data,\n  isLoading,\n  facetAliases,\n  token,\n  lastQueryRequest,\n}: FacetNavPanelProps): JSX.Element => {\n  const [plotData, setPlotData] = useState<GraphData>()\n  const [isExpanded, setIsExpanded] = useState(false)\n  const [plotType, setPlotType] = useState<PlotType>('PIE')\n\n  const getColumnType = (): ColumnType | undefined =>\n    data?.columnModels?.find(\n      columnModel => columnModel.name === facetToPlot.columnName,\n    )?.columnType as ColumnType\n\n  useEffect(() => {\n    if (!facetToPlot) {\n      return\n    } else {\n      const plotData = extractPlotDataArray(\n        facetToPlot,\n        getColumnType(),\n        index,\n        'PIE',\n      )\n      setPlotData(plotData)\n    }\n  }, [facetToPlot, data, index])\n\n  useEffect(() => {\n    setIsExpanded(onCollapse !== undefined)\n  }, [onCollapse])\n\n  const changePlotType = (plotType: PlotType) => {\n    if (plotType === 'BAR') {\n      setPlotData(\n        extractPlotDataArray(facetToPlot, getColumnType(), index, 'BAR'),\n      )\n    } else {\n      setPlotData(\n        extractPlotDataArray(facetToPlot, getColumnType(), index, 'PIE'),\n      )\n    }\n    setPlotType(plotType)\n  }\n\n  /* rendering functions */\n  const renderChartSelectionToggle = (): JSX.Element => (\n    <Dropdown>\n      <ElementWithTooltip\n        idForToolTip=\"toggleChart\"\n        tooltipText=\"Toggle chart type\"\n        key=\"toggleChart\"\n        className=\"SRC-primary-color\"\n        darkTheme={true}\n        icon={\"chart\"}\n      />\n      <Dropdown.Menu className=\"chart-tools\">\n        <Dropdown.Item as=\"button\" onClick={() => changePlotType('BAR')}>\n          Bar Chart\n        </Dropdown.Item>\n        <Dropdown.Item as=\"button\" onClick={() => changePlotType('PIE')}>\n          Pie Chart\n        </Dropdown.Item>\n      </Dropdown.Menu>\n    </Dropdown>\n  )\n\n  if (isLoadingNewData || !facetToPlot) {\n    return (\n      <div className=\"SRC-loadingContainer SRC-centerContentColumn\">\n        {loadingScreen}\n      </div>\n    )\n  } else {\n    return (\n      <div className={`FacetNavPanel${isExpanded ? '--expanded' : ''}`}>\n        <div className=\"FacetNavPanel__title\">\n          <span className=\"FacetNavPanel__title__name\">\n            {unCamelCase(facetToPlot.columnName, facetAliases)}\n          </span>\n          {isLoading && (\n            <span style={{ marginLeft: '2px' }} className={'spinner'} />\n          )}\n          <div className=\"FacetNavPanel__title__tools\">\n            {isExpanded && renderChartSelectionToggle()}\n            <EnumFacetFilter\n              facetValues={facetToPlot.facetValues}\n              columnModel={\n                data?.columnModels!.find(\n                  el => el.name === facetToPlot.columnName,\n                )!\n              }\n              token={token}\n              facetAliases={facetAliases}\n              onChange={(facetNamesMap: {}) => {\n                applyMultipleChangesToValuesColumn(\n                  lastQueryRequest,\n                  facetToPlot,\n                  applyChangesToFacetFilter,\n                  facetNamesMap,\n                )\n              }}\n              onClear={() => {\n                applyChangesToValuesColumn(\n                  lastQueryRequest,\n                  facetToPlot,\n                  applyChangesToFacetFilter,\n                )\n              }}\n              containerAs=\"Dropdown\"\n            />\n            {!isExpanded && (\n              <ElementWithTooltip\n                idForToolTip=\"expandGraph\"\n                tooltipText=\"Expand to large graph\"\n                key=\"expandGraph\"\n                callbackFn={() => onExpand!(index)}\n                className=\"SRC-primary-color\"\n                darkTheme={true}\n                icon={\"expand\"}\n              />\n            )}\n            {isExpanded && (\n              <ElementWithTooltip\n                idForToolTip=\"collapseGraph\"\n                tooltipText=\"Collapse to small graph\"\n                key=\"collapseGraph\"\n                callbackFn={() => onCollapse!(index)}\n                className=\"SRC-primary-color\"\n                darkTheme={true}\n                icon={\"collapse\"}\n              />\n            )}\n            <ElementWithTooltip\n              idForToolTip=\"hideGraph\"\n              tooltipText=\"Hide graph under Show More\"\n              key=\"hideGraph\"\n              callbackFn={() => onHide(index)}\n              className=\"SRC-primary-color\"\n              darkTheme={true}\n              icon={\"close\"}\n            />\n          </div>\n        </div>\n\n        <div className={`FacetNavPanel__body${isExpanded ? '--expanded' : ''}`}>\n          <SizeMe monitorHeight>\n            {({ size }) => (\n              <div className={getClassNameForPlotDiv(isExpanded, plotType)}>\n                <Plot\n                  key={`${facetToPlot.columnName}-${size.width}`}\n                  layout={layout}\n                  data={plotData?.data ?? []}\n                  style={getPlotStyle(\n                    size.width,\n                    plotType,\n                    isExpanded ? 300 : 150,\n                  )}\n                  config={{ displayModeBar: false }}\n                  onClick={evt =>\n                    applyFacetFilter(evt, facetToPlot, applyChangesToGraphSlice)\n                  }\n                ></Plot>\n              </div>\n            )}\n          </SizeMe>\n          {renderLegend(plotData?.labels, plotData?.colors, isExpanded)}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FacetNavPanel\n","import * as React from 'react'\nimport FacetNavPanel from './FacetNavPanel'\nimport { QueryWrapperChildProps } from '../../QueryWrapper'\nimport {\n  FacetColumnResultValues,\n  FacetColumnRequest,\n  FacetColumnResult,\n  QueryResultBundle,\n  FacetColumnResultValueCount,\n} from '../../../utils/synapseTypes'\nimport { useState, useEffect } from 'react'\nimport TotalQueryResults from '../../../containers/TotalQueryResults'\nimport { applyChangesToValuesColumn } from '../query-filter/QueryFilter'\n\nexport type FacetNavOwnProps = {\n  facetsToPlot?: string[]\n  showNotch?: boolean\n}\n\ntype UiFacetState = {\n  name: string\n  isHidden: boolean\n  isExpanded: boolean\n  index?: number\n}\n\nconst DEFAULT_VISIBLE_FACETS = 3\n\n/*\nTODO: This component has a few bugs when its props are updated with new data, this should be handled\nat some point. As of the moment the portal doesn't have a case when the props will update,\nit will always mount this component.\n*/\nexport type FacetNavProps = FacetNavOwnProps & QueryWrapperChildProps\n\ntype ShowMoreState = 'MORE' | 'LESS' | 'NONE'\n\nexport function getFacets (\n  data: QueryResultBundle | undefined,\n  facetsToPlot?: string[],\n): FacetColumnResult[] {\n  const result =\n    data?.facets?.filter(\n      item =>\n        item.facetType === 'enumeration' &&\n        (!facetsToPlot?.length || facetsToPlot.indexOf(item.columnName) > -1),\n    ) ?? []\n  return result\n}\n\nconst FacetNav: React.FunctionComponent<FacetNavProps> = ({\n  data,\n  getLastQueryRequest,\n  isLoadingNewData,\n  isLoading,\n  executeQueryRequest,\n  token,\n  asyncJobStatus,\n  topLevelControlsState,\n  facetsToPlot,\n  getInitQueryRequest,\n  updateParentState,\n  facetAliases,\n  showNotch = false,\n  error,\n}: FacetNavProps): JSX.Element => {\n  const [facetUiStateArray, setFacetUiStateArray] = useState<UiFacetState[]>([])\n  const [isFirstTime, setIsFirstTime] = useState(true)\n  const { showFacetVisualization } = topLevelControlsState!\n\n  const lastQueryRequest = getLastQueryRequest?.()\n\n  useEffect(() => {\n    const result = getFacets(data, facetsToPlot)\n    if (result.length === 0) {\n      return\n    }\n    if (isFirstTime) {\n      setFacetUiStateArray(\n        result.map((item, index) => ({\n          name: item.columnName,\n          isHidden: index >= DEFAULT_VISIBLE_FACETS,\n          isExpanded: false,\n        })),\n      )\n      setIsFirstTime(false)\n    }\n  }, [data, isFirstTime])\n\n  // when 'show more/less' is clicked\n  const onShowMoreClick = (shouldShowMore: boolean) => {\n    setFacetUiStateArray(facetUiStateArray => {\n      return facetUiStateArray.map((item, index) => {\n        if (shouldShowMore) {\n          // show everything\n          return { ...item, isHidden: false }\n        }\n        // otherwise hide everything except the first three items\n        return { ...item, isHidden: index >= DEFAULT_VISIBLE_FACETS }\n      })\n    })\n  }\n\n  // what needs to happen after the filters are adjusted from the plot\n  const applyChangesFromQueryFilter = (facets: FacetColumnRequest[]) => {\n    lastQueryRequest!.query.selectedFacets = facets\n    lastQueryRequest!.query.offset = 0\n    executeQueryRequest!(lastQueryRequest!)\n  }\n\n  // don't show expanded or hidden facets\n  const isFacetHiddenInGrid = (columnName: string) => {\n    const itemHidden = facetUiStateArray.find(\n      item =>\n        item.name === columnName &&\n        (item.isHidden === true || item.isExpanded === true),\n    )\n    const result = itemHidden !== undefined\n    return result\n  }\n\n  const getShowMoreState = (): ShowMoreState => {\n    if (facetUiStateArray.length <= DEFAULT_VISIBLE_FACETS) {\n      return 'NONE'\n    }\n    if (\n      // if at least one item is hidden\n      facetUiStateArray.find(item => item.isHidden === true)\n    ) {\n      return 'MORE'\n    }\n    return 'LESS'\n  }\n\n  // hides expanded facet under 'show more'\n  const hideExpandedFacet = (facet: FacetColumnResult) => {\n    setFacetUiStateArray(facetUiStateArray =>\n      facetUiStateArray.map(item =>\n        item.name === facet.columnName\n          ? { ...item, isExpanded: false, isHidden: true }\n          : item,\n      ),\n    )\n  }\n\n  //expands to collapses a facet\n  const toggleExpandFacet = (facet: FacetColumnResult, doExpand: boolean) => {\n    setUiPropertyForFacet(facet.columnName, 'isExpanded', doExpand)\n  }\n\n  // hides facet graph\n  const hideFacetInGrid = (columnName: string) => {\n    setUiPropertyForFacet(columnName, 'isHidden', true)\n  }\n\n  const setUiPropertyForFacet = (\n    columnName: string,\n    propName: 'isHidden' | 'isExpanded',\n    value: boolean,\n  ) => {\n    setFacetUiStateArray(facetUiStateArray =>\n      facetUiStateArray.map(item =>\n        item.name === columnName ? { ...item, [propName]: value } : item,\n      ),\n    )\n  }\n\n  const hasSelectedFacets =\n    lastQueryRequest?.query.selectedFacets !== undefined &&\n    lastQueryRequest.query.selectedFacets.length > 0\n\n  const expandedFacets = getFacets(data, facetsToPlot).filter(el => {\n    return facetUiStateArray.find(uiState => {\n      return uiState.name === el.columnName\n    })?.isExpanded\n  })\n  const restOfFacets = getFacets(data, facetsToPlot).filter(el => {\n    return !facetUiStateArray.find(uiState => uiState.name === el.columnName)\n      ?.isExpanded\n  })\n\n  const colorTracker = getFacets(data, facetsToPlot).map((el, index) => {\n    return {\n      columnName: el.columnName,\n      colorIndex: index,\n    }\n  })\n  const showMoreState = getShowMoreState()\n\n  if (error) {\n    return <></>\n  } else if (isLoadingNewData) {\n    return (\n      <div className=\"SRC-loadingContainer SRC-centerContentColumn\">\n        {asyncJobStatus?.progressMessage && (\n          <div> <span className=\"spinner\" /> {asyncJobStatus.progressMessage} </div>\n        )}\n      </div>\n    )\n  } else {\n    return (\n      <>\n        <div className={`FacetNav ${showFacetVisualization ? '' : 'hidden'}`}>\n          <div className=\"FacetNav__expanded\">\n            {expandedFacets.map((facet, index) => (\n              <div key={facet.columnName}>\n                <FacetNavPanel\n                  data={data}\n                  index={\n                    colorTracker.find(el => el.columnName === facet.columnName)\n                      ?.colorIndex!\n                  }\n                  onHide={() => hideExpandedFacet(facet)}\n                  onCollapse={() => toggleExpandFacet(facet, false)}\n                  facetToPlot={facet as FacetColumnResultValues}\n                  applyChangesToFacetFilter={applyChangesFromQueryFilter}\n                  applyChangesToGraphSlice={(\n                    facet: FacetColumnResultValues,\n                    value: FacetColumnResultValueCount | undefined,\n                    isSelected: boolean,\n                  ) =>\n                    applyChangesToValuesColumn(\n                      lastQueryRequest,\n                      facet,\n                      applyChangesFromQueryFilter,\n                      value?.value,\n                      isSelected,\n                    )\n                  }\n                  facetAliases={facetAliases}\n                  lastQueryRequest={lastQueryRequest}\n                ></FacetNavPanel>\n              </div>\n            ))}\n          </div>\n          <div className=\"FacetNav__row clearfix\">\n            {restOfFacets.map((facet, index) => (\n              <div\n                className=\"col-sm-12 col-md-4\"\n                style={{\n                  display: isFacetHiddenInGrid(facet.columnName)\n                    ? 'none'\n                    : 'block',\n                }}\n                key={facet.columnName}\n              >\n                <FacetNavPanel\n                  isLoading={isLoading}\n                  index={\n                    colorTracker.find(el => el.columnName === facet.columnName)\n                      ?.colorIndex!\n                  }\n                  data={data}\n                  onHide={() => hideFacetInGrid(facet.columnName)}\n                  onExpand={() => toggleExpandFacet(facet, true)}\n                  facetToPlot={facet as FacetColumnResultValues}\n                  lastQueryRequest={lastQueryRequest}\n                  /*\n                    TODO: Simplify the nested functions below, all the logic should be contained\n                    in the EnumFacetFilter component.\n                  */\n                  applyChangesToFacetFilter={applyChangesFromQueryFilter}\n                  applyChangesToGraphSlice={(\n                    facet: FacetColumnResultValues,\n                    value: FacetColumnResultValueCount | undefined,\n                    isSelected: boolean,\n                  ) =>\n                    applyChangesToValuesColumn(\n                      lastQueryRequest,\n                      facet,\n                      applyChangesFromQueryFilter,\n                      value?.value,\n                      isSelected,\n                    )\n                  }\n                  facetAliases={facetAliases}\n                ></FacetNavPanel>\n              </div>\n            ))}\n          </div>\n          <div className=\"FacetNav__showMoreContainer\">\n            {showMoreState !== 'NONE' && (\n              <button\n                className=\"btn btn-default FacetNav__showMore\"\n                onClick={() => onShowMoreClick(showMoreState === 'MORE')}\n              >\n                {showMoreState === 'LESS'\n                  ? 'Hide Optional Graphs'\n                  : 'Show All Graphs'}\n              </button>\n            )}\n          </div>\n        </div>\n        <TotalQueryResults\n          isLoading={isLoading!}\n          executeQueryRequest={executeQueryRequest!}\n          lastQueryRequest={getLastQueryRequest?.()!}\n          getInitQueryRequest={getInitQueryRequest}\n          token={token}\n          unitDescription={hasSelectedFacets ? 'results via:' : 'results'}\n          frontText={'Showing'}\n          showNotch={showNotch}\n        />\n      </>\n    )\n  }\n}\n\nexport default FacetNav\n","import React, { useState, useEffect } from 'react'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faFile, faDatabase, faClock } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { testDownloadSpeed } from '../../utils/functions/testDownloadSpeed'\nimport { calculateFriendlyFileSize } from '../../utils/functions/calculateFriendlyFileSize'\nimport ReactTooltip from 'react-tooltip'\nimport moment from 'moment'\nimport { TOOLTIP_DELAY_SHOW } from '../table/SynapseTableConstants'\n\nlibrary.add(faFile)\nlibrary.add(faDatabase)\nlibrary.add(faClock)\n\nexport type DownloadDetailsProps = {\n  numFiles: number\n  numBytes: number\n  token: string | undefined\n}\n\ntype State = {\n  isLoading: boolean\n  downloadSpeed: number\n}\n\nexport default function DownloadDetails(props: DownloadDetailsProps) {\n  const [state, setState] = useState<State>({\n    isLoading: true,\n    downloadSpeed: 0,\n  })\n  const { isLoading, downloadSpeed } = state\n  const { token, numFiles, numBytes } = props\n\n  useEffect(() => {\n    if (token) {\n      testDownloadSpeed(token).then(speed => {\n        setState({\n          isLoading: false,\n          downloadSpeed: speed,\n        })\n      })\n    }\n  }, [token])\n\n  const timeEstimateInSeconds =\n    isLoading || downloadSpeed === 0 ? 0 : numBytes / downloadSpeed\n  const friendlyTime =\n    timeEstimateInSeconds === 0\n      ? ''\n      : moment.duration(timeEstimateInSeconds, 'seconds').humanize()\n  const numBytesTooltipId = 'num_bytes_id'\n  const friendlyTimeTooltipId = 'friendly_time_id'\n  const isInactive = numFiles === 0 || timeEstimateInSeconds === 0\n  const iconClassName = isInactive ? 'SRC-inactive' : 'SRC-primary-text-color'\n  return (\n    <span className=\"download-details-container\">\n      <span>\n        <FontAwesomeIcon className={iconClassName} icon=\"file\" />\n        {!isInactive && <> {numFiles} &nbsp; files </>}\n      </span>\n      <span\n        data-for={numBytesTooltipId}\n        data-tip=\"This is the total size of all files. Zipped package(s) will likely be smaller.\"\n      >\n        <ReactTooltip\n          delayShow={TOOLTIP_DELAY_SHOW}\n          place=\"top\"\n          type=\"dark\"\n          effect=\"solid\"\n          id={numBytesTooltipId}\n        />\n        <FontAwesomeIcon className={iconClassName} icon=\"database\" />\n        {calculateFriendlyFileSize(numBytes)}\n      </span>\n      <span\n        data-for={friendlyTimeTooltipId}\n        data-tip=\"This is an estimate of how long package download will take.\"\n      >\n        <ReactTooltip\n          delayShow={TOOLTIP_DELAY_SHOW}\n          place=\"top\"\n          type=\"dark\"\n          effect=\"solid\"\n          id={friendlyTimeTooltipId}\n        />\n        <FontAwesomeIcon className={iconClassName} icon=\"clock\" />\n        {isLoading && numFiles > 0 && <span className=\"spinner\" />}\n        {!isLoading && friendlyTime}\n      </span>\n    </span>\n  )\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faCheck,\n  faDownload,\n  faFolder,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport React, { useState } from 'react'\nimport * as ReactBoostrap from 'react-bootstrap'\nimport {\n  getBulkFiles,\n  getDownloadOrder,\n  getFileHandleByIdURL,\n} from '../../utils/SynapseClient'\nimport {\n  BulkFileDownloadRequest,\n  BulkFileDownloadResponse,\n  FileDownloadStatus,\n  ZipFileFormat,\n} from '../../utils/synapseTypes/'\n\nlibrary.add(faCheck)\nlibrary.add(faDownload)\nlibrary.add(faFolder)\n\nexport type CreatePackageProps = {\n  token?: string\n  children?: JSX.Element\n  updateDownloadList: Function\n}\n\ntype Alert = {\n  message: string\n  variant: ReactBoostrap.AlertProps['variant']\n  className: string | undefined\n}\n\nexport const TEMPLATE_DOWNLOAD_MESSAGE =\n  'files were downloaded and removed from the list.'\nexport const TEMPLATE_ERROR_FILE_NAME =\n  'Please provide a package file name and try again.'\n\nexport const CreatePackage = (props: CreatePackageProps) => {\n  const [isLoading, setIsLoading] = useState(false)\n  const [fileName, setZipFileName] = useState('')\n  const [alert, setAlert] = useState<Alert>({\n    message: '',\n    className: undefined,\n    variant: undefined,\n  })\n  const [bulkFileDownloadResponse, setBulkFileDownloadResponse] = useState<\n    BulkFileDownloadResponse | undefined\n  >(undefined)\n  const { token, children, updateDownloadList } = props\n\n  const createPackageHandler = async (event: React.SyntheticEvent) => {\n    event.preventDefault()\n    if (!fileName) {\n      setAlert({\n        message: TEMPLATE_ERROR_FILE_NAME,\n        variant: 'danger',\n        className: undefined,\n      })\n      return\n    }\n    setAlert({ message: '', variant: undefined, className: undefined })\n    setIsLoading(true)\n    try {\n      const fileNameWithZipExtension = `${fileName}.zip`\n      const downloadOrder = await getDownloadOrder(\n        fileNameWithZipExtension,\n        token,\n      )\n      const bulkFileDownloadRequest: BulkFileDownloadRequest = {\n        concreteType:\n          'org.sagebionetworks.repo.model.file.BulkFileDownloadRequest',\n        requestedFiles: downloadOrder.files,\n        zipFileName: fileNameWithZipExtension,\n        zipFileFormat: ZipFileFormat.Flat,\n      }\n      const bulkFileDownloadResponse: BulkFileDownloadResponse = await getBulkFiles(\n        bulkFileDownloadRequest,\n        token,\n      )\n      setBulkFileDownloadResponse(bulkFileDownloadResponse)\n    } catch (err) {\n      setAlert({\n        message: err.reason,\n        variant: 'danger',\n        className: undefined,\n      })\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const downloadPackageHandler = async () => {\n    const { resultZipFileHandleId, fileSummary } = bulkFileDownloadResponse!\n    try {\n      const numfilesDownloaded = fileSummary.filter(\n        el => el.status === FileDownloadStatus.SUCCESS,\n      ).length\n      setAlert({\n        message: `${numfilesDownloaded} ${TEMPLATE_DOWNLOAD_MESSAGE}`,\n        className: 'SRC-primary-background-color SRC-whiteText',\n        variant: undefined,\n      })\n      const url = await getFileHandleByIdURL(resultZipFileHandleId, token)\n      window.location.href = url\n      updateDownloadList()\n      setBulkFileDownloadResponse(undefined)\n    } catch (err) {\n      console.error('Err on getFileHandleByIdURL = ', err)\n    }\n  }\n\n  const onChange = (event: React.SyntheticEvent<HTMLInputElement>) => {\n    setZipFileName(event.currentTarget.value)\n  }\n\n  return (\n    <>\n      {alert.message && (\n        <ReactBoostrap.Alert\n          transition={false}\n          variant={alert.variant}\n          show={true}\n          className={alert.className}\n        >\n          {alert.message}\n        </ReactBoostrap.Alert>\n      )}\n      <div className=\"create-package-container\">\n        {children}\n        <div>\n          {isLoading && (\n            <span className=\"SRC-centerContentInline\">\n              <span className=\"spinner\" />\n              <span style={{ marginLeft: 5 }} className=\"create-package-text\">\n                Creating package...\n              </span>\n            </span>\n          )}\n          <div className=\"SRC-split\">\n            {!isLoading && !bulkFileDownloadResponse && (\n              <>\n                <form onSubmit={createPackageHandler}>\n                  <input\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"PackageFileName\"\n                  ></input>\n                  <span className=\"zip-extension SRC-boldText\">.zip</span>\n                </form>\n                <button\n                  className=\"SRC-standard-button-shape SRC-primary-button action-button\"\n                  onClick={createPackageHandler}\n                  type=\"button\"\n                >\n                  <FontAwesomeIcon icon=\"folder\" />\n                  Create Package\n                </button>\n              </>\n            )}\n            {bulkFileDownloadResponse && (\n              <>\n                <div className=\"package-created\">\n                  <FontAwesomeIcon icon=\"check\" color=\"green\" />\n                  <span className=\"create-package-text\">\n                    Package created! Ready for download.\n                  </span>\n                </div>\n                <button\n                  className=\"SRC-standard-button-shape SRC-primary-button action-button\"\n                  onClick={downloadPackageHandler}\n                >\n                  <FontAwesomeIcon icon=\"download\" color=\"white\" />\n                  Download Package\n                </button>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTrash } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport moment from 'moment'\nimport React, { useEffect, useState, useCallback } from 'react'\nimport * as ReactBootstrap from 'react-bootstrap'\nimport { calculateFriendlyFileSize } from '../../utils/functions/calculateFriendlyFileSize'\nimport useGetInfoFromIds from '../../utils/hooks/useGetInfoFromIds'\nimport {\n  deleteDownloadList,\n  deleteDownloadListFiles,\n  getDownloadList,\n  getEntityHeader,\n  getFiles,\n} from '../../utils/SynapseClient'\nimport {\n  BatchFileRequest,\n  BatchFileResult,\n  DownloadList,\n  EntityHeader,\n  FileHandleAssociateType,\n  FileHandleAssociation,\n  PaginatedResults,\n  Reference,\n  UserProfile,\n} from '../../utils/synapseTypes'\nimport HasAccess, {\n  getDownloadTypeForFileHandle,\n  FileHandleDownloadTypeEnum,\n} from '../HasAccess'\nimport UserCard from '../UserCard'\nimport { CreatePackage } from './CreatePackage'\nimport DownloadDetails from './DownloadDetails'\nimport AccessRequirementList, {\n  AccessRequirementListProps,\n} from '../access_requirement_list/AccessRequirementList'\n\nimport {\n  faSortAmountDown,\n  faSortAmountUp,\n} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faTrash)\n\ntype DownloadListTableData = {\n  references?: PaginatedResults<EntityHeader>\n  batchFileResult?: BatchFileResult\n  downloadList?: DownloadList\n}\n\ntype LoadingState = boolean\nexport type DownloadListTableProps = {\n  token?: string\n  listUpdatedCallback?: VoidFunction\n  forceSamePage?: boolean\n  renderAsModal?: boolean\n  onHide?: Function\n}\n\nexport const TESTING_TRASH_BTN_CLASS = 'TESTING_TRASH_BTN_CLASS'\nexport const TESTING_CLEAR_BTN_CLASS = 'TESTING_CLEAR_BTN_CLASS'\n\nexport default function DownloadListTable(props: DownloadListTableProps) {\n  // https://reactjs.org/docs/hooks-faq.html#should-i-use-one-or-many-state-variables\n  const [data, setData] = useState<DownloadListTableData>({\n    references: undefined,\n    batchFileResult: undefined,\n    downloadList: undefined,\n  })\n\n  type SortedColumn = {\n    column: string\n    isDescending: boolean\n  }\n\n  const [sortedColumn, setSortedColumn] = useState<SortedColumn>({\n    column: '',\n    isDescending: false,\n  })\n\n  const [arPropsFromHasAccess, set_arPropsFromHasAccess] = useState<\n    AccessRequirementListProps | undefined\n  >()\n  // https://reactjs.org/docs/hooks-faq.html#should-i-use-one-or-many-state-variables\n  const [isLoading, setIsLoading] = useState<LoadingState>(true)\n  const [fileBeingDeleted, setFileBeingDeleted] = useState<string>('')\n  const { token } = props\n  const {\n    forceSamePage = false,\n    renderAsModal = false,\n    onHide,\n    listUpdatedCallback,\n  } = props\n  const { references, batchFileResult, downloadList } = data\n  const requestedFiles =\n    (batchFileResult && batchFileResult.requestedFiles) || []\n  // Get owner ids from download list by filtering to items that have a file handle\n  // then map to ownerIds\n  const ownerIdsFromHeaders = references?.results\n    .filter(el => el.createdBy)\n    .map(el => el.createdBy)\n  const ownerIdsFromFileHandles = requestedFiles\n    .filter(el => el.fileHandle?.createdBy !== undefined)\n    .map(el => el.fileHandle!.createdBy)\n\n  const ownerIds: string[] = []\n  if (ownerIdsFromFileHandles) {\n    ownerIds.push(...ownerIdsFromFileHandles)\n  }\n  if (ownerIdsFromHeaders) {\n    ownerIds.push(...ownerIdsFromHeaders)\n  }\n  // use bang operator because filter function guarentee's that file handle will be defined\n  const userProfiles = useGetInfoFromIds<UserProfile>({\n    ids: ownerIds,\n    token,\n    type: 'USER_PROFILE',\n  })\n\n  const fetchData = useCallback(async () => {\n    if (!token) {\n      setIsLoading(false)\n      // doesn't make sense with anonymous user!\n      return\n    }\n    try {\n      setIsLoading(true)\n      const downloadList = await getDownloadList(token)\n      const { filesToDownload } = downloadList\n      if (filesToDownload.length === 0) {\n        setData({\n          downloadList,\n        })\n        return\n      }\n      const batchFileRequest: BatchFileRequest = {\n        requestedFiles: filesToDownload,\n        includeFileHandles: true,\n        includePreSignedURLs: false,\n        includePreviewPreSignedURLs: false,\n      }\n      // batch file result gives FilesHandle for the files the user can download\n      // which has additional metadata - createdBy, numBytes, etc.\n      const batchFileResult = await getFiles(batchFileRequest, token)\n\n      // Only make entity header calls to the files that the user doesn't have access to,\n      // which can be determined by whether the batchFileResult has a failure code for the\n      // corresponding download list item\n      const referenceCall: Reference[] = filesToDownload\n        .filter(el => {\n          return (\n            batchFileResult.requestedFiles.find(\n              batchFile => batchFile.fileHandleId === el.fileHandleId,\n            )!.failureCode !== undefined\n          )\n        })\n        .map(el => {\n          return { targetId: el.associateObjectId }\n        })\n      // entity header is used to get the names of the files that the user\n      // doesn't have access to\n      const references = await getEntityHeader(referenceCall, token)\n      setData({\n        references,\n        batchFileResult,\n        downloadList,\n      })\n    } catch (e) {\n      console.error('Error in DownloadList API call : ', e)\n    } finally {\n      setIsLoading(false)\n    }\n  }, [token])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  const clearDownloadList = async (\n    _event: React.SyntheticEvent<HTMLButtonElement>,\n  ) => {\n    setIsLoading(true)\n    try {\n      await deleteDownloadList(token)\n      setData({\n        downloadList: undefined,\n      })\n      listUpdatedCallback?.()\n    } catch (err) {\n      console.error('Error on clearing download list: ', err)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  const deleteFileFromList = async (\n    fileHandleId: string,\n    associateObjectId: string,\n  ) => {\n    const list: FileHandleAssociation[] = [\n      {\n        fileHandleId,\n        associateObjectId,\n        associateObjectType: FileHandleAssociateType.FileEntity,\n      },\n    ]\n    setIsLoading(true)\n\n    setFileBeingDeleted(fileHandleId)\n    try {\n      const downloadList = await deleteDownloadListFiles(list, token)\n      // The current references and batchFileResult can be kept because the download\n      // list drives the view, so the stale values in those two won't be viewed.\n      setData({ downloadList, references, batchFileResult })\n      listUpdatedCallback?.()\n    } catch (err) {\n      console.error('Error on delete from download list', err)\n    } finally {\n      setFileBeingDeleted('')\n      setIsLoading(false)\n    }\n  }\n\n  const sortColumn = async (column: string) => {\n    try {\n      setIsLoading(true)\n\n      const isDescending =\n        column === sortedColumn.column ? !sortedColumn.isDescending : false\n\n      setSortedColumn({\n        column,\n        isDescending,\n      })\n\n      const filesToDownload = downloadList?.filesToDownload ?? []\n\n      filesToDownload.sort((itemA, itemB) => {\n        return sortDownLoadList(itemA, itemB, column, isDescending)\n      })\n      setData({\n        ...data,\n        downloadList,\n      })\n      listUpdatedCallback?.()\n    } catch (err) {\n      console.error(err)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n  const getFileHandleInfo = (item: FileHandleAssociation) => {\n    const fileResult = requestedFiles.find(\n      fileRes => fileRes.fileHandleId === item.fileHandleId,\n    )\n    const fileHandle = fileResult ? fileResult.fileHandle : undefined\n\n    let fileName: string | undefined = ''\n    let createdBy: string | undefined = ''\n    let createdOn: string | undefined = ''\n    let contentSize: number | undefined = undefined\n\n    if (fileHandle && item) {\n      fileName = fileHandle.fileName\n      createdBy = fileHandle.createdBy\n      createdOn = fileHandle.createdOn\n      contentSize = fileHandle.contentSize\n    } else {\n      const requestedFile = results.find(\n        req => req.id === item.associateObjectId,\n      )\n      if (requestedFiles) {\n        fileName = requestedFile?.name\n        createdBy = requestedFile?.createdBy\n        createdOn = requestedFile?.createdOn\n      }\n    }\n    createdBy = userProfiles.find(el => el.ownerId === createdBy)?.userName\n\n    return { fileName, createdBy, createdOn, contentSize }\n  }\n\n  const sortDownLoadList = (\n    itemA: FileHandleAssociation,\n    itemB: FileHandleAssociation,\n    column: string,\n    isDescending: boolean,\n  ) => {\n    const {\n      fileName: fileName_A,\n      createdBy: createdBy_A,\n      createdOn: createdOn_A,\n      contentSize: contentSize_A,\n    } = getFileHandleInfo(itemA)\n\n    const {\n      fileName: fileName_B,\n      createdBy: createdBy_B,\n      createdOn: createdOn_B,\n      contentSize: contentSize_B,\n    } = getFileHandleInfo(itemB)\n\n    const direction = isDescending ? 1 : -1\n\n    switch (column) {\n      case 'file':\n        return fileName_B?.localeCompare(fileName_A!)! * direction\n      case 'createdBy':\n        return createdBy_B?.localeCompare(createdBy_A!)! * direction\n      case 'createdOn':\n        return createdOn_B?.localeCompare(createdOn_A!)! * direction\n      case 'size':\n        if (contentSize_A && !contentSize_B) {\n          return -1\n        } else if (contentSize_B && !contentSize_A) {\n          return 1\n        } else {\n          return (contentSize_B! - contentSize_A!) * direction\n        }\n      default:\n        return 1\n    }\n  }\n\n  const filesToDownload = downloadList?.filesToDownload ?? []\n  const results = references?.results ?? []\n  let numBytes = 0\n  let numFiles = 0\n  const content = (\n    <div className=\"DownloadListTable\">\n      <div style={{ display: arPropsFromHasAccess ? 'none' : '' }}>\n        <div className=\"SRC-split download-list-table-top SRC-primary-background-color SRC-border-bottom-only\">\n          <span className=\"create-package-text\">\n            Download List &nbsp;&nbsp;\n            {isLoading && <span className=\"spinner\" />}\n          </span>\n          <button\n            className=\"SRC-underline-on-hover uppercase-text\"\n            onClick={clearDownloadList}\n            id={TESTING_CLEAR_BTN_CLASS}\n          >\n            Clear list\n          </button>\n        </div>\n        <ReactBootstrap.Table striped={true} responsive={true}>\n          <thead>\n            <tr>\n              <th>\n                File\n                <button\n                  className={`sort SRC-primary-background-color-hover ${\n                    sortedColumn.column === 'file'\n                      ? 'SRC-primary-background-color'\n                      : ''\n                  }`}\n                  onClick={() => {\n                    sortColumn('file')\n                  }}\n                >\n                  <FontAwesomeIcon\n                    icon={\n                      sortedColumn.column === 'file'\n                        ? sortedColumn.isDescending === false\n                          ? faSortAmountDown\n                          : faSortAmountUp\n                        : faSortAmountDown\n                    }\n                    color={sortedColumn.column === 'file' ? 'white' : ''}\n                  />\n                </button>\n              </th>\n              <th>Access</th>\n              <th>\n                Created By\n                <button\n                  className={`sort SRC-primary-background-color-hover ${\n                    sortedColumn.column === 'createdBy'\n                      ? 'SRC-primary-background-color'\n                      : ''\n                  }`}\n                  onClick={() => {\n                    sortColumn('createdBy')\n                  }}\n                >\n                  <FontAwesomeIcon\n                    icon={\n                      sortedColumn.column === 'createdBy'\n                        ? sortedColumn.isDescending === false\n                          ? faSortAmountDown\n                          : faSortAmountUp\n                        : faSortAmountDown\n                    }\n                    color={sortedColumn.column === 'createdBy' ? 'white' : ''}\n                  />\n                </button>\n              </th>\n              <th>\n                Created On\n                <button\n                  className={`sort SRC-primary-background-color-hover ${\n                    sortedColumn.column === 'createdOn'\n                      ? 'SRC-primary-background-color'\n                      : ''\n                  }`}\n                  onClick={() => {\n                    sortColumn('createdOn')\n                  }}\n                >\n                  <FontAwesomeIcon\n                    icon={\n                      sortedColumn.column === 'createdOn'\n                        ? sortedColumn.isDescending === false\n                          ? faSortAmountDown\n                          : faSortAmountUp\n                        : faSortAmountDown\n                    }\n                    color={sortedColumn.column === 'createdOn' ? 'white' : ''}\n                  />\n                </button>\n              </th>\n              <th>\n                Size\n                <button\n                  className={`sort SRC-primary-background-color-hover ${\n                    sortedColumn.column === 'size'\n                      ? 'SRC-primary-background-color'\n                      : ''\n                  }`}\n                  onClick={() => {\n                    sortColumn('size')\n                  }}\n                >\n                  <FontAwesomeIcon\n                    icon={\n                      sortedColumn.column === 'size'\n                        ? sortedColumn.isDescending === false\n                          ? faSortAmountDown\n                          : faSortAmountUp\n                        : faSortAmountDown\n                    }\n                    color={sortedColumn.column === 'size' ? 'white' : ''}\n                  />\n                </button>\n              </th>\n              {/* th below is made for trash can icon but holds no content */}\n              <th />\n            </tr>\n          </thead>\n          <tbody className=\"download-list-table\">\n            {filesToDownload.map(item => {\n              let createdBy: string | undefined = ''\n              let createdOn: string | undefined = ''\n              let fileName: string | undefined = ''\n              let contentSize = undefined\n              const synId = item.associateObjectId\n              const fileHandleId = item.fileHandleId\n              const isCurrentlyBeingDeletedClass =\n                fileBeingDeleted === fileHandleId ? 'SRC-inactive-bg' : ''\n              // See if batch file results has this fileHandleId\n              const fileResult = requestedFiles.find(\n                fileRes => fileRes.fileHandleId === fileHandleId,\n              )\n              const fileHandle = fileResult?.fileHandle\n              const canDownload = fileHandle !== undefined\n              if (fileHandle) {\n                // fileHandle is defined, this file is downloadable, show its metadata\n                ;({ createdBy, createdOn, fileName, contentSize } = fileHandle)\n                if (\n                  getDownloadTypeForFileHandle(fileHandle) ===\n                  FileHandleDownloadTypeEnum.Accessible\n                ) {\n                  numBytes += contentSize\n                  numFiles += 1\n                }\n              } else {\n                // file is not downloadable, only show its name from entity header info\n                const requestedFile = results.find(\n                  req => req.id === item.associateObjectId,\n                )\n                fileName = requestedFile?.name\n                createdBy = requestedFile?.createdBy\n                createdOn = requestedFile?.createdOn\n              }\n              createdOn = moment(createdOn).format('L LT')\n              const userProfile = userProfiles.find(\n                el => el.ownerId === createdBy,\n              )\n              return (\n                <tr className={isCurrentlyBeingDeletedClass} key={fileHandleId}>\n                  <td>\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href={`https://www.synapse.org/#!Synapse:${synId}`}\n                    >\n                      {fileName}\n                    </a>\n                  </td>\n                  <td>\n                    <HasAccess\n                      onHide={onHide}\n                      fileHandle={fileHandle}\n                      token={token}\n                      set_arPropsFromHasAccess={set_arPropsFromHasAccess}\n                      entityId={synId}\n                      isInDownloadList={true}\n                      forceSamePage={forceSamePage}\n                    />\n                  </td>\n                  <td>\n                    {userProfile && (\n                      <UserCard\n                        size={'SMALL USER CARD'}\n                        userProfile={userProfile}\n                        preSignedURL={userProfile.clientPreSignedURL}\n                        token={token}\n                        extraSmall={true}\n                      />\n                    )}\n                    {canDownload && !userProfile && (\n                      <span className=\"spinner\" />\n                    )}\n                  </td>\n                  <td>{createdOn}</td>\n                  <td>\n                    {contentSize && calculateFriendlyFileSize(contentSize)}\n                  </td>\n                  <td>\n                    <button\n                      className={TESTING_TRASH_BTN_CLASS}\n                      onClick={\n                        fileBeingDeleted === ''\n                          ? () => deleteFileFromList(fileHandleId, synId)\n                          : undefined\n                      }\n                    >\n                      <FontAwesomeIcon\n                        className=\"SRC-primary-text-color\"\n                        icon=\"trash\"\n                      />\n                    </button>\n                  </td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </ReactBootstrap.Table>\n        <CreatePackage updateDownloadList={fetchData} token={token}>\n          <DownloadDetails\n            numBytes={numBytes}\n            numFiles={numFiles}\n            token={token}\n          />\n        </CreatePackage>\n      </div>\n      {arPropsFromHasAccess && (\n        <AccessRequirementList\n          {...arPropsFromHasAccess}\n          token={token}\n          onHide={() => {\n            set_arPropsFromHasAccess(undefined)\n          }}\n        />\n      )}\n    </div>\n  )\n\n  const onHideModal = useCallback(() => {\n    if (arPropsFromHasAccess) {\n      set_arPropsFromHasAccess(undefined)\n    } else {\n      onHide?.()\n    }\n  }, [arPropsFromHasAccess, onHide])\n\n  if (renderAsModal) {\n    const closeBtn: React.CSSProperties = {\n      position: 'absolute',\n      top: 5,\n      right: 20,\n      zIndex: 10,\n    }\n    \n    return (\n      <ReactBootstrap.Modal\n        centered={true}\n        animation={false}        \n        size={'lg'}\n        dialogClassName={'download-list-modal-container'}\n        show={true}\n      >\n        <ReactBootstrap.Modal.Header>\n          <button style={closeBtn} onClick={onHideModal}>\n            <FontAwesomeIcon style={{ fontSize: '21px' }} icon=\"times\" />\n          </button>\n        </ReactBootstrap.Modal.Header>\n        {content}\n      </ReactBootstrap.Modal>\n    )\n  } else {\n    return content\n  }\n}\n","import moment from 'moment'\nimport React, { useState } from 'react'\nimport { SynapseClient, SynapseConstants } from '../../utils'\nimport { testDownloadSpeed } from '../../utils/functions/testDownloadSpeed'\nimport {\n  AddFilesToDownloadListRequest,\n  Query,\n  QueryBundleRequest,\n} from '../../utils/synapseTypes/'\nimport DownloadDetails from './DownloadDetails'\nimport DownloadListTable from './DownloadListTable'\nimport useDeepCompareEffect from 'use-deep-compare-effect'\nimport { TopLevelControlsState, QueryWrapperState } from '../QueryWrapper'\nimport SignInButton from '../SignInButton'\n\nenum StatusEnum {\n  LOADING_INFO,\n  PROCESSING,\n  INFO,\n  SUCCESS,\n  ERROR,\n  SIGNED_OUT,\n}\n\nexport type DownloadConfirmationState = {\n  fileCount: number\n  fileSize: number\n  downloadEstimate?: string\n  status: StatusEnum\n  errorMessage?: string\n  ownerId?: string\n}\nexport type DownloadConfirmationProps = {\n  fnClose?: Function\n  token?: string\n  getLastQueryRequest?: () => QueryBundleRequest\n  topLevelControlsState?: TopLevelControlsState\n  updateParentState?: <K extends keyof QueryWrapperState>(\n    param: Pick<QueryWrapperState, K>,\n  ) => void\n  onExportTable?: () => void\n}\n\n// add files to download list\nasync function addToDownload(\n  query: Query,\n  token: string,\n): Promise<[StatusEnum, string]> {\n  const req: AddFilesToDownloadListRequest = {\n    concreteType:\n      'org.sagebionetworks.repo.model.file.AddFileToDownloadListRequest',\n    query: query,\n  }\n  try {\n    const result = await SynapseClient.addFilesToDownloadList(req, token)\n    const ownerId = result.downloadList.ownerId\n    return [StatusEnum.SUCCESS, ownerId]\n  } catch (error) {\n    return [StatusEnum.ERROR, error.reason]\n  }\n}\n\ntype UiStateDictionary = {\n  [key: string]: {\n    className: string\n    infoText: string | JSX.Element\n    closeText: string\n  }\n}\n\n// css classes, text, and close button text associated with different stages\nconst StatusConstruct: UiStateDictionary = {\n  [StatusEnum.INFO]: {\n    className: 'alert-info',\n    infoText: 'Would you like to add all files to the download list?',\n    closeText: 'Cancel',\n  },\n\n  [StatusEnum.PROCESSING]: {\n    className: 'alert-info',\n    infoText: 'Adding Files To List',\n    closeText: 'Cancel',\n  },\n\n  [StatusEnum.LOADING_INFO]: {\n    className: 'alert-info',\n    infoText: 'Calculating File Size',\n    closeText: 'Cancel',\n  },\n\n  [StatusEnum.ERROR]: {\n    className: 'alert-danger',\n    closeText: 'Close',\n    infoText: '',\n  },\n  [StatusEnum.SIGNED_OUT]: {\n    className: 'alert-danger',\n    closeText: 'Close',\n    infoText: (\n      <>\n        Please <SignInButton style={{ color: '#337ab7' }} /> to add files to\n        your download list.\n      </>\n    ),\n  },\n  [StatusEnum.SUCCESS]: {\n    className: 'alert-info',\n    closeText: 'Close',\n    infoText: '',\n  },\n}\n\n//============= DownloadConfirmation component =============\n\nexport const DownloadConfirmation: React.FunctionComponent<DownloadConfirmationProps> = ({\n  getLastQueryRequest,\n  token,\n  fnClose,\n  updateParentState,\n  topLevelControlsState,\n  onExportTable,\n}) => {\n  const { showDownloadConfirmation = true } = topLevelControlsState ?? {}\n  const [state, setState] = useState<DownloadConfirmationState>({\n    fileCount: 0,\n    fileSize: 0,\n    status: token ? StatusEnum.LOADING_INFO : StatusEnum.SIGNED_OUT,\n  })\n  const [showDownloadList, setShowDownloadList] = useState(false)\n  const queryBundleRequest = getLastQueryRequest!()\n\n  const getFilesInformation = async (\n    queryBundleRequest: QueryBundleRequest,\n    token: string,\n  ) => {\n    setState({\n      ...state,\n      status: StatusEnum.LOADING_INFO,\n    })\n\n    const partMask =\n      SynapseConstants.BUNDLE_MASK_QUERY_COUNT |\n      SynapseConstants.BUNDLE_MASK_SUM_FILES_SIZE_BYTES\n\n    const queryBundleRequestSizeInformation: QueryBundleRequest = {\n      ...queryBundleRequest,\n      partMask,\n    }\n\n    const {\n      queryCount,\n      sumFileSizes,\n    } = await SynapseClient.getQueryTableResults(\n      queryBundleRequestSizeInformation,\n      token,\n    )\n    const estimatedDownloadBytesPerSecond = await testDownloadSpeed(token)\n    const size = sumFileSizes ? sumFileSizes['sumFileSizesBytes'] : 0\n    const durationSeconds = size / estimatedDownloadBytesPerSecond\n    const duration = moment.duration(durationSeconds, 'seconds').humanize()\n    setState({\n      fileCount: queryCount || 0,\n      fileSize: size,\n      downloadEstimate: duration,\n      status: StatusEnum.INFO,\n    })\n  }\n\n  // UseEffect memoization only works for arguments where a direct === comparison can be made\n  // This fails drastically with the queryBundleRequest object which is a complex object of many fields that\n  // change, we could use a custom comparitor but this also introduces risk\n  useDeepCompareEffect(() => {\n    token && getFilesInformation(queryBundleRequest, token)\n  }, [queryBundleRequest, token])\n\n  const onCancel = fnClose\n    ? () => fnClose()\n    : () => {\n        updateParentState!({\n          topLevelControlsState: {\n            ...topLevelControlsState!,\n            showDownloadConfirmation: false,\n          },\n        })\n      }\n\n  const triggerAddToDownload = async () => {\n    if (!token) {\n      setState({ ...state, status: StatusEnum.SIGNED_OUT })\n      return\n    }\n    setState({ ...state, status: StatusEnum.PROCESSING })\n    const result = await addToDownload(queryBundleRequest.query, token)\n    const status = result[0]\n\n    if (status === StatusEnum.SUCCESS) {\n      setState({ ...state, ownerId: result[1], status })\n    } else {\n      setState({ ...state, errorMessage: result[1], status })\n    }\n  }\n\n  const getContent = (\n    { status, fileCount, fileSize, errorMessage }: DownloadConfirmationState,\n    token?: string,\n  ): JSX.Element => {\n    switch (status) {\n      case StatusEnum.LOADING_INFO:\n      case StatusEnum.PROCESSING:\n        return (\n          <div>\n            <span className={'spinner white'} />\n            <span className={'spinner__text'}>\n              {StatusConstruct[status].infoText}\n            </span>\n          </div>\n        )\n\n      case StatusEnum.SIGNED_OUT:\n        return <>{StatusConstruct[status].infoText}</>\n      case StatusEnum.ERROR:\n        return <>{errorMessage}</>\n\n      case StatusEnum.INFO:\n        return (\n          <>\n            <DownloadDetails\n              token={token}\n              numFiles={fileCount}\n              numBytes={fileSize}\n            ></DownloadDetails>\n            <span>{StatusConstruct[status].infoText}</span>\n          </>\n        )\n\n      case StatusEnum.SUCCESS:\n        return (\n          <span>\n            <button\n              className=\"test-view-downloadlist btn-link\"\n              onClick={() => setShowDownloadList(true)}\n            >\n              View Download List\n            </button>\n            \n            {onExportTable && <span>\n                or \n                <button\n                  className=\"test-download-metadata btn-link\"\n                  onClick={onExportTable}\n                >\n                  Download File Metadata\n                </button>\n              </span>\n            }\n          </span>\n        )\n\n      default:\n        return <></>\n    }\n  }\n\n  return (\n    <>\n      <div\n        className={`alert download-confirmation ${\n          StatusConstruct[state.status].className\n        } ${showDownloadConfirmation ? '' : 'hidden'}`}\n      >\n        <div>{getContent(state, token)}</div>\n        <div className=\"download-confirmation-action\">\n          {state.status !== StatusEnum.PROCESSING && (\n            <button className=\"btn btn-link\" onClick={onCancel}>\n              {StatusConstruct[state.status].closeText}\n            </button>\n          )}\n\n          {state.status === StatusEnum.INFO && (\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={triggerAddToDownload}\n            >\n              Add\n            </button>\n          )}\n        </div>\n      </div>\n      {showDownloadList && (\n        <DownloadListTable\n          token={token}\n          renderAsModal={true}\n          onHide={() => setShowDownloadList(false)}\n        />\n      )}\n    </>\n  )\n}\n","import * as React from 'react'\nimport { EntityHeader } from '../utils/synapseTypes/'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faLink,\n  faFolder,\n  faFile,\n  faListAlt,\n  faTable,\n  faThList,\n  faArchive,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nlibrary.add(faLink)\nlibrary.add(faFolder)\nlibrary.add(faFile)\nlibrary.add(faListAlt)\nlibrary.add(faTable)\nlibrary.add(faThList)\nlibrary.add(faArchive)\n\ntype IconType =\n  | 'FileEntity'\n  | 'Folder'\n  | 'Link'\n  | 'Project'\n  | 'TableEntity'\n  | 'EntityView'\n\nconst getIconTypeForEntity = (name: IconType) => {\n  switch (name) {\n    case 'Link':\n      return 'link'\n    case 'Folder':\n      return 'folder'\n    case 'FileEntity':\n      return 'file'\n    case 'TableEntity':\n      return 'table'\n    case 'Project':\n      return 'list-alt'\n    case 'EntityView':\n      return 'th-list'\n    default:\n      return ''\n  }\n}\n\ntype EntityTypeIconProps = {\n  type: string\n}\nconst EntityTypeIcon: React.SFC<EntityTypeIconProps> = ({ type }) => {\n  if (!type) {\n    return <></>\n  }\n  const splitType = type.split('.')\n  const name = splitType[splitType.length - 1] as IconType\n  const iconType = getIconTypeForEntity(name)\n  const iconStyle: React.CSSProperties = {\n    marginRight: 5,\n  }\n  if (iconType === '') {\n    console.log('Entity Type not mapped = ', type)\n    return <React.Fragment />\n  }\n  return <FontAwesomeIcon style={iconStyle} icon={iconType} />\n}\n\ntype EntityLinkProps = {\n  entityHeader: EntityHeader\n  className?: string\n}\n\nexport const EntityLink: React.SFC<EntityLinkProps> = ({\n  entityHeader,\n  className,\n}) => {\n  const { id, name, type } = entityHeader\n  return (\n    <a\n      className={className}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      href={`https://www.synapse.org/#!Synapse:${id}`}\n    >\n      <p className={className}>\n        <EntityTypeIcon type={type} />\n        {name}\n      </p>\n    </a>\n  )\n}\n","import { QueryResultBundle } from '../../utils/synapseTypes'\n\nexport const getUniqueEntities = (\n  data: QueryResultBundle,\n  mapIdToHeader: {},\n  indicies: number[],\n) => {\n  const distinctEntities = new Set<string>()\n  data!.queryResult.queryResults.rows.forEach(row => {\n    row.values.forEach((el: any, colIndex: number) => {\n      // make sure this is a column of type entity and that we haven't retrieved this entity's information prior\n      if (\n        indicies.includes(colIndex) &&\n        !Object.prototype.hasOwnProperty.call(mapIdToHeader, el) &&\n        el\n      ) {\n        distinctEntities.add(el)\n      }\n    })\n  })\n  return distinctEntities\n}\n","import { EntityColumnType, QueryResultBundle } from '../../utils/synapseTypes'\n\nexport const getColumnIndiciesWithType = (\n  data: QueryResultBundle | undefined,\n  ...columnTypes: EntityColumnType[]\n) => {\n  const columnsOfTypeEntity: number[] = []\n  data?.selectColumns?.forEach((el, index) => {\n    if (columnTypes.includes(el.columnType)) {\n      columnsOfTypeEntity.push(index)\n    }\n  })\n  return columnsOfTypeEntity\n}\n","import { UiSchema } from 'react-jsonschema-form'\nimport { JSONSchema6 } from 'json-schema'\n\nexport const writeHeaderOption = \"First line is the columns names.\"\nexport const includeRowIdAndRowVersionOption = \"Include row metadata (Row Id and Row Version).\"\nexport const csvOption = \"Comma Separated Values (CSV)\"\nexport const tsvOption = \"Tab Separated Values (TSV)\"\n\n// Step 1\nconst stepOneFormSchema: JSONSchema6 = {\n  title: 'Download query results',\n  type: 'object',\n  properties: {\n    'File Type'  : {\n      type: \"string\",\n      oneOf: [\n        {\n          const: csvOption,\n          title: csvOption\n        },\n        {\n          const: tsvOption,\n          title: tsvOption\n        }\n      ],\n    },\n    Contents : {\n      type: \"array\",\n      title: 'Contents',\n      items: {\n        type: 'string',\n        enum: [writeHeaderOption, includeRowIdAndRowVersionOption],\n      },\n      uniqueItems: true\n    }\n  }\n}\n\nconst stepOneFormUISchema: UiSchema = {\n  'File Type': {\n    \"ui:widget\": \"radio\"\n  },\n  Contents: {\n    'ui:widget': 'checkboxes'\n  }\n}\n\n// Step 2\nconst stepTwoFormSchema: JSONSchema6 = {\n  title: 'Download query results',\n  description: 'File is ready for download. Select the download button to download the file.',\n  type: 'object',\n}\n\nconst stepTwoFormUISchema: UiSchema = {\n}\n\nexport const formSchemaArray = [stepOneFormSchema, stepTwoFormSchema]\nexport  const formSchemaUIArray = [stepOneFormUISchema, stepTwoFormUISchema]","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport Form, { IChangeEvent } from 'react-jsonschema-form'\nimport { SynapseClient } from '../utils'\nimport {\n  DownloadFromTableRequest,\n  DownloadFromTableResult,\n  SortItem,\n  QueryBundleRequest,\n} from '../utils/synapseTypes/'\nimport {\n  csvOption,\n  formSchemaArray,\n  formSchemaUIArray,\n  includeRowIdAndRowVersionOption,\n  writeHeaderOption,\n} from './ModalDownload.FormSchema'\nimport { parseEntityIdFromSqlStatement } from '../utils/functions/sqlFunctions'\n\nlibrary.add(faTimes)\n\nexport type ModalDownloadState = {\n  isLoading: boolean\n  step: number\n  data?: DownloadFromTableResult\n  formData: {}\n}\n\nexport type ModalDownloadProps = {\n  onClose: (...args: any[]) => void\n  token?: string\n  includeEntityEtag?: boolean\n  queryBundleRequest?: QueryBundleRequest  // either the query bundle request needs to be provided, or getLastQueryRequest\n  getLastQueryRequest?: () => QueryBundleRequest\n  offset?: number\n  limit?: number\n  sort?: SortItem[]\n}\n\nexport default class ModalDownload extends React.Component<\n  ModalDownloadProps,\n  ModalDownloadState\n> {\n  constructor(props: ModalDownloadProps) {\n    super(props)\n    this.state = {\n      isLoading: false,\n      step: 0,\n      formData: {\n        'File Type': csvOption,\n        Contents: [writeHeaderOption, includeRowIdAndRowVersionOption],\n      },\n    }\n  }\n\n  handleSubmit = (event: IChangeEvent) => {\n    if (this.state.step === 0) {\n      this.handleDownloadSetup(event)\n    } else {\n      this.onDownload()\n    }\n  }\n\n  handleDownloadSetup = (event: IChangeEvent) => {\n    this.setState({\n      isLoading: true,\n    })\n    const { formData } = event\n    const fileType = formData['File Type']\n    const contents = formData.Contents as string[]\n    const { token, queryBundleRequest, getLastQueryRequest } = this.props\n    const separator = fileType === csvOption ? ',' : '\\t'\n    const writeHeader = contents.includes(writeHeaderOption)\n    const includeRowIdAndRowVersion = contents.includes(\n      includeRowIdAndRowVersionOption,\n    )\n    const queryRequest = queryBundleRequest ?? getLastQueryRequest!()\n    const sql = queryRequest.query.sql\n    const downloadFromTableRequest: DownloadFromTableRequest = {\n      sql,\n      entityId: parseEntityIdFromSqlStatement(sql),\n      selectedFacets: queryRequest.query.selectedFacets,\n      concreteType:\n        'org.sagebionetworks.repo.model.table.DownloadFromTableRequest',\n      writeHeader,\n      includeRowIdAndRowVersion,\n      csvTableDescriptor: { separator },\n    }\n    SynapseClient.getDownloadFromTableRequest(downloadFromTableRequest, token)\n      .then(data => {\n        this.setState({\n          isLoading: false,\n          step: 1,\n          data,\n        })\n      })\n      .catch(err => {\n        console.log('Error getDownloadFromTableRequest: ', err)\n      })\n  }\n\n  onDownload = () => {\n    const { data } = this.state\n    const { token } = this.props\n    // data will always be defined if calling this function\n    SynapseClient.getFileHandleByIdURL(data!.resultsFileHandleId, token).then(\n      url => {\n        window.location.href = url\n        this.props.onClose()\n      },\n    )\n  }\n\n  handleChange = (event: IChangeEvent) => {\n    const { formData } = event\n    this.setState({\n      formData,\n    })\n  }\n\n  render() {\n    const closeBtn: React.CSSProperties = {\n      position: 'absolute',\n      top: 10,\n      right: 10,\n      zIndex: 10,\n    }\n    const submitBtn: React.CSSProperties = {\n      padding: '6px 10px',\n      borderRadius: 6,\n    }\n    const spinnerStyle: React.CSSProperties = {\n      height: 50,\n      width: 50,\n      backgroundSize: 50,\n    }\n    return (\n      <Modal animation={false} show={true} onHide={this.props.onClose}>\n        <Modal.Header>\n          <button style={closeBtn} onClick={this.props.onClose}>\n            <FontAwesomeIcon style={{ fontSize: '21px' }} icon=\"times\" />\n          </button>\n          <Form\n            schema={formSchemaArray[this.state.step]}\n            uiSchema={formSchemaUIArray[this.state.step]}\n            onChange={this.handleChange}\n            formData={this.state.formData}\n            onSubmit={this.handleSubmit}\n          >\n            {this.state.isLoading && (\n              <div className=\"SRC-centerAndJustifyContent\">\n                <div className=\"SRC-center-text\">\n                  <p> Creating the File </p>\n                  <div style={spinnerStyle} className=\"spinner\" />\n                  <p> Loading... </p>\n                </div>\n              </div>\n            )}\n            <hr />\n            <div style={{ textAlign: 'right' }}>\n              <button\n                id=\"cancelBtn\"\n                onClick={this.props.onClose}\n                className=\"SRC-primary-text-color SRC-roundBorder SRC-underline-on-hover \"\n                type=\"button\"\n              >\n                Cancel\n              </button>\n              <button\n                id=\"submitBtn\"\n                style={submitBtn}\n                className=\"SRC-primary-background-color SRC-roundBorder SRC-whiteText\"\n                type=\"submit\"\n              >\n                {this.state.step === 0 ? 'Next' : 'Download'}\n              </button>\n            </div>\n          </Form>\n        </Modal.Header>\n      </Modal>\n    )\n  }\n}\n","import { cloneDeep } from 'lodash-es'\nimport * as React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport { lexer } from 'sql-parser'\nimport { SynapseClient } from '../../utils'\nimport { getUserProfileWithProfilePicAttached } from '../../utils/functions/getUserData'\nimport {\n  formatSQLFromParser,\n  isGroupByInSql,\n} from '../../utils/functions/sqlFunctions'\nimport {\n  EntityHeader,\n  FacetColumnResult,\n  FacetColumnResultValues,\n  QueryBundleRequest,\n  ReferenceList,\n  Row,\n  SelectColumn,\n  SortItem,\n  UserGroupHeader,\n  UserProfile,\n  FacetColumnRequest,\n  EntityColumnType,\n  ColumnModel,\n} from '../../utils/synapseTypes/'\nimport { DownloadConfirmation } from '../download_list/DownloadConfirmation'\nimport HasAccess from '../HasAccess'\nimport { QueryWrapperChildProps } from '../QueryWrapper'\nimport TotalQueryResults from '../TotalQueryResults'\nimport { unCamelCase } from './../../utils/functions/unCamelCase'\nimport { ICON_STATE } from './SynapseTableConstants'\nimport NoData from '../../assets/icons/file-dotted.svg'\nimport { renderTableCell } from '../synapse_table_functions/renderTableCell'\nimport { getUniqueEntities } from '../synapse_table_functions/getUniqueEntities'\nimport { getColumnIndiciesWithType } from '../synapse_table_functions/getColumnIndiciesWithType'\nimport { Checkbox } from '../widgets/Checkbox'\nimport { LabelLinkConfig } from '../CardContainerLogic'\nimport { EnumFacetFilter } from '../widgets/query-filter/EnumFacetFilter'\nimport {\n  applyMultipleChangesToValuesColumn,\n  applyChangesToValuesColumn,\n} from '../widgets/query-filter/QueryFilter'\nimport ColumnResizer from 'column-resizer'\nimport ModalDownload from '../ModalDownload'\nimport loadingScreen from '../LoadingScreen'\nimport { Icon } from '../row_renderers/utils'\n\nexport const EMPTY_HEADER: EntityHeader = {\n  id: '',\n  name: '',\n  type: '',\n  versionNumber: -1,\n  versionLabel: '',\n  benefactorId: -1,\n  createdBy: '',\n  createdOn: '',\n  modifiedBy: '',\n  modifiedOn: '',\n}\n\n// Hold constants for next and previous button actions\nconst NEXT = 'NEXT'\nconst PREVIOUS = 'PREVIOUS'\n\ntype Direction = '' | 'ASC' | 'DESC'\nexport const SORT_STATE: Direction[] = ['', 'DESC', 'ASC']\nexport const DOWNLOAD_OPTIONS_CONTAINER_CLASS = 'SRC-download-options-container'\nconst RESIZER_OPTIONS: any = {\n  resizeMode: 'overflow',\n  partialRefresh: 'true',\n  liveDrag: true,\n  headerOnly: 'true',\n}\ntype Info = {\n  index: number\n  name: string\n}\nexport interface Dictionary<T> {\n  [key: string]: T\n}\nexport type SynapseTableState = {\n  sortedColumnSelection: SortItem[]\n  columnIconSortState: number[]\n  isDownloadConfirmationOpen: boolean\n  isExportTableDownloadOpen: boolean\n  isExpanded: boolean\n  isFileView: boolean\n  mapEntityIdToHeader: Dictionary<EntityHeader>\n  mapUserIdToHeader: Dictionary<Partial<UserGroupHeader & UserProfile>>\n  isColumnSelectionOpen: boolean\n  isUserModifiedQuery?: boolean //flag to signal that the selection criterial has been defined by user and if no records are returned do not hide the table\n  isFetchingEntityHeaders: boolean\n  isFetchingEntityVersion: boolean\n}\nexport type SynapseTableProps = {\n  visibleColumnCount?: number\n  title?: string\n  showAccessColumn?: boolean\n  columnLinks?: LabelLinkConfig\n  hideDownload?: boolean\n  enableLeftFacetFilter?: boolean\n  isRowSelectionVisible?: boolean\n}\n\nexport default class SynapseTable extends React.Component<\n  QueryWrapperChildProps & SynapseTableProps,\n  SynapseTableState\n> {\n  constructor(props: QueryWrapperChildProps & SynapseTableProps) {\n    super(props)\n    this.componentDidMount = this.componentDidMount.bind(this)\n    this.componentWillUnmount = this.componentWillUnmount.bind(this)\n    this.componentDidUpdate = this.componentDidUpdate.bind(this)\n    this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this)\n    this.handleColumnSortPress = this.handleColumnSortPress.bind(this)\n    this.handlePaginationClick = this.handlePaginationClick.bind(this)\n    this.findSelectionIndex = this.findSelectionIndex.bind(this)\n    this.toggleColumnSelection = this.toggleColumnSelection.bind(this)\n    this.advancedSearch = this.advancedSearch.bind(this)\n    this.getLengthOfPropsData = this.getLengthOfPropsData.bind(this)\n    this.configureFacetDropdown = this.configureFacetDropdown.bind(this)\n    this.enableResize = this.enableResize.bind(this)\n    this.disableResize = this.disableResize.bind(this)\n\n    // store the offset and sorted selection that is currently held\n    this.state = {\n      /* columnIconSortState tells what icon to display for a table\n         header. There are three states for a particular header-\n          0 - show descending icon but *deselected*\n          1 - show descending icon selected\n          2 - show ascending icon selected\n      */\n      columnIconSortState: [],\n      isDownloadConfirmationOpen: false,\n      isExportTableDownloadOpen: false,\n      isExpanded: false,\n      isColumnSelectionOpen: false,\n      isFileView: false,\n      // sortedColumnSelection contains the columns which are\n      // selected currently and their sort status as eithet\n      // off, desc, or asc.\n      sortedColumnSelection: [],\n      mapEntityIdToHeader: {},\n      mapUserIdToHeader: {},\n      isFetchingEntityHeaders: false,\n      isFetchingEntityVersion: false,\n    }\n    this.getEntityHeadersInData = this.getEntityHeadersInData.bind(this)\n  }\n\n  // instance variables\n  resizer: any\n  tableElement: HTMLTableElement | null | undefined = undefined\n\n  componentWillUnmount() {\n    this.disableResize()\n  }\n\n  componentDidMount() {\n    this.getEntityHeadersInData(true)\n    this.enableResize()\n  }\n\n  shouldComponentUpdate(\n    nextProps: QueryWrapperChildProps & SynapseTableProps,\n    nextState: Readonly<SynapseTableState>,\n    nextContext: any,\n  ): boolean {\n    this.disableResize()\n    return super.shouldComponentUpdate\n      ? super.shouldComponentUpdate(nextProps, nextState, nextContext)\n      : true\n  }\n  componentDidUpdate(prevProps: QueryWrapperChildProps & SynapseTableProps) {\n    this.getEntityHeadersInData(prevProps.token !== this.props.token)\n    this.getTableConcreteType(prevProps)\n    this.enableResize()\n  }\n\n  public async getTableConcreteType(\n    prevProps: QueryWrapperChildProps & SynapseTableProps,\n  ) {\n    const { data, token } = this.props\n    if (!data) {\n      return\n    } else if (\n      this.state.isFetchingEntityVersion &&\n      prevProps.token === this.props.token\n    ) {\n      return\n    }\n    const currentTableId = data?.queryResult.queryResults.tableId\n    const previousTableId = prevProps.data?.queryResult.queryResults.tableId\n    if (currentTableId && previousTableId !== currentTableId) {\n      this.setState({\n        isFetchingEntityVersion: true,\n      })\n      const entityData = await SynapseClient.getEntity(token, currentTableId)\n      this.setState({\n        isFileView: entityData.concreteType.includes('EntityView'),\n        isFetchingEntityVersion: false,\n      })\n    }\n  }\n\n  enableResize() {\n    if (!this.resizer) {\n      if (this.tableElement) {\n        this.resizer = new ColumnResizer(this.tableElement, RESIZER_OPTIONS)\n      }\n    } else {\n      this.resizer.reset(RESIZER_OPTIONS)\n    }\n  }\n\n  disableResize() {\n    if (this.resizer) {\n      this.resizer.reset({ disable: true })\n    }\n  }\n\n  public async getEntityHeadersInData(forceRefresh: boolean) {\n    const { data, token } = this.props\n    if (!data) {\n      return\n    } else if (this.state.isFetchingEntityHeaders && !forceRefresh) {\n      return\n    }\n    const mapEntityIdToHeader = cloneDeep(this.state.mapEntityIdToHeader)\n    const mapUserIdToHeader = cloneDeep(this.state.mapUserIdToHeader)\n    const entityIdColumnIndicies = getColumnIndiciesWithType(\n      this.props.data,\n      EntityColumnType.ENTITYID,\n    )\n    const userIdColumnIndicies = getColumnIndiciesWithType(\n      this.props.data,\n      EntityColumnType.USERID,\n    )\n    const distinctEntityIds = getUniqueEntities(\n      data,\n      mapEntityIdToHeader,\n      entityIdColumnIndicies,\n    )\n    const distinctUserIds = getUniqueEntities(\n      data,\n      mapUserIdToHeader,\n      userIdColumnIndicies,\n    )\n    if (distinctEntityIds.size === 0 && distinctUserIds.size === 0) {\n      return\n    }\n    this.setState({\n      isFetchingEntityHeaders: true,\n    })\n    // Make call to resolve entity ids\n    if (distinctEntityIds.size > 0) {\n      const referenceList: ReferenceList = Array.from(distinctEntityIds).map(\n        id => {\n          return { targetId: id }\n        },\n      )\n      try {\n        // initialize mapEntityIdToHeader\n        referenceList.forEach(el => {\n          mapEntityIdToHeader[el.targetId] = EMPTY_HEADER\n        })\n        const data = await SynapseClient.getEntityHeader(referenceList, token)\n        const { results } = data\n        results.forEach(el => {\n          mapEntityIdToHeader[el.id] = el\n        })\n      } catch (err) {\n        console.error('Error on retrieving entity header list , ', err)\n      }\n    }\n    const userPorfileIds: string[] = []\n    if (distinctUserIds.size > 0) {\n      // Make call to get group headers and user profiles\n      const ids = Array.from(distinctUserIds)\n      // TODO: Grab Team Badge\n      try {\n        const data = await SynapseClient.getGroupHeadersBatch(ids, token)\n        data.children.forEach(el => {\n          if (el.isIndividual) {\n            userPorfileIds.push(el.ownerId)\n          } else {\n            mapUserIdToHeader[el.ownerId] = el\n          }\n        })\n      } catch (err) {\n        console.error('Error on getGroupHeaders batch: ', err)\n      }\n    }\n    if (userPorfileIds.length > 0) {\n      try {\n        const data = await getUserProfileWithProfilePicAttached(\n          userPorfileIds,\n          token,\n        )\n        data.list.forEach((el: UserProfile) => {\n          mapUserIdToHeader[el.ownerId] = el\n        })\n      } catch (err) {\n        console.error('Error on getUserProfile : ', err)\n      }\n    }\n    this.setState({\n      mapEntityIdToHeader,\n      mapUserIdToHeader,\n      isFetchingEntityHeaders: false,\n    })\n  }\n\n  /**\n   * Display the view\n   */\n  public render() {\n    if (this.props.isLoadingNewData) {\n      return loadingScreen\n    } else if (!this.props.data) {\n      return <></>\n    }\n    // unpack all the data\n    const {\n      data,\n      isLoading = true,\n      unitDescription,\n      token,\n      showBarChart,\n      enableLeftFacetFilter,\n    } = this.props\n    const { queryResult, columnModels = [] } = data\n    const { queryResults } = queryResult\n    const { rows } = queryResults\n    const { headers } = queryResults\n    const { facets = [] } = data\n    const { isExpanded, isExportTableDownloadOpen } = this.state\n    const queryRequest = this.props.getLastQueryRequest!()\n\n    let className = ''\n    if (showBarChart) {\n      className = 'SRC-marginBottomTop'\n    }\n    const hasResults = data.queryResult.queryResults.rows.length > 0\n    if (!hasResults && !this.state.isUserModifiedQuery) {\n      return (\n        <div className=\"text-center SRCBorderedPanel SRCBorderedPanel--padded2x\">\n          <img src={NoData} alt=\"no data\"></img>\n          <div style={{ marginTop: '20px', fontStyle: 'italic' }}>\n            This table is currently empty\n          </div>\n        </div>\n      )\n    }\n    const table = (\n      <div className=\"col-xs-12\">\n        {this.renderTable(headers, columnModels, facets, rows)}\n      </div>\n    )\n    const content = (\n      <>\n        <div className={className}>\n          {isExportTableDownloadOpen && (\n            <ModalDownload\n              onClose={() => {\n                this.setState({\n                  isExportTableDownloadOpen: false,\n                })\n              }}\n              queryBundleRequest={queryRequest}\n              token={token}\n            />\n          )}\n          {!enableLeftFacetFilter &&\n            unitDescription &&\n            !isGroupByInSql(queryRequest.query.sql) && (\n              <div\n                className={`SRC-centerContent text-left`}\n                style={{ minHeight: '20px' }}\n              >\n                <TotalQueryResults\n                  isLoading={isLoading}\n                  style={{ fontSize: 15 }}\n                  unitDescription={unitDescription}\n                  lastQueryRequest={queryRequest}\n                  token={token}\n                  frontText={'Showing'}\n                  applyChanges={(newFacets: FacetColumnRequest[]) =>\n                    this.applyChangesFromQueryFilter(newFacets)\n                  }\n                />\n              </div>\n            )}\n          {/* FRAGILE, CHANGE WITH CAUTION, see - https://sagebionetworks.jira.com/browse/PORTALS-1539 */}\n          <div className={enableLeftFacetFilter ? '' : 'row'}>{table}</div>\n        </div>\n      </>\n    )\n    return (\n      <React.Fragment>\n        {isExpanded && (\n          <Modal\n            animation={false}\n            show={true}\n            // @ts-ignore\n            onHide={() => this.setState({ isExpanded: false })}\n            dialogClassName={'modal-90w'}\n          >\n            <Modal.Header\n              // @ts-ignore\n              onHide={() => this.setState({ isExpanded: false })}\n              closeButton={true}\n            ></Modal.Header>\n            <Modal.Body>{content}</Modal.Body>\n          </Modal>\n        )}\n        {!isExpanded && content}\n      </React.Fragment>\n    )\n  }\n\n  private showGroupRowData = (selectedRow: Row) => {\n    // magic happens - parse query, deep copy query bundle request, modify, encode, send to Synapse.org.  Easy!\n    const queryCopy = this.props.getLastQueryRequest!().query\n    const parsed = this.getSqlUnderlyingDataForRow(selectedRow, queryCopy.sql)\n    queryCopy.sql = parsed.newSql\n    const queryJSON = JSON.stringify(queryCopy)\n    // encode this copy of the query (json)\n    const encodedQuery = btoa(queryJSON)\n    return `https://www.synapse.org/#!Synapse:${parsed.synId}/tables/query/${encodedQuery}`\n  }\n\n  private renderTable = (\n    headers: SelectColumn[],\n    columnModels: ColumnModel[],\n    facets: FacetColumnResult[],\n    rows: Row[],\n  ) => {\n    const lastQueryRequest = this.props.getLastQueryRequest?.()!\n    // handle displaying the previous button -- if offset is zero then it\n    // shouldn't be displayed\n    const pastZero: boolean = lastQueryRequest.query.offset! > 0\n    const {\n      hasMoreData,\n      showAccessColumn,\n      token,\n      isRowSelectionVisible,\n    } = this.props\n\n    const zeroMarginRight: React.CSSProperties = {\n      marginRight: 0,\n    }\n    const nextBtn = (\n      <button\n        onClick={this.handlePaginationClick(NEXT)}\n        className=\"SRC-light-button SRC-standard-button-shape\"\n        style={zeroMarginRight}\n        type=\"button\"\n      >\n        Next\n      </button>\n    )\n    const previousBtn = (\n      <button\n        onClick={this.handlePaginationClick(PREVIOUS)}\n        className=\"SRC-light-button SRC-standard-button-shape\"\n        type=\"button\"\n        style={!hasMoreData && pastZero ? zeroMarginRight : undefined}\n      >\n        Previous\n      </button>\n    )\n\n    let isShowingAccessColumn: boolean | undefined =\n      showAccessColumn && this.state.isFileView\n    /* min height ensure if no rows are selected that a dropdown menu is still accessible */\n    return (\n      <div style={{ minHeight: '400px' }} className=\"SRC-overflowAuto\">\n        {this.state.isDownloadConfirmationOpen && (\n          <DownloadConfirmation\n            token={token!}\n            getLastQueryRequest={this.props.getLastQueryRequest!}\n          />\n        )}\n        <table\n          ref={node => (this.tableElement = node)}\n          className=\"table table-striped table-condensed\"\n        >\n          <thead className=\"SRC_bordered\">\n            <tr>\n              {this.createTableHeader(\n                headers,\n                columnModels,\n                facets,\n                isShowingAccessColumn,\n                isRowSelectionVisible,\n                lastQueryRequest,\n              )}\n            </tr>\n          </thead>\n          <tbody>\n            {this.createTableRows(\n              rows,\n              headers,\n              isShowingAccessColumn,\n              isRowSelectionVisible,\n            )}\n          </tbody>\n        </table>\n        <div style={{ textAlign: 'right' }}>\n          {pastZero && previousBtn}\n          {hasMoreData && nextBtn}\n        </div>\n      </div>\n    )\n  }\n\n  /**\n   * Return the select column indexes for columns that use the aggregate count function.\n   * If sql does not have a GROUP BY, this returns an empty array.\n   * @param originalSql\n   */\n  public getCountFunctionColumnIndexes(originalSql: string): number[] {\n    const indexes: number[] = []\n    if (isGroupByInSql(originalSql)) {\n      const tokens: string[][] = lexer.tokenize(originalSql)\n      const selectIndex = tokens.findIndex(el => el[0] === 'SELECT')\n      const fromIndex = tokens.findIndex(el => el[0] === 'FROM')\n      let columnIndex = 0\n      for (\n        let index = selectIndex + 1;\n        index < fromIndex - selectIndex - 1;\n        index += 1\n      ) {\n        const token = tokens[index]\n        if (token[0] === 'FUNCTION' && token[1].toLowerCase() === 'count') {\n          // found a count column!\n          indexes.push(columnIndex)\n        } else if (token[0] === 'SEPARATOR') {\n          // next column\n          columnIndex += 1\n        }\n      }\n    }\n    return indexes\n  }\n\n  public getSqlUnderlyingDataForRow(\n    selectedRow: Row,\n    originalSql: string,\n  ): { synId: string; newSql: string } {\n    let tokens: string[][] = lexer.tokenize(originalSql)\n    const selectIndex = tokens.findIndex(el => el[0] === 'SELECT')\n    const fromIndex = tokens.findIndex(el => el[0] === 'FROM')\n\n    // gather all of the column names literals between select and from (and their indices)\n    const columnReferences: ColumnReference[] = []\n    let columnIndex = 0\n    let foundFunctionForColumn = false\n    for (\n      let index = selectIndex + 1;\n      index < fromIndex - selectIndex - 1;\n      index += 1\n    ) {\n      const token = tokens[index]\n      // parsing error.  concat function is reported as a LITERAL instead of a function\n      if (\n        token[0] === 'FUNCTION' ||\n        token[1].toLocaleLowerCase() === 'concat'\n      ) {\n        foundFunctionForColumn = true\n      } else if (token[0] === 'LITERAL' && !foundFunctionForColumn) {\n        // found a column\n        columnReferences.push({ index: columnIndex, name: token[1] })\n      } else if (token[0] === 'SEPARATOR') {\n        // next column\n        columnIndex += 1\n        // reset \"found function\"\n        foundFunctionForColumn = false\n      }\n    }\n\n    // remove all tokens after (and including) group\n    tokens = tokens.slice(\n      0,\n      tokens.findIndex(el => el[0] === 'GROUP'),\n    )\n    // replace all columns with *\n    tokens.splice(selectIndex + 1, fromIndex - selectIndex - 1, [\n      'STAR',\n      '*',\n      '1',\n    ])\n    // add new items to where clause, but only if the column name corresponds to a real column in the table/view!\n    // use row.values\n    if (this.props.data === undefined) {\n      return { synId: '', newSql: '' }\n    }\n    const whereIndex = tokens.findIndex(el => el[0] === 'WHERE')\n    if (whereIndex === -1) {\n      // does not contain a where clause\n      tokens.push(['WHERE', 'WHERE', '1'])\n    } else {\n      // alreay contains a where clause, add the first AND\n      tokens.push(['CONDITIONAL', 'AND', '1'])\n    }\n\n    // look for headers in column models, if they match then add a where clause\n    columnReferences.forEach((value: ColumnReference, index: number) => {\n      const rowValue = selectedRow.values[value.index]\n      // PORTALS-712: support null values\n      if (rowValue) {\n        tokens.push(\n          ['LITERAL', value.name, '1'],\n          ['OPERATOR', '=', '1'],\n          ['STRING', rowValue, '1'],\n          ['CONDITIONAL', 'AND', '1'],\n        )\n      } else {\n        tokens.push(\n          ['LITERAL', value.name, '1'],\n          ['OPERATOR', 'IS', '1'],\n          ['BOOLEAN', 'null', '1'],\n          ['CONDITIONAL', 'AND', '1'],\n        )\n      }\n    })\n    // remove the last AND\n    tokens.pop()\n    // remove backtick from output sql (for table name): `syn1234` becomes syn1234\n    const synId = tokens[tokens.findIndex(el => el[0] === 'FROM') + 1][1]\n    tokens.push(['EOF', '', '1'])\n    return { synId, newSql: formatSQLFromParser(tokens) }\n  }\n\n  /**\n   * Handle a click on next or previous\n   *\n   * @memberof SynapseTable\n   */\n  private handlePaginationClick = (eventType: string) => (\n    _event: React.MouseEvent<HTMLButtonElement>,\n  ) => {\n    const queryRequest = this.props.getLastQueryRequest!()\n    let currentOffset = queryRequest.query.offset!\n    // if its a \"previous\" click subtract from the offset\n    // otherwise its next and we paginate forward\n    if (eventType === PREVIOUS) {\n      currentOffset -= 25\n    }\n    if (eventType === NEXT) {\n      currentOffset += 25\n    }\n    queryRequest.query.offset = currentOffset\n    this.props.executeQueryRequest!(queryRequest)\n  }\n  /**\n   * Handle a column having been selected\n   *\n   * @memberof SynapseTable\n   */\n  public handleColumnSortPress = (dict: Info) => (_: React.SyntheticEvent) => {\n    // by using Synthetic event we can use the handler on both key press and mouse click\n    let columnIconSortState = cloneDeep(this.state.columnIconSortState)\n    if (columnIconSortState.length === 0) {\n      columnIconSortState = Array(this.getLengthOfPropsData()).fill(0)\n    }\n    // get currently sorted items and remove/insert/update this selection\n    const sortedColumnSelection = cloneDeep(this.state.sortedColumnSelection)\n    const index = this.findSelectionIndex(sortedColumnSelection, dict.name)\n    // if its present then remove it\n    if (index !== -1) {\n      sortedColumnSelection.splice(index, 1)\n    }\n    columnIconSortState[dict.index] =\n      (columnIconSortState[dict.index] + 1) % ICON_STATE.length\n    if (columnIconSortState[dict.index] > 0) {\n      sortedColumnSelection.unshift({\n        column: dict.name,\n        direction: SORT_STATE[columnIconSortState[dict.index]],\n      })\n    }\n    const queryRequest = this.props.getLastQueryRequest!()\n    queryRequest.query.sort = sortedColumnSelection\n    queryRequest.query.offset = 0\n    this.props.executeQueryRequest!(queryRequest)\n    this.setState({\n      columnIconSortState,\n      sortedColumnSelection,\n    })\n  }\n\n  private createTableRows(\n    rows: Row[],\n    headers: SelectColumn[],\n    isShowingAccessColumn: boolean | undefined,\n    isRowSelectionVisible: boolean | undefined,\n  ) {\n    const rowsFormatted: JSX.Element[] = []\n    const {\n      token,\n      data,\n      isColumnSelected,\n      selectedRowIndices,\n      updateParentState,\n      columnLinks = [],\n    } = this.props\n    const { selectColumns = [], columnModels = [] } = data!\n    const { mapEntityIdToHeader, mapUserIdToHeader } = this.state\n    const entityColumnIndicies = getColumnIndiciesWithType(\n      data,\n      EntityColumnType.ENTITYID,\n    )\n    const userColumnIndicies = getColumnIndiciesWithType(\n      data,\n      EntityColumnType.USERID,\n    )\n    const dateColumnIndicies = getColumnIndiciesWithType(\n      data,\n      EntityColumnType.DATE,\n    )\n    const dateListColumnIndicies = getColumnIndiciesWithType(\n      data,\n      EntityColumnType.DATE_LIST,\n    )\n    const booleanListColumnIndicies = getColumnIndiciesWithType(\n      data,\n      EntityColumnType.BOOLEAN_LIST,\n    )\n    const otherListColumnIndicies = getColumnIndiciesWithType(\n      data,\n      EntityColumnType.STRING_LIST,\n      EntityColumnType.INTEGER_LIST,\n    )\n    // find column indices that are COUNT type\n    const countColumnIndexes = this.getCountFunctionColumnIndexes(\n      this.props.getLastQueryRequest!().query.sql,\n    )\n    rows.forEach((row, rowIndex) => {\n      const rowContent = row.values.map(\n        (columnValue: string, colIndex: number) => {\n          const columnName = headers[colIndex].name\n          const isColumnActive = isColumnSelected!.includes(columnName)\n          const columnLinkConfig = columnLinks.find(el => {\n            return el.matchColumnName === columnName\n          })\n          const index = this.findSelectionIndex(\n            this.state.sortedColumnSelection,\n            columnName,\n          )\n          const isCountColumn = countColumnIndexes.includes(colIndex)\n          const isBold = index === -1 ? '' : 'SRC-boldText'\n          if (isColumnActive) {\n            return (\n              <td\n                className=\"SRC_noBorderTop SRC-synapseTableTd\"\n                key={`(${rowIndex}${columnValue}${colIndex})`}\n              >\n                {isCountColumn && (\n                  <a\n                    href={this.showGroupRowData(row)}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    <p className={isBold}>{columnValue}</p>\n                  </a>\n                )}\n\n                {!isCountColumn &&\n                  renderTableCell({\n                    entityColumnIndicies,\n                    userColumnIndicies,\n                    dateColumnIndicies,\n                    dateListColumnIndicies,\n                    booleanListColumnIndicies,\n                    otherListColumnIndicies,\n                    colIndex,\n                    columnValue,\n                    isBold,\n                    mapEntityIdToHeader,\n                    mapUserIdToHeader,\n                    columnLinkConfig,\n                    rowIndex,\n                    selectColumns,\n                    columnModels,\n                    columnName,\n                  })}\n              </td>\n            )\n          }\n          return <td className=\"SRC-hidden\" key={`(${rowIndex},${colIndex})`} />\n        },\n      )\n      // also push the access column value if we are showing user access for individual items (still shown if not logged in)\n      if (isShowingAccessColumn) {\n        const rowSynapseId = `syn${row.rowId}`\n        rowContent.unshift(\n          <td key={rowSynapseId} className=\"SRC_noBorderTop\">\n            <HasAccess\n              key={rowSynapseId}\n              entityId={rowSynapseId}\n              entityVersionNumber={row.versionNumber?.toString()}\n              token={token}\n            ></HasAccess>\n          </td>,\n        )\n      }\n      if (isRowSelectionVisible && selectedRowIndices) {\n        rowContent.unshift(\n          <td key={`(${rowIndex},rowSelectColumn)`} className=\"SRC_noBorderTop\">\n            <Checkbox\n              label=\"\"\n              id={`(${rowIndex},rowSelectColumnCheckbox)`}\n              checked={selectedRowIndices.includes(rowIndex)}\n              onChange={(checked: boolean) => {\n                const cloneSelectedRowIndices = [...selectedRowIndices]\n                if (checked) {\n                  cloneSelectedRowIndices.push(rowIndex)\n                } else {\n                  const index = cloneSelectedRowIndices.indexOf(rowIndex)\n                  if (index > -1) {\n                    cloneSelectedRowIndices.splice(index, 1)\n                  }\n                }\n                // update parent state on change\n                updateParentState!({\n                  selectedRowIndices: cloneSelectedRowIndices,\n                })\n              }}\n            ></Checkbox>\n          </td>,\n        )\n      }\n\n      const rowFormatted = <tr key={row.rowId}>{rowContent}</tr>\n      rowsFormatted.push(rowFormatted)\n    })\n    return rowsFormatted\n  }\n\n  public isSortableColumn(column: EntityColumnType) {\n    switch (column) {\n      case EntityColumnType.USERID:\n      case EntityColumnType.ENTITYID:\n      case EntityColumnType.FILEHANDLEID:\n        return false\n      default:\n        return true\n    }\n  }\n\n  private createTableHeader(\n    headers: SelectColumn[],\n    columnModels: ColumnModel[],\n    facets: FacetColumnResult[],\n    isShowingAccessColumn: boolean | undefined,\n    isRowSelectionVisible: boolean | undefined,\n    lastQueryRequest: QueryBundleRequest,\n  ) {\n    const { sortedColumnSelection, columnIconSortState } = this.state\n    const { facetAliases = {}, isColumnSelected, token, lockedFacet } = this.props\n    const tableColumnHeaderElements: JSX.Element[] = headers.map(\n      (column: SelectColumn, index: number) => {\n        const isHeaderSelected = isColumnSelected!.includes(column.name)\n        if (isHeaderSelected) {\n          // for background color\n          const isSelected: boolean =\n            this.findSelectionIndex(sortedColumnSelection, column.name) !== -1\n          // for icon state\n          const columnIndex: number =\n            columnIconSortState[index] === undefined\n              ? 0\n              : columnIconSortState[index]\n          // we have to figure out if the current column is a facet selection\n          const facetIndex: number = facets.findIndex(\n            (facetColumnResult: FacetColumnResult) => {\n              return facetColumnResult.columnName === column.name\n            },\n          )\n          // the header must be included in the facets and it has to be enumerable for current rendering capabilities\n          const isFacetSelection: boolean =\n            facetIndex !== -1 && facets[facetIndex].facetType === 'enumeration'\n          const facet = facets[facetIndex] as FacetColumnResultValues\n          const isSelectedSpanClass = isSelected\n            ? 'SRC-primary-background-color SRC-anchor-light'\n            : ''\n          const isSelectedIconClass = isSelected\n            ? 'SRC-selected-table-icon tool-icon'\n            : 'SRC-primary-text-color tool-icon'\n          const sortSpanBackgoundClass = `SRC-tableHead SRC-hand-cursor SRC-sortPadding SRC-primary-background-color-hover  ${isSelectedSpanClass}`\n          const displayColumnName: string | undefined = unCamelCase(\n            column.name,\n            facetAliases,\n          )\n          const columnModel = columnModels.find(el => el.name === column.name)!\n          const isLockedFacetColumn = column.name.toLowerCase() === lockedFacet?.facet?.toLowerCase()  // used in details page to disable filter the column\n          return (\n            <th key={column.name}>\n              <div className=\"SRC-split\">\n                <span style={{ whiteSpace: 'nowrap' }}>\n                  {displayColumnName}\n                </span>\n                <div className=\"SRC-centerContent\">\n                  {isFacetSelection && !isLockedFacetColumn &&\n                    this.configureFacetDropdown(\n                      facet,\n                      columnModel,\n                      lastQueryRequest,\n                      token,\n                      facetAliases,\n                    )}\n                  {this.isSortableColumn(column.columnType) && (\n                    <span\n                      tabIndex={0}\n                      className={sortSpanBackgoundClass}\n                      onKeyPress={this.handleColumnSortPress({\n                        index,\n                        name: column.name,\n                      })}\n                      onClick={this.handleColumnSortPress({\n                        index,\n                        name: column.name,\n                      })}\n                    >\n                      <Icon type={ICON_STATE[columnIndex]} cssClass={isSelectedIconClass}></Icon>\n                    </span>\n                  )}\n                </div>\n              </div>\n            </th>\n          )\n        } else {\n          return <th className=\"SRC-hidden\" key={column.name} />\n        }\n      },\n    )\n    // also push the access column if we are showing user access for individual items (must be logged in)\n    if (isShowingAccessColumn) {\n      tableColumnHeaderElements.unshift(\n        <th key=\"accessColumn\">\n          <div className=\"SRC-centerContent\">\n            <span style={{ whiteSpace: 'nowrap' }}>Access</span>\n          </div>\n        </th>,\n      )\n    }\n    if (isRowSelectionVisible) {\n      tableColumnHeaderElements.unshift(\n        <th key=\"rowSelectionColumn\">\n          <div className=\"SRC-centerContent\">{/* checkboxes column */}</div>\n        </th>,\n      )\n    }\n    return tableColumnHeaderElements\n  }\n\n  /**\n   * Utility to search through array of objects and find object with key \"column\"\n   * equal to input parameter \"name\"\n   *\n   * @param {*} sortedColumnSelection\n   * @param {*} name\n   * @returns -1 if not present, otherwise the index of the object\n   * @memberof SynapseTable\n   */\n  private findSelectionIndex(sortedColumnSelection: SortItem[], name: string) {\n    if (sortedColumnSelection.length !== 0) {\n      // find if the current selection exists already and remove it\n      return sortedColumnSelection.findIndex(\n        (el: SortItem) => el.column === name,\n      )\n    }\n    return -1\n  }\n\n  // Direct user to corresponding query on synapse\n  private advancedSearch(event: React.SyntheticEvent) {\n    event && event.preventDefault()\n    const lastQueryRequest = this.props.getLastQueryRequest!()\n    const { query } = lastQueryRequest\n    // base 64 encode the json of the query and go to url with the encoded object\n    const encodedQuery = btoa(JSON.stringify(query))\n    const synTable = lastQueryRequest.entityId\n    window.open(\n      `https://www.synapse.org/#!Synapse:${synTable}/tables/query/${encodedQuery}`,\n      '_blank',\n    )\n  }\n\n  private getLengthOfPropsData() {\n    const { data } = this.props\n    return data!.queryResult.queryResults.headers.length\n  }\n  /**\n   * Handles the toggle of a column select, this will cause the table to\n   * either show the column or hide depending on the prior state of the column\n   *\n   * @memberof SynapseTable\n   */\n  public toggleColumnSelection = (columnName: string) => {\n    let isColumnSelected = cloneDeep(this.props.isColumnSelected!)\n    if (isColumnSelected.includes(columnName)) {\n      isColumnSelected = isColumnSelected.filter(el => el !== columnName)\n    } else {\n      isColumnSelected.push(columnName)\n    }\n    this.props.updateParentState!({ isColumnSelected })\n  }\n\n  /**\n   * Show the dropdown menu for a column that has been faceted\n   *\n   * @param {number} index this is column index of the query table data\n   * @param {string} columnName this is the name of the column\n   * @param {FacetColumnResult[]} facetColumnResults\n   * @param {number} facetIndex\n   * @returns\n   * @memberof SynapseTable\n   */\n  public configureFacetDropdown(\n    facetColumnResult: FacetColumnResultValues,\n    columnModel: ColumnModel,\n    lastQueryRequest: QueryBundleRequest,\n    token?: string,\n    facetAliases?: {},\n  ) {\n    return (\n      <EnumFacetFilter\n        containerAs=\"Dropdown\"\n        facetValues={facetColumnResult.facetValues}\n        columnModel={columnModel!}\n        token={token}\n        facetAliases={facetAliases}\n        onChange={(facetNamesMap: {}) => {\n          applyMultipleChangesToValuesColumn(\n            lastQueryRequest,\n            facetColumnResult,\n            this.applyChangesFromQueryFilter,\n            facetNamesMap,\n          )\n        }}\n        onClear={() => {\n          applyChangesToValuesColumn(\n            lastQueryRequest,\n            facetColumnResult,\n            this.applyChangesFromQueryFilter,\n          )\n        }}\n      />\n    )\n  }\n\n  public applyChangesFromQueryFilter = (facets: FacetColumnRequest[]) => {\n    const queryRequest: QueryBundleRequest = this.props.getLastQueryRequest!()\n    queryRequest.query.selectedFacets = facets\n    queryRequest.query.offset = 0\n    this.setState({ isUserModifiedQuery: true })\n    this.props.executeQueryRequest!(queryRequest)\n  }\n}\ntype ColumnReference = {\n  index: number\n  name: string\n}\n","import React, { useState } from 'react'\nimport {\n  QueryBundleRequest,\n  QueryResultBundle,\n} from '../../../utils/synapseTypes'\nimport { TransformSqlWithFacetsRequest } from '../../../utils/synapseTypes/Table/TransformSqlWithFacetsRequest'\nimport useDeepCompareEffect from 'use-deep-compare-effect'\nimport { getTransformSqlWithFacetsRequest } from '../../../utils/SynapseClient'\nimport { Modal, ModalBody } from 'react-bootstrap'\nimport ModalHeader from 'react-bootstrap/ModalHeader'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faQuestionCircle)\n\ntype ProgrammaticOptionsProps = {\n  queryBundleRequest: QueryBundleRequest\n  queryResultBundle: QueryResultBundle\n  onHide: Function\n}\n\nfunction ProgrammaticOptions({\n  queryBundleRequest,\n  queryResultBundle,\n  onHide,\n}: ProgrammaticOptionsProps) {\n  const [generatedSql, setGeneratedSql] = useState('')\n\n  useDeepCompareEffect(() => {\n    const getData = async () => {\n      const { query } = queryBundleRequest\n      const { sql, selectedFacets = [] } = query\n      const { columnModels } = queryResultBundle\n      if (!columnModels) {\n        console.error(\n          'Column Models must be included to complete transform sql request',\n        )\n      }\n      const transformSqlWithFacetsRequest: TransformSqlWithFacetsRequest = {\n        concreteType:\n          'org.sagebionetworks.repo.model.table.TransformSqlWithFacetsRequest',\n        sqlToTransform: sql,\n        selectedFacets,\n        schema: columnModels!,\n      }\n\n      try {\n        const res = await getTransformSqlWithFacetsRequest(\n          transformSqlWithFacetsRequest,\n        )\n        setGeneratedSql(res.transformedSql.replace(/\"/g, '\\\\\"'))\n      } catch (e) {\n        console.error('Error on getTransformSqlWithFacetsRequest ', e)\n      }\n    }\n    getData()\n  }, [queryBundleRequest, queryResultBundle])\n\n  return (\n    <Modal\n      animation={false}\n      show={true}\n      onHide={() => onHide()}\n      className=\"ProgrammaticOptions\"\n    >\n      <ModalHeader closeButton>\n        <span style={{ color: '#515359', fontSize: '1.5em' }}>\n          Download Options\n        </span>\n      </ModalHeader>\n      <ModalBody>\n        <p className=\"ProgrammaticOptions__commandline\">\n          Command Line Instructions\n        </p>\n        <p>\n          Use the Synapse command line client to download data. Installation\n          instructions are available\n          <a\n            className=\"ProgrammaticOptions__docslink\"\n            href=\"https://docs.synapse.org/articles/tutorial-download-data-portal.html#command-line\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {' '}\n            here.\n          </a>\n        </p>\n        <div className=\"ProgrammaticOptions__cli\">\n          <p> synapse get -q \"{generatedSql}\" </p>\n        </div>\n      </ModalBody>\n    </Modal>\n  )\n}\n\nexport default ProgrammaticOptions\n","export enum ColumnSingleValueFilterOperator {\n  LIKE = 'LIKE', // The LIKE operation. Use wildcard '%' in value sting for prefix/suffix matching.\n}\n\nexport interface ColumnSingleValueQueryFilter extends QueryFilter {\n  concreteType: 'org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter'\n  operator: ColumnSingleValueFilterOperator // Determines the filter operation to perform\n  values: string[] // Values to used with the filter.\n  // Multiple values will be joined in an OR relationship.\n}\n\nexport interface QueryFilter {\n  concreteType: string\n  columnName: string\n  operator: string\n  values: string[]\n}\n","import * as React from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport { LockedFacet, QueryWrapperChildProps } from './QueryWrapper'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faCaretDown,\n  faCaretUp,\n  faSearch,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { unCamelCase } from '../utils/functions/unCamelCase'\nimport { ColumnModel, ColumnType } from '../utils/synapseTypes'\nimport {\n  ColumnSingleValueQueryFilter,\n  ColumnSingleValueFilterOperator,\n  QueryFilter,\n} from '../utils/synapseTypes/Table/QueryFilter'\n\nlibrary.add(faCaretDown)\nlibrary.add(faCaretUp)\nlibrary.add(faSearch)\nlibrary.add(faTimes)\n\ntype SearchState = {\n  show: boolean\n  /* \n    When the component is revealed in queryplotnav we want to focus on the input field and reveal the dropdown\n    there is an issue where the method handleClickOutsideForm will override the state from componentDidUpdate\n    so we track when componentDidUpdate just fired so that `show` is not overriden on the click event which\n    triggers componentDidUpdate \n  */\n  didUpdateRanLast: boolean\n  searchText: string\n  columnName: string\n}\n\nexport type SearchableColumnsV2 = string[]\n\nexport type SearchV2Props = {\n  isQueryWrapperMenuChild?: boolean\n  defaultColumn?: string\n  searchable?: SearchableColumnsV2\n  lockedFacet?: LockedFacet\n}\n\ntype InternalSearchProps = QueryWrapperChildProps & SearchV2Props\n\nclass Search extends React.Component<InternalSearchProps, SearchState> {\n  public searchFormRef: React.RefObject<HTMLFormElement>\n  public radioFormRef: React.RefObject<HTMLFormElement>\n\n  constructor(props: InternalSearchProps) {\n    super(props)\n    this.state = {\n      show: false,\n      didUpdateRanLast: false,\n      searchText: '',\n      columnName: this.props.defaultColumn ?? '',\n    }\n    this.searchFormRef = React.createRef()\n    this.radioFormRef = React.createRef()\n  }\n\n  componentDidMount() {\n    // @ts-ignore\n    document.addEventListener('click', this.handleClickOutsideForm)\n  }\n\n  componentDidUpdate(prevProps: InternalSearchProps) {\n    if (\n      !prevProps.topLevelControlsState?.showSearchBar &&\n      this.props.topLevelControlsState?.showSearchBar\n    ) {\n      this.setState({\n        show: true,\n        didUpdateRanLast: true,\n      })\n      this.searchFormRef?.current?.querySelector('input')?.focus()\n    }\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    document.removeEventListener('click', this.handleClickOutsideForm)\n  }\n\n  handleClickOutsideForm = (event: React.SyntheticEvent) => {\n    if (\n      // @ts-ignore\n      !this.searchFormRef.current?.contains(event?.target) &&\n      // @ts-ignore\n      !this.radioFormRef.current?.contains(event?.target)\n    ) {\n      if (this.state.didUpdateRanLast) {\n        this.setState({\n          didUpdateRanLast: false,\n        })\n      } else {\n        this.setState({\n          show: false,\n        })\n      }\n    }\n  }\n\n  public static addEscapeCharacters = (searchText: string) => {\n    // We have to escape the following characters\n    // ' % \\\n    let escapedSearchText = searchText\n    // escape ' by adding additional '\n    escapedSearchText = escapedSearchText.split(\"'\").join(\"''\")\n    // escape % by adding \\\n    escapedSearchText = escapedSearchText.split('%').join(`\\%`)\n    // escape \\ by adding \\\n    escapedSearchText = escapedSearchText.split('\\\\').join('\\\\\\\\')\n    return escapedSearchText\n  }\n\n  public search = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    // form completion by default causes the page to reload, so we prevent that\n    event.preventDefault()\n    const { searchText } = this.state\n    let { columnName } = this.state\n    const { searchable, lockedFacet } = this.props\n    if (columnName === '') {\n      if (searchable) {\n        // If searchable column names are defined in the config, grab the first one (that is not locked)\n        columnName = searchable.filter(colName => colName !== lockedFacet?.facet)[0]        \n      } else {\n        // Otherwise, get the first column model that can be searched.\n        // And for study details page: if lockedFacet is defined, remove it from the search\n        const searchableColumnModels = this.props.data?.columnModels?.filter(el => el.name !== lockedFacet?.facet)\n            .filter(el => this.isSupportedColumn(el))\n        columnName = searchableColumnModels?.[0].name ?? ''\n      }\n    }\n    this.setState({\n      show: false,\n    })\n    const { executeQueryRequest, getLastQueryRequest } = this.props\n\n    const lastQueryRequestDeepClone = getLastQueryRequest!()\n\n    const { additionalFilters = [] } = lastQueryRequestDeepClone.query\n\n    const indexOfColumn = additionalFilters.findIndex((el: QueryFilter) => {\n      if (el.columnName === columnName) {\n        return true\n      }\n      return false\n    })\n    if (indexOfColumn === -1) {\n      const columnSingleValueQueryFilter: ColumnSingleValueQueryFilter = {\n        columnName,\n        operator: ColumnSingleValueFilterOperator.LIKE,\n        values: [`%${searchText}%`],\n        concreteType:\n          'org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter',\n      }\n      additionalFilters.push(columnSingleValueQueryFilter)\n    } else {\n      additionalFilters[indexOfColumn].values.push(searchText)\n    }\n    lastQueryRequestDeepClone.query.additionalFilters = additionalFilters\n    executeQueryRequest!(lastQueryRequestDeepClone)\n  }\n\n  public handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.setState({\n      searchText: event.currentTarget.value,\n    })\n  }\n\n  public isSupportedColumn = (columnModel?: ColumnModel) => {\n    switch (columnModel?.columnType) {\n      case ColumnType.FILEHANDLEID:\n      case ColumnType.ENTITYID:\n      case ColumnType.DATE:\n      case ColumnType.DATE_LIST:\n      case ColumnType.USERID:\n        return false\n      default:\n        return true\n    }\n  }\n\n  public isSupportedColumnAndInProps = (columnModel?: ColumnModel) => {\n    if (this.isSupportedColumn(columnModel)) {\n        // return true if the searchable array contains this column name\n        const { searchable } = this.props\n        return searchable?.some(e => e === columnModel?.name)\n    }\n    return false\n  }\n\n  render() {\n    const { data, topLevelControlsState, facetAliases, searchable, lockedFacet } = this.props\n    const { searchText, show, columnName } = this.state\n    let searchColumns: string[] = []\n\n    // searchable specifies the order of the columns to search\n    if (searchable) {\n      searchColumns = searchable\n        .map(el =>\n          data?.columnModels?.find(model => model.name === el),\n        )\n        .filter(this.isSupportedColumnAndInProps)\n        .map(el => el!.name)\n    } else if (data?.columnModels) {\n      searchColumns = data.columnModels\n        ?.filter(this.isSupportedColumn)\n        .map(el => el.name)\n    }\n\n    // For study details page: if lockedFacet is defined, remove it from the radio dropdown\n    if (searchColumns.length && lockedFacet?.facet) {\n      searchColumns = searchColumns.filter(el => el !== lockedFacet?.facet)\n    }\n\n    return (\n      <div className=\"SearchV2\">\n        <CSSTransition\n          in={topLevelControlsState?.showSearchBar}\n          classNames=\"SearchV2__animate_bar\"\n          timeout={{ enter: 0, exit: 300 }}\n        >\n          <div className=\"SearchV2__animate_height\">\n            <form\n              className=\"SearchV2__searchbar\"\n              onSubmit={this.search}\n              onClick={() => {\n                this.setState({ show: true })\n              }}\n              ref={this.searchFormRef}\n            >\n              <FontAwesomeIcon\n                className=\"SearchV2__searchbar__searchicon\"\n                size={'sm'}\n                icon={'search'}\n              />\n              <input\n                onChange={this.handleChange}\n                onClick={() => {\n                  this.setState({\n                    show: true,\n                  })\n                }}\n                placeholder=\"Enter Search Terms\"\n                value={searchText}\n                type=\"text\"\n              />\n              {this.state.searchText.length > 0 && (\n                <button\n                  className=\"SearchV2__searchbar__clearbutton\"\n                  type=\"button\"\n                  onClick={() => {\n                    this.setState({\n                      searchText: '',\n                    })\n                  }}\n                >\n                  <FontAwesomeIcon\n                    className=\"SRC-primary-text-color\"\n                    icon=\"times\"\n                  />\n                </button>\n              )}\n            </form>\n          </div>\n        </CSSTransition>\n        <div className=\"SearchV2__dropdown_pos\">\n          <CSSTransition\n            in={show}\n            classNames=\"SearchV2__animate_dropdown\"\n            timeout={{ enter: 0, exit: 300 }}\n          >\n            <form\n              ref={this.radioFormRef}\n              className=\"SearchV2__column-select SearchV2__animate_height\"\n            >\n              <p className=\"deemphasized\">\n                <i> Search In Field: </i>\n              </p>\n              {searchColumns.map((name, index) => {\n                const displayName = unCamelCase(name, facetAliases)\n                const isSelected =\n                  (columnName === '' && index === 0) || columnName === name\n                return (\n                  <div className=\"radio\">\n                    <label>\n                      <span>\n                        <input\n                          id={name}\n                          type=\"radio\"\n                          value={name}\n                          checked={isSelected}\n                          onClick={() => {\n                            this.searchFormRef?.current?.querySelector('input')?.focus()\n                            this.setState({\n                              columnName: name,\n                            })\n                          }}\n                        />\n                        <span>{displayName}</span>\n                      </span>\n                    </label>\n                  </div>\n                )\n              })}\n            </form>\n          </CSSTransition>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Search\n","import { library } from '@fortawesome/fontawesome-svg-core'\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport * as React from 'react'\nimport ReactMeasure from 'react-measure'\nimport ReactTooltip from 'react-tooltip'\nimport { getColorPallette } from './ColorGradient'\nimport { QueryWrapperChildProps } from './QueryWrapper'\nimport {\n  FacetColumnResultValueCount,\n  QueryResultBundle,\n} from '../utils/synapseTypes/'\nimport { getIsValueSelected } from '../utils/functions/facetUtils'\nimport { unCamelCase } from '../utils/functions/unCamelCase'\nimport loadingScreen from './LoadingScreen'\nlibrary.add(faAngleLeft)\nlibrary.add(faAngleRight)\n\nexport const PREVIOUS_ITEM_CLICK = 'left click'\nexport const NEXT_CLICK = 'right click'\n\ntype Rect = {\n  height: number\n  width: number\n  top: number\n  left: number\n  right: number\n  bottom: number\n}\n\ntype MeasureRect = {\n  bounds: Rect\n}\n\nexport type StackedBarChartState = {\n  selectedFacets: {}\n  dimensions: MeasureRect\n}\n\nexport type StackedBarChartProps = {\n  link?: string\n  linkText?: string\n}\n\ntype Info = {\n  value: string\n  count: number\n  index: number\n}\n\ntype InternalProps = StackedBarChartProps & QueryWrapperChildProps\n/**\n * Make a simple stacked bar chart\n *\n * @class StackedBarChart\n * @extends {React.Component}\n */\nexport default class StackedBarChart extends React.Component<\n  InternalProps,\n  StackedBarChartState\n> {\n  constructor(props: InternalProps) {\n    super(props)\n    this.handleHover = this.handleHover.bind(this)\n    this.handleExit = this.handleExit.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.handleArrowClick = this.handleArrowClick.bind(this)\n    this.getTextForChartSelection = this.getTextForChartSelection.bind(this)\n    this.onMeasureResize = this.onMeasureResize.bind(this)\n    // the text currently under the cursor\n    this.state = {\n      // the dimensions of the bar chart itself\n      dimensions: {\n        bounds: { height: 1, width: 1, top: 0, left: 0, right: 0, bottom: 0 },\n      },\n      // the text of the current slice\n      // the count of this facet value occurence\n      selectedFacets: {},\n    }\n    this.extractPropsData = this.extractPropsData.bind(this)\n  }\n\n  /**\n   * Updates the hover text and update the view\n   *\n   * @memberof StackedBarChart\n   */\n  public handleHover(event: React.MouseEvent<SVGRectElement>) {\n    // add box shadow\n    event.currentTarget.style.boxShadow = '25px 20px'\n  }\n\n  /**\n   * Update the hover text and the view\n   *\n   * @param {*} event\n   * @memberof StackedBarChart\n   */\n  public handleExit(event: React.MouseEvent<SVGRectElement>) {\n    // remove box shadow\n    event.currentTarget.style.boxShadow = ''\n  }\n\n  /**\n   * Handle column click event\n   */\n  public handleClick = (dict: Info) => (\n    _event: React.MouseEvent<SVGElement>,\n  ) => {\n    // https://medium.freecodecamp.org/reactjs-pass-parameters-to-event-handlers-ca1f5c422b9\n    this.props.updateParentState!({ chartSelectionIndex: dict.index })\n  }\n\n  public handleArrowClick = (direction: string) => (\n    _event: React.MouseEvent,\n  ) => {\n    let { chartSelectionIndex = 0 } = this.props\n    let dict: any = this.extractPropsData(this.props.data)\n    const length = Object.keys(dict).length\n    if (direction === PREVIOUS_ITEM_CLICK) {\n      chartSelectionIndex -= 1\n      // if its at zero then we want to wrap around to the end\n      chartSelectionIndex =\n        chartSelectionIndex < 0 ? length - 1 : chartSelectionIndex\n    } else {\n      chartSelectionIndex += 1\n    }\n    chartSelectionIndex = chartSelectionIndex % length\n\n    dict = dict[chartSelectionIndex]\n    this.props.updateParentState!({ chartSelectionIndex })\n    // return is only for testing purposes\n    return chartSelectionIndex\n  }\n\n  public getTextForChartSelection(xData: any) {\n    const { chartSelectionIndex = 0 } = this.props\n    const { facetAliases = {}, facet } = this.props\n    const facetValueDisplay =\n      xData[chartSelectionIndex] && xData[chartSelectionIndex].value\n    const filterDisplay = facetAliases[facet!] || unCamelCase(facet)\n    return (\n      <span>\n        <span className=\"SRC-text-title SRC-filter-display\">\n          {filterDisplay}\n        </span>\n        :\n        <span className=\"SRC-facet-view SRC-text-title\">\n          {facetValueDisplay === 'org.sagebionetworks.UNDEFINED_NULL_NOTSET'\n            ? 'Unannotated'\n            : facetValueDisplay}\n        </span>\n      </span>\n    )\n  }\n\n  public getFileCount(xData: any) {\n    const { chartSelectionIndex = 1 } = this.props\n    return xData[chartSelectionIndex] && xData[chartSelectionIndex].count\n  }\n\n  public render() {\n    const {\n      data,\n      isLoadingNewData,\n      rgbIndex,\n      facet = '',\n      unitDescription,\n      isLoading,\n      lastFacetSelection,\n      isAllFilterSelectedForFacet,\n      chartSelectionIndex,\n      asyncJobStatus,\n    } = this.props\n    // while loading\n    if (isLoadingNewData) {\n      return (\n        <div className=\"SRC-loadingContainer SRC-centerContentColumn\">\n          {loadingScreen}\n          <div>{asyncJobStatus && asyncJobStatus.progressMessage}</div>\n        </div>\n      )\n    }\n    const xData = this.extractPropsData(data)\n    let total: number = 0\n    const width: number = this.state.dimensions.bounds!.width\n    // sum up the counts of data\n    for (const key in xData) {\n      if (xData.hasOwnProperty(key)) {\n        total += xData[key].count\n      }\n    }\n    const { colorPalette, textColors } = getColorPallette(\n      rgbIndex!,\n      xData.length,\n    )\n    const originalColor = colorPalette[0]\n\n    return (\n      <React.Fragment>\n        {/* TODO: Refactor the chart into its own component */}\n        <div className=\"SRC-bar-border SRC-bar-marginTop SRC-bar-border-top\">\n          <ReactMeasure\n            bounds={true}\n            onResize={(contentRect: any) => {\n              this.setState({ dimensions: contentRect })\n            }}\n          >\n            {({ measureRef }) => (\n              <div className=\"SRC-flex\" ref={measureRef}>\n                {xData.map((obj: FacetColumnResultValueCount, index) => {\n                  const textColor: string = textColors[index]\n                  const rgbColor: string = colorPalette[index]\n                  let rectStyle: any\n                  const isValueSelected = isAllFilterSelectedForFacet![facet]\n                    ? true\n                    : getIsValueSelected({\n                        isLoading,\n                        lastFacetSelection,\n                        columnName: facet,\n                        curFacetSelection: obj,\n                      })\n                  if (isValueSelected) {\n                    rectStyle = {\n                      fill: rgbColor,\n                    }\n                  } else {\n                    rectStyle = {\n                      fill: '#C4C4C4',\n                    }\n                  }\n                  const svgHeight = 80\n                  const svgWidth = (obj.count / total) * width\n                  const style: any = {}\n                  if (chartSelectionIndex === index) {\n                    style.filter = 'drop-shadow(5px 5px 5px rgba(0,0,0,0.5))'\n                  }\n                  const label: string = `${facet}: ${obj.value}  - ${obj.count} ${unitDescription}`\n                  // there was one bug where a new line character was in the obj.value, making data-for\n                  // break because its a special character, below we remove that\n                  const tooltipId = obj.value.replace(/(\\r\\n|\\n|\\r)/gm, '')\n                  // basic heuristic to calculate the number of pixels needed to show the value on the bar chart\n                  const value = obj.count as number\n                  const numCharsInValue = value.toString().length * 4.5 // represents width of a character\n\n                  return (\n                    // each svg represents one of the bars\n                    // will need to change this to be responsive\n                    <React.Fragment key={label}>\n                      <span data-for={tooltipId} data-tip={label}>\n                        <svg\n                          className=\"SRC-hoverBox\"\n                          height={svgHeight + 15}\n                          width={svgWidth}\n                          style={style}\n                          onClick={this.handleClick({ ...obj, index })}\n                        >\n                          <rect\n                            onMouseEnter={this.handleHover}\n                            onMouseLeave={this.handleExit}\n                            height={svgHeight}\n                            width={svgWidth}\n                            className=\"SRC-chart-rect-style\"\n                            // can't remove inline style due to dynamic fill\n                            style={rectStyle}\n                          />\n                          {index < 3 && svgWidth > numCharsInValue && (\n                            <text\n                              textAnchor=\"middle\"\n                              className=\"SRC-text-title\"\n                              fontFamily={'bold sans-serif'}\n                              fill={textColor}\n                              x={'50%'}\n                              y={'50%'}\n                            >\n                              {obj.count}\n                            </text>\n                          )}\n                          {chartSelectionIndex === index && (\n                            <text\n                              fill={originalColor}\n                              x={0}\n                              y={svgHeight + 15}\n                              className=\"SRC-text-shadow SRC-text-large\"\n                            >\n                              {'\\u25CF'}\n                            </text>\n                          )}\n                        </svg>\n                      </span>\n                      <ReactTooltip delayShow={1000} id={tooltipId} />\n                    </React.Fragment>\n                  )\n                })}\n              </div>\n            )}\n          </ReactMeasure>\n        </div>\n        <div className=\"SRC-bar-border SRC-bar-border-bottom\">\n          <p className=\"SRC-noMargin SRC-padding-chart SRC-text-title\">\n            <strong>{this.getTextForChartSelection(xData)}</strong>\n          </p>\n          <p\n            id=\"fileCount\"\n            className=\"SRC-noMargin SRC-padding-chart SRC-text-chart\"\n          >\n            {this.getFileCount(xData)} {unitDescription}\n          </p>\n          {this.props.link && (\n            <div className=\"SRC-chart-link\">\n              <a href={`/${this.props.link}`}> {this.props.linkText} </a>\n            </div>\n          )}\n        </div>\n        <div className=\"SRC-chart-nav SRC-center-text\">\n          <button\n            className=\"SRC-chart-btn SRC-floatRight\"\n            type=\"button\"\n            onClick={this.handleArrowClick(NEXT_CLICK)}\n          >\n            <FontAwesomeIcon\n              style={{ fontSize: '11px' }}\n              className=\"SRC-primary-text-color\"\n              icon=\"angle-right\"\n            />\n          </button>\n          <button\n            className=\"SRC-chart-btn SRC-floatRight\"\n            type=\"button\"\n            onClick={this.handleArrowClick(PREVIOUS_ITEM_CLICK)}\n          >\n            <FontAwesomeIcon\n              style={{ fontSize: '11px' }}\n              className=\"SRC-primary-text-color\"\n              icon=\"angle-left\"\n            />\n          </button>\n        </div>\n      </React.Fragment>\n    )\n  }\n  public extractPropsData(data?: QueryResultBundle) {\n    const xData: any[] = []\n    const { facet } = this.props\n    // pull out the data corresponding to the filter in question\n    data?.facets?.forEach((item: any) => {\n      if (item.facetType === 'enumeration' && item.columnName === facet) {\n        item.facetValues.forEach((facetValue: any) => {\n          if (item.columnName) {\n            xData.push({ columnName: item.columnName, ...facetValue })\n          }\n        })\n      }\n    })\n    // sort the data so that the largest bars are at the front\n    xData.sort((a, b) => {\n      return b.count - a.count\n    })\n    return xData\n  }\n\n  public onMeasureResize(contentRect: any) {\n    this.setState({ dimensions: contentRect })\n  }\n}\n","// EntityForm:\n// Will generate a Form (based on your schema files).\n// Gathers user input (including files)\n// Will give you the Synapse ID of the FileEntity that contains the user form data.\nimport * as React from 'react'\nimport Form from 'react-jsonschema-form'\nimport { SynapseClient } from '../utils'\nimport {\n  EntityId,\n  EntityLookupRequest,\n  FileEntity,\n  UserProfile,\n} from '../utils/synapseTypes/'\n\nexport type EntityFormProps = {\n  // Provide the parent container (folder/project), that should contain a folder (named <user_id>) that this user can write to.\n  parentContainerId: string\n  formSchemaEntityId: string // Synapse file that contains the form schema.\n  formUiSchemaEntityId: string // Synapse file that contains the form ui schema.\n  initFormData: boolean // If true, it indicates that you’d like to download and pre-fill the form with the user's previous response.\n  token?: string // user's session token\n  synIdCallback: (synId: string) => void // callback.  Once the form output has been saved to a FileEntity, will send synID back\n}\ntype EntityFormState = {\n  error?: any\n  isLoading?: boolean\n  successfullyUploaded: boolean\n  containerId?: string\n  userprofile?: UserProfile\n  currentFileEntity?: FileEntity // file holding user form data\n  formData?: any // form data that prepopulates the form\n  formSchema?: any // schema that drives the form\n  formUiSchema?: any // ui schema that directs how to render the form elements\n}\n\nexport default class EntityForm extends React.Component<\n  EntityFormProps,\n  EntityFormState\n> {\n  formRef: any\n\n  constructor(props: EntityFormProps) {\n    super(props)\n    this.formRef = React.createRef()\n    this.state = {\n      isLoading: true,\n      successfullyUploaded: false,\n    }\n  }\n\n  componentDidMount() {\n    this.refresh()\n  }\n\n  componentDidUpdate(prevProps: any) {\n    const shouldUpdate = this.props.token !== prevProps.token\n    if (shouldUpdate) {\n      this.refresh()\n    }\n  }\n\n  submitForm = () => {\n    this.formRef.current.submit()\n  }\n\n  refresh = () => {\n    if (this.props.token) {\n      const promises = [\n        SynapseClient.getUserProfile(this.props.token),\n        SynapseClient.getEntity(\n          this.props.token,\n          this.props.formSchemaEntityId,\n        ),\n        SynapseClient.getEntity(\n          this.props.token,\n          this.props.formUiSchemaEntityId,\n        ),\n      ] as Promise<any>[]\n      Promise.all(promises)\n        .then(values => {\n          const userprofile: UserProfile = values[0]\n          this.getTargetContainer(userprofile, this.props.token!).then(\n            // @ts-ignore\n            (targetContainerId: string) => {\n              const formSchemaFileEntity: FileEntity = values[1]\n              const formUiSchemaFileEntity: FileEntity = values[2]\n              this.getSchemaFileContent(\n                targetContainerId,\n                formSchemaFileEntity,\n                formUiSchemaFileEntity,\n              )\n            },\n          )\n        })\n        .catch(error => {\n          this.onError(error)\n        })\n    }\n  }\n\n  getSchemaFileContent = (\n    targetFolderId: string,\n    formSchemaFileEntity: FileEntity,\n    formUiSchemaFileEntity: FileEntity,\n  ) => {\n    const promises = [\n      SynapseClient.getFileEntityContent(\n        this.props.token!,\n        formSchemaFileEntity,\n      ),\n      SynapseClient.getFileEntityContent(\n        this.props.token!,\n        formUiSchemaFileEntity,\n      ),\n    ]\n    Promise.all(promises)\n      .then(values => {\n        const formSchemaContent = JSON.parse(values[0])\n        const formUiSchemaContent = JSON.parse(values[1])\n        this.getExistingFileData(\n          targetFolderId,\n          formSchemaContent,\n          formUiSchemaContent,\n        )\n      })\n      .catch(error => {\n        this.onError(error)\n      })\n  }\n\n  getExistingFileData = (\n    targetFolderId: string,\n    formSchemaContent: any,\n    formUiSchemaContent: any,\n  ) => {\n    // if data already exists, save a reference to the existing entity and prefill the form\n    const fileName = `${formSchemaContent.title}.json`\n    const entityLookupRequest = {\n      entityName: fileName,\n      parentId: targetFolderId,\n    }\n    let formData: any\n    let currentFileEntity: FileEntity\n    SynapseClient.lookupChildEntity(entityLookupRequest, this.props.token)\n      .then((entityId: EntityId) => {\n        // ok, found the existing file\n        return SynapseClient.getEntity<FileEntity>(\n          this.props.token,\n          entityId.id,\n        ).then(entity => {\n          currentFileEntity = entity\n          if (this.props.initFormData) {\n            return SynapseClient.getFileEntityContent(\n              this.props.token!,\n              currentFileEntity,\n            ).then(existingFileData => {\n              formData = JSON.parse(existingFileData)\n            })\n          }\n          // else we're done\n          return Promise.resolve()\n        })\n      })\n      .finally(() => {\n        this.setState({\n          formData,\n          currentFileEntity,\n          formSchema: formSchemaContent,\n          formUiSchema: formUiSchemaContent,\n        })\n      })\n  }\n\n  getTargetContainer = async (userprofile: UserProfile, token: string) => {\n    const entityLookupRequest: EntityLookupRequest = {\n      entityName: userprofile.ownerId,\n      parentId: this.props.parentContainerId,\n    }\n    try {\n      const entityId = await SynapseClient.lookupChildEntity(\n        entityLookupRequest,\n        token,\n      )\n      // ok, found an entity of the same name.\n      console.log(\n        `EntityForm uploading to https://www.synapse.org/#!Synapse:${entityId.id}`,\n      )\n      this.setState({\n        userprofile,\n        containerId: entityId.id,\n        isLoading: false,\n      })\n      return entityId.id\n    } catch (error) {\n      if (error.status === 404) {\n        return this.onError(\n          new Error(\n            'Your folder has not yet been set up, please retry in a few minutes.',\n          ),\n        )\n      }\n      // else\n      return this.onError(error)\n    }\n  }\n\n  finishedProcessing = () => {\n    this.setState({\n      isLoading: false,\n      successfullyUploaded: true,\n    })\n  }\n\n  onError = (error: any) => {\n    this.setState({\n      error,\n      isLoading: false,\n      successfullyUploaded: false,\n    })\n  }\n\n  onSubmit = ({ formData }: any) => {\n    this.setState({\n      isLoading: true,\n      successfullyUploaded: false,\n    })\n\n    const submissionFileAndForm: Blob = new Blob([JSON.stringify(formData)], {\n      type: 'text/json',\n    })\n    this.createEntityFile(submissionFileAndForm)\n  }\n\n  createEntityFile = (fileContentsBlob: Blob) => {\n    const fileName = `${this.state.formSchema.title}.json`\n    SynapseClient.uploadFile(this.props.token, fileName, fileContentsBlob)\n      .then(fileUploadComplete => {\n        // do we need to create a new file entity, or update an existing file entity?\n        const newFileHandleId = fileUploadComplete.fileHandleId\n        if (this.state.currentFileEntity) {\n          this.state.currentFileEntity.dataFileHandleId = newFileHandleId\n          return SynapseClient.updateEntity(\n            this.state.currentFileEntity,\n            this.props.token,\n          )\n        }\n        // else, it's a new file entity\n        const newFileEntity: FileEntity = {\n          parentId: this.state.containerId!,\n          name: fileName,\n          concreteType: 'org.sagebionetworks.repo.model.FileEntity',\n          dataFileHandleId: newFileHandleId,\n        }\n        return SynapseClient.createEntity(newFileEntity, this.props.token)\n      })\n      .then(fileEntity => {\n        // by this point we've either found and updated the existing file entity, or created a new one.\n        this.finishedProcessing()\n        if (this.props.synIdCallback) {\n          this.props.synIdCallback(fileEntity.id!)\n        }\n      })\n      .catch((error: any) => {\n        this.onError(error)\n      })\n  }\n\n  render() {\n    return (\n      <div>\n        {this.state.error && (\n          <div className=\"panel panel-danger errors\">\n            <div className=\"panel-heading\">\n              <h3 className=\"panel-title\">Error</h3>\n            </div>\n            <ul className=\"list-group\">\n              <li className=\"list-group-item text-danger\">\n                {this.state.error.name} {this.state.error.reason}\n                {this.state.error.message}\n              </li>\n            </ul>\n          </div>\n        )}\n        {this.props.token &&\n          !this.state.isLoading &&\n          !this.state.successfullyUploaded &&\n          this.state.formSchema &&\n          this.state.formUiSchema &&\n          !this.state.error && (\n            <Form\n              formData={this.state.formData}\n              schema={this.state.formSchema}\n              uiSchema={this.state.formUiSchema}\n              onSubmit={this.onSubmit}\n              showErrorList={true}\n              ref={this.formRef}\n            >\n              <div style={{ display: 'none' }}>\n                <button type=\"submit\" className=\"btn btn-info\">\n                  Submit\n                </button>\n              </div>\n            </Form>\n          )}\n        {!this.state.error && this.props.token && this.state.isLoading && (\n          <React.Fragment>\n            <span>Saving&hellip;</span>\n            <span style={{ marginLeft: '2px' }} className={'spinner'} />\n          </React.Fragment>\n        )}\n      </div>\n    )\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  BatchFileRequest,\n  FileHandleAssociateType,\n  FileEntity,\n  ExternalFileHandle,\n  assertIsExternalFileHandle,\n  assertIsFileEntity,\n} from '../utils/synapseTypes'\nimport { SynapseClient } from '../utils/'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nlibrary.add(faExternalLinkAlt)\n\nexport type ExternalFileHandleLinkProps = {\n  synId: string\n  token?: string\n  className?: string\n}\n\nexport const ExternalFileHandleLink = (props: ExternalFileHandleLinkProps) => {\n  const { synId, token, className } = props\n  const [data, setData] = useState<\n    | { fileEntity: FileEntity; externalFileHandle: ExternalFileHandle }\n    | undefined\n  >(undefined)\n  useEffect(() => {\n    const getEntity = async () => {\n      try {\n        const fileEntity = await SynapseClient.getEntity<FileEntity>(\n          token,\n          synId,\n        )\n        assertIsFileEntity(fileEntity)\n        const batchFileRequest: BatchFileRequest = {\n          requestedFiles: [\n            {\n              associateObjectId: synId,\n              associateObjectType: FileHandleAssociateType.FileEntity,\n              fileHandleId: fileEntity.dataFileHandleId,\n            },\n          ],\n          includeFileHandles: true,\n          includePreSignedURLs: false,\n          includePreviewPreSignedURLs: false,\n        }\n        const file = await SynapseClient.getFiles(batchFileRequest, token)\n        const externalFileHandle = file.requestedFiles[0].fileHandle\n        assertIsExternalFileHandle(externalFileHandle)\n        setData({\n          externalFileHandle,\n          fileEntity,\n        })\n      } catch (e) {\n        console.error('Error on getting external file handle = ', e)\n      }\n    }\n    getEntity()\n  }, [synId, token])\n\n  const externalFileHandle = data?.externalFileHandle\n  const fileEntity = data?.fileEntity\n\n  return externalFileHandle ? (\n    <a\n      href={externalFileHandle.externalURL}\n      className={className}\n      target=\"_blank\"\n    >\n      <span>\n        {fileEntity?.name}\n        <FontAwesomeIcon style={{ marginLeft: 5 }} icon=\"external-link-alt\" />\n      </span>\n    </a>\n  ) : (\n    <></>\n  )\n}\n","export enum StepStateEnum {\n  TODO,\n  PROGRESS,\n  COMPLETED,\n  EXCLUDED,\n  ERROR,\n}\n\nexport type Step = {\n  id: string\n  title: string\n  order: number\n  state: StepStateEnum\n  inProgress: boolean\n  rules?: any[]\n  validationRules?: any[]\n  default: string\n  excluded?: boolean\n  final?: boolean\n  description?: string\n  copy?: string\n  static?: boolean\n  child?: boolean\n  children?: string[]\n}\n\nexport enum NavActionEnum {\n  PREVIOUS,\n  NEXT,\n  GO_TO_STEP,\n  SAVE,\n  SUBMIT,\n  VALIDATE,\n  NONE,\n}\n\nexport enum StatusEnum {\n  PROGRESS,\n  ERROR,\n  SAVE_SUCCESS,\n  SUBMIT_SUCCESS,\n  ERROR_CRITICAL,\n}\n\nexport interface SummaryFormat {\n  screen: Step\n  label: string\n  value: string\n}\n\nexport type FormSchema = {\n  properties?: any\n  definitions?: any\n}\n\nexport interface IRulesEvent {\n  type: string\n  params: any\n}\nexport interface IRulesNavigationEvent extends IRulesEvent {\n  params: {\n    next: string\n  }\n}\n\nexport interface IRulesValidationEvent extends IRulesEvent {\n  params: {\n    message: string\n    name: string\n    property: string\n  }\n}\n\nexport interface IAdditionalError {\n  screen: string\n  field: string\n  message: string\n}\n","import * as React from 'react'\n\nexport type HeaderProps = {\n  isSubmitted?: boolean\n  bodyText?: string //should never take user input only use cardcoded text from a parent component. Uses dangerouslySetInnerHTML\n  title: string\n}\n\nexport default function Header(props: HeaderProps) {\n  let bodyText = <></>\n\n  if (props.isSubmitted) {\n    bodyText = <div>Your information has been submitted</div>\n  } else {\n    if (props.bodyText) {\n      bodyText = (\n        <div dangerouslySetInnerHTML={{ __html: props.bodyText }}></div>\n      )\n    }\n  }\n\n  return (\n    <div\n      className={`submission-header${props.isSubmitted ? ' submitted' : ''}`}\n    >\n      <h2>{props.title}</h2>\n      {bodyText}\n      <hr></hr>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Step, StepStateEnum } from './types'\n\nimport { FlipProp, IconDefinition } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faCheckCircle,\n  faCircle,\n  faBan,\n  faExclamationCircle,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport type StepsSideNavProps = {\n  stepList: Step[]\n  onStepChange: Function\n  isWizardMode?: boolean\n}\n\nexport default function StepsSideNav(props: StepsSideNavProps) {\n  const nonChildSteps = props.stepList.filter(step => step.child !== true)\n\n  const getIcon = (\n    state: StepStateEnum,\n    isExcluded: boolean | undefined,\n    isStatic: boolean | undefined,\n    isSubmit: boolean | undefined,\n  ): { iconDef: IconDefinition; flip: FlipProp | undefined } => {\n    let iconDef: IconDefinition = faCircle\n    let flip: FlipProp | undefined = undefined\n    if (isStatic || isSubmit) {\n      return {\n        iconDef,\n        flip,\n      }\n    }\n\n    if (isExcluded) {\n      iconDef = faBan\n      flip = 'horizontal'\n    } else if (state === StepStateEnum.COMPLETED) {\n      iconDef = faCheckCircle\n    } else if (state === StepStateEnum.ERROR) {\n      iconDef = faExclamationCircle\n    }\n    return { iconDef, flip }\n  }\n\n  const getItemClass = (\n    isInProgress: boolean,\n    isStatic: boolean = false,\n  ): string => {\n    let liClassName = 'item'\n    if (isInProgress) {\n      liClassName = `${liClassName} pointed `\n    }\n    if (isStatic) {\n      liClassName = `${liClassName} static`\n    }\n    return liClassName\n  }\n\n  const getListItem = (\n    step: Step,\n    isWizard: boolean,\n    isRenderChild = false,\n  ): JSX.Element => {\n    if (!step || (step.child && !isRenderChild)) {\n      return <></>\n    }\n    const renderStepName = (\n      step: Step,\n      isWizard: boolean,\n      callback: Function,\n    ): JSX.Element => {\n      if (!step.inProgress && (!isWizard || !!step.final)) {\n        return (\n          <button className=\"btn btn-link\" onClick={() => callback(step)}>\n            {step.title}\n          </button>\n        )\n      } else {\n        return <span>{step.title}</span>\n      }\n    }\n    const icon = getIcon(step.state, step.excluded, step.static, step.final)\n    const itemClass = getItemClass(step.inProgress, step.static)\n\n    return (\n      <div className={itemClass}>\n        <FontAwesomeIcon icon={icon.iconDef} flip={icon.flip} />\n        {renderStepName(step, isWizard, props.onStepChange)}\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"SRC-menuLayout json-forms-menu\" style={{ flex: '1' }}>\n      <ul>\n        {nonChildSteps.map((step: Step, i: number) => {\n          return (\n            <li className=\"item-wrap\" key={i + step.id}>\n              {getListItem(step, !!props.isWizardMode)}\n              {step.children && step.children.length > 0 && (\n                <div className=\"subMenu\">\n                  <ul>\n                    {step.children &&\n                      step.children.map((stepChildId: string, j: number) => {\n                        const childStep = props.stepList.find(\n                          step => step.id === stepChildId,\n                        )\n                        return typeof childStep === 'undefined' ? (\n                          <></>\n                        ) : (\n                          <li className=\"item-wrap\" key={j + stepChildId}>\n                            {getListItem(childStep, !!props.isWizardMode, true)}\n                          </li>\n                        )\n                      })}\n                  </ul>\n                </div>\n              )}\n            </li>\n          )\n        })}\n      </ul>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Step, NavActionEnum } from './types'\nimport {\n  faChevronLeft,\n  faChevronRight,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport interface NavButtonsProps {\n  isWizardMode?: boolean\n  previousStepIds: string[]\n  onNavAction: Function\n  steps: Step[]\n  currentStep: Step\n  isFormSubmitted?: boolean\n}\n\nexport interface NextStepLinkProps {\n  onNavAction: Function\n  steps: Step[]\n  nextStepId: string | undefined\n}\n\nexport function NavButtons(props: NavButtonsProps): JSX.Element {\n  // in wizard mode we build an array of the previous steps. In regular mode back goes to\n  // a previous order step\n  const canGoBack = (props: NavButtonsProps): boolean => {\n    if (props.isWizardMode) {\n      return props.previousStepIds && props.previousStepIds.length > 0\n    } else {\n      return props.steps.findIndex(step => step.id === props.currentStep.id) > 0\n    }\n  }\n\n  const previousButton = canGoBack(props) ? (\n    <button\n      type=\"button\"\n      onClick={e => props.onNavAction(NavActionEnum.PREVIOUS)}\n      className=\"btn btn-link nav-link prev\"\n    >\n      <FontAwesomeIcon icon={faChevronLeft} />\n    </button>\n  ) : (\n    <></>\n  )\n\n  const nextButton = !props.currentStep.final ? (\n    <button\n      type=\"button\"\n      onClick={e => props.onNavAction(NavActionEnum.NEXT)}\n      className=\"btn btn-link nav-link next\"\n    >\n      <FontAwesomeIcon icon={faChevronRight} />\n    </button>\n  ) : (\n    <></>\n  )\n\n  const saveButton = (\n    <button\n      type=\"button\"\n      className=\"btn btn-action save\"\n      disabled={props.isFormSubmitted}\n      onClick={e => props.onNavAction(NavActionEnum.SAVE)}\n    >\n      SAVE\n    </button>\n  )\n\n  return (\n    <div>\n      <hr></hr>\n      <div className=\"buttonWrapper pull-right\">\n        {previousButton} {nextButton} {saveButton}\n      </div>\n    </div>\n  )\n}\n\nexport function NextStepLink(props: NextStepLinkProps): JSX.Element {\n  const nextStep = props.steps.find(step => step.id === props.nextStepId)\n  if (typeof nextStep === 'undefined') {\n    return <></>\n  }\n  return (\n    <span className=\"nav-link\">\n      <a onClick={e => props.onNavAction(nextStep)}>{nextStep.title}</a>\n      <FontAwesomeIcon icon={faChevronRight}></FontAwesomeIcon>\n    </span>\n  )\n}\n","import * as React from 'react'\n\ninterface DataDebugProps {\n  formData: any\n  hidden: boolean\n}\n\nexport default function DataDebug(props: DataDebugProps) {\n  const myData = (\n    <div>\n      <h6>Data</h6>\n      <pre>{JSON.stringify(props.formData, null, 2)}</pre>\n    </div>\n  )\n  return <>{!props.hidden && myData}</>\n}\n","import * as React from 'react'\n\nimport { UiSchema } from 'react-jsonschema-form'\nimport { SummaryFormat, Step, FormSchema } from './types'\nimport {\n  first,\n  cloneDeep,\n  keys,\n  find,\n  isObject,\n  get,\n  isArray,\n  isString,\n  isDate,\n} from 'lodash-es'\n\nexport interface SummaryTableProps {\n  isWizard?: boolean\n  formData: any\n  callbackFn?: Function\n  steps: Step[]\n  schema: FormSchema\n  uiSchema: UiSchema\n}\n\nfunction findLabel(key: string, schema: any, uiSchema: UiSchema): string {\n  const regex1 = /\\[\\d+\\]\\./g\n  const regex3 = /\\.(\\d)+/g\n\n  key = key.replace(regex3, '[$1]')\n\n  const propArr = key.split('.')\n  // some things require labels in schema (e.g. checkboxes) so this is preferred\n  const labelFromSchema = `${propArr.join('.properties.')}.title`\n  //can be overriden by label in UI\n  const labelFromUi = `${key}.ui:title`\n  //for array fields we need to change the property e.g.\n  //  ld50.experiments[0].species_other should look like 'ld50.experiments.items.species_other'\n  const arrayLabelFromSchema = labelFromSchema.replace(regex1, '.items.')\n  const arrayLabelFromUiSchema = labelFromUi.replace(regex1, '.items.')\n  const indexMatch = labelFromSchema.match(regex1)\n  let index = first(indexMatch)\n\n  if (index) {\n    index = index.substring(1, index.length - 2)\n    index = !isNaN(parseInt(index)) ? parseInt(index) + 1 + '' : ''\n  }\n\n  const label =\n    get(uiSchema, labelFromUi) ||\n    get(schema.properties, labelFromSchema) ||\n    get(uiSchema, arrayLabelFromUiSchema) ||\n    get(schema.properties, arrayLabelFromSchema) ||\n    `${arrayLabelFromSchema}`\n  return `${index ? '[' + index + '] ' : ''}${label}`\n}\n\nexport function getFlatData(\n  formData: any,\n  steps: Step[],\n  schema: FormSchema,\n  uiSchema: UiSchema,\n): SummaryFormat[] {\n  //takes nested json and converts it into flattened item list\n\n  function flatten(\n    object: any,\n    flattenedObject: any,\n    prefix: string,\n  ): string[] {\n    const separator = '.'\n    Object.keys(object).forEach(key => {\n      if (object[key] === null) {\n        flattenedObject[prefix + key] = ''\n      } else if (\n        //if the value is a proper array\n        isArray(object[key]) &&\n        !isString(object[key])\n      ) {\n        for (const i in object[key]) {\n          if (\n            isArray(object[key][i]) ||\n            (isObject(object[key]) && !isString(object[key][i]))\n          ) {\n            flatten(\n              object[key][i],\n              flattenedObject,\n              `${prefix}${key}[${i}]${separator}`,\n            )\n          } else {\n            let prevVal = flattenedObject[`${prefix}${key}`]\n            prevVal = prevVal ? prevVal + ', ' : ''\n            flattenedObject[`${prefix}${key}`] = prevVal + object[key][i]\n          }\n        }\n      } else if (isObject(object[key]) && !isDate(object[key])) {\n        flatten(object[key], flattenedObject, `${prefix}${key}${separator}`)\n      } else {\n        flattenedObject[prefix + key] = object[key]\n      }\n    })\n    return flattenedObject\n  }\n\n  const flatData = flatten(cloneDeep(formData), [], '')\n  const flatFormData = keys(flatData)\n    .map(key => {\n      let val = flatData[key]\n      if (flatData[key] === false) {\n        val = 'false'\n      }\n      if (flatData[key] === true) {\n        val = 'true'\n      }\n      const boundary = key.indexOf('.')\n      return {\n        screen: find(steps, { id: key.substring(0, boundary) }),\n        label: findLabel(key, schema, uiSchema),\n        value: val,\n      }\n    })\n    .filter(item => item.label.indexOf('.properties.included.title') === -1) //included is the property we generate to help with validation of optional forms\n\n  const result = flatFormData\n    .filter(item => item.screen && typeof item.value !== 'undefined')\n    .map(item => {\n      return {\n        label: item.label,\n        value: item.value,\n        screen: item.screen!,\n      }\n    })\n    .sort((a, b) => a.screen.order - b.screen.order)\n\n  return result\n}\n\nexport default function SummaryTable(props: SummaryTableProps): JSX.Element {\n  let flatFormData: SummaryFormat[] = []\n\n  flatFormData = getFlatData(\n    cloneDeep(props.formData),\n    props.steps,\n    props.schema,\n    props.uiSchema,\n  )\n\n  let prevScreenId = ''\n  const table = (\n    <>\n      <table className=\"table summary-table-header\">\n        <thead>\n          <tr>\n            <th>Step</th>\n            <th>Label</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n      </table>\n\n      <div className=\"scroll-area table-body\">\n        <table className=\"table summary-table\">\n          <tbody>\n            {flatFormData.map((line: SummaryFormat, i: number) => {\n              return (\n                <tr key={i + line.screen.id + line.label}>\n                  <td>\n                    {prevScreenId !== line.screen.id &&\n                      (prevScreenId = line.screen.id) && (\n                        <span>{line.screen.title}</span>\n                      )}\n                  </td>\n                  <td>{line.label}</td>\n\n                  <td>{line.value}</td>\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    </>\n  )\n\n  return (\n    <>\n      <p className=\"step-exclude-directions\">\n        Below is all of the data you have entered. Before submitting, click\n        'Validate' to ensure that all of the required data has been entered.\n      </p>\n      <button className=\"nav-link pull-right\" onClick={() => window.print()}>\n        Print this data\n      </button>\n      <div className=\"panel panel-default padding-full wrap\">\n        <div className=\"summary scroll-area\">{table}</div>\n      </div>\n    </>\n  )\n}\n","import React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\nimport { ButtonVariant } from 'react-bootstrap/esm/types'\n\nexport type WarningModalProps = {\n  title: string\n  copy: string | JSX.Element\n  confirmCopy?: string\n  className?: string\n  show: boolean\n  onConfirm: Function\n  confirmButtonVariant?: ButtonVariant\n  onCancel: Function\n  callbackArgs: any\n}\n\nexport const WarningModal: React.FunctionComponent<WarningModalProps> = ({\n  title,\n  copy,\n  confirmCopy,\n  className,\n  show,\n  onConfirm,\n  confirmButtonVariant = 'success',\n  onCancel,\n  callbackArgs,\n}: WarningModalProps) => {\n  return (\n    <Modal\n      show={show}\n      animation={false}\n      className={className}\n      onHide={() => onCancel()}\n    >\n      <Modal.Header closeButton={false} onHide={() => onCancel()}>\n        <Modal.Title>{title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{copy}</Modal.Body>\n      <Modal.Footer>\n        <Button variant=\"secondary\" onClick={() => onCancel()}>\n          Cancel\n        </Button>\n        <Button\n          variant={confirmButtonVariant}\n          onClick={() => onConfirm(...callbackArgs)}\n        >\n          <span>{confirmCopy || 'OK'}</span>\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default WarningModal\n","import * as React from 'react'\nimport _ from 'lodash-es'\nimport { Engine, EngineResult } from 'json-rules-engine'\nimport {\n  default as Form,\n  UiSchema,\n  AjvError,\n  ErrorListProps,\n} from 'react-jsonschema-form'\n\nimport {\n  Step,\n  StepStateEnum,\n  NavActionEnum,\n  StatusEnum,\n  FormSchema,\n  IRulesValidationEvent,\n  IRulesNavigationEvent,\n} from './types'\nimport Header from './Header'\nimport StepsSideNav from './StepsSideNav'\nimport { NavButtons, NextStepLink } from './NavButtons'\nimport DataDebug from './DataDebug'\nimport SummaryTable from './SummaryTable'\nimport WarningModal from './WarningModal'\nimport Switch from 'react-switch'\nimport { Prompt } from 'react-router-dom'\n\nexport interface IFormData {\n  [key: string]: {\n    included?: boolean\n    [key: string]: any\n  }\n}\n\nexport type SynapseFormProps = {\n  schema: FormSchema\n  uiSchema: UiSchema\n  navSchema: {\n    steps: any[]\n  }\n  formData: IFormData\n  onSubmit: Function\n  onSave: Function\n  formTitle: string\n  formClass?: string\n  isWizardMode?: boolean\n  callbackStatus?: StatusEnum\n  isSubmitted?: boolean\n}\n\ntype SynapseFormState = {\n  formData: IFormData // form data that prepopulates the form\n  currentStep: Step\n  nextStep?: Step\n  steps: Step[]\n  previousStepIds: string[]\n  hasValidated?: boolean //validation has been called and it passed\n  doShowErrors: boolean //if we should show error summary at the top of the page\n  doShowHelp: boolean\n  modalContext?: { action: Function; arguments: any[] }\n  hasUnsavedChanges: boolean\n  isSubmitted?: boolean\n  isLoadingSaved: boolean\n}\n\nexport interface SummaryFormat {\n  label: string\n  value: string\n}\n\nexport default class SynapseForm extends React.Component<\n  SynapseFormProps,\n  SynapseFormState\n> {\n  excludeWarningText = (\n    <div>\n      <p>\n        This action will clear any entered data on this page and remove this\n        form from your submission. You can include it again at anytime. Only\n        this page will be affected.\n      </p>\n      <p>Are you sure you want to skip this step and clear any entered data?</p>\n    </div>\n  )\n  excludeWarningHeader = 'Skip This Step?'\n  unsavedDataWarning = `You might have some unsaved data. Are you sure you want to leave?`\n  formRef: any //ref to form for submission\n  formDivRef: any // ref to the div containing form (for scrolling on validation failure)\n  navAction: NavActionEnum = NavActionEnum.NONE\n  uiSchema: {}\n  nextStep: Step | undefined\n  extraErrors: AjvError[] = []\n\n  isNewForm = (formData: IFormData): boolean => {\n    return (\n      (Object.keys(formData).length == 1 &&\n        Object.keys(formData)[0] === 'metadata') ||\n      Object.keys(formData).length == 0\n    )\n  }\n\n  getFirstStep = (steps: Step[], formData: IFormData): Step => {\n    if (!this.isNewForm(formData)) {\n      return steps.find(step => step.final === true) || steps[0]\n    } else {\n      return steps[0]\n    }\n  }\n\n  constructor(props: SynapseFormProps) {\n    super(props)\n\n    //will modify the ui:help to render html vs text\n    this.uiSchema = stringToElementForProp(\n      _.cloneDeep(props.uiSchema),\n      'ui:help',\n    )\n    //create steps array from the navSchema\n    const steps = props.navSchema.steps\n      .map((step, i) => {\n        return {\n          ...step,\n          inProgress: i === 0 ? true : false,\n        }\n      })\n      .sort((a, b) => a.order - b.order)\n\n    this.formRef = React.createRef()\n    this.formDivRef = React.createRef()\n    const currentStep = this.getFirstStep(steps, props.formData)\n    this.state = {\n      currentStep,\n      steps,\n      previousStepIds: [],\n      formData: props.formData,\n      doShowErrors: false,\n      doShowHelp: true,\n      hasUnsavedChanges: false,\n      isSubmitted: props.isSubmitted,\n      isLoadingSaved: !this.isNewForm(this.props.formData),\n    }\n  }\n\n  onUnload = (ev: any) => {\n    {\n      if (this.state.hasUnsavedChanges) {\n        ev.preventDefault()\n        return (ev.returnValue = this.unsavedDataWarning)\n      }\n      return\n    }\n  }\n  // Setup the `beforeunload` event listener\n  setupBeforeUnloadListener = () => {\n    window.addEventListener('beforeunload', this.onUnload)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('beforeunload', this.onUnload)\n  }\n\n  componentDidUpdate(prevProps: SynapseFormProps) {\n    const shouldUpdate = this.props.callbackStatus !== prevProps.callbackStatus\n    const isSuccess =\n      this.props.callbackStatus === StatusEnum.SAVE_SUCCESS ||\n      this.props.callbackStatus === StatusEnum.SUBMIT_SUCCESS\n    if (shouldUpdate && isSuccess) {\n      this.setState({ hasUnsavedChanges: false })\n      if (this.props.callbackStatus === StatusEnum.SUBMIT_SUCCESS) {\n        this.setState({ isSubmitted: true })\n        window.history.back()\n      }\n    }\n  }\n\n  _setIncludedPropInFormDataNonWizard = (\n    currentState: SynapseFormState,\n    schemaScreens: any,\n  ): IFormData => {\n    const result = {}\n    const currentStateFormData = currentState.formData\n    //if there is a top level 'included' property in schema - update the form.\n    Object.keys(schemaScreens).forEach((key: string) => {\n      if (_.get(schemaScreens[key], `properties.included`)) {\n        _.set(result, `${key}.included`, true)\n      }\n    })\n    return { ...currentStateFormData, ...result }\n  }\n\n  _setIncludedPropInFormDataWizard = (\n    currentState: SynapseFormState,\n  ): IFormData => {\n    const firstStepId = currentState.currentStep.id\n    const newStateData = _.cloneDeep(currentState.formData)\n    _.set(newStateData, `${firstStepId}.included`, true)\n    return newStateData\n  }\n\n  componentDidMount() {\n    this.setupBeforeUnloadListener()\n    const isNewForm = this.isNewForm(this.state.formData)\n    if (!isNewForm) {\n      //when loading saved form - validate to see the steps status\n      this.triggerAction(NavActionEnum.VALIDATE)\n    } else {\n      // for validation of optional forms. Validation is enforced only if included property is set.\n      this.setState(prevState => {\n        const newFormData = this.props.isWizardMode\n          ? this._setIncludedPropInFormDataWizard(prevState)\n          : this._setIncludedPropInFormDataNonWizard(\n              prevState,\n              this.props.schema,\n            )\n        return {\n          formData: newFormData,\n        }\n      })\n    }\n  }\n\n  // get the schema slice for the current screen/step\n  getSchema = ({ id, final }: Step): FormSchema => {\n    if (final) {\n      return this.props.schema\n    }\n    //only get schema for current step. Only the portion of entire form is shown\n\n    const currentStepSlice = _.pick(this.props.schema, [\n      'title',\n      'type',\n      `properties.${id}`,\n    ])\n    return currentStepSlice\n  }\n\n  // find the next step\n  getNextStepId = async (\n    currentStep: Step,\n    formData: any,\n    nextStepId?: string,\n  ): Promise<string> => {\n    if (nextStepId) {\n      return nextStepId\n    }\n    if (!currentStep.rules || currentStep.rules.length === 0) {\n      return currentStep.default\n    }\n\n    // if there are rules - run the engine and go to the first next step\n    const engine = new Engine(currentStep.rules)\n\n    try {\n      const result: EngineResult = await engine.run(formData)\n      if (result.events.length > 0) {\n        return (result.events[0] as IRulesNavigationEvent).params.next\n      } else {\n        return currentStep.default\n      }\n    } catch (error) {\n      return currentStep.default\n    }\n  }\n\n  // called when going next, previous or a given step\n  moveStep = async (\n    formData: any,\n    nextStepId: string | undefined,\n    isError: boolean,\n    previousStack = [...this.state.previousStepIds],\n  ) => {\n    const currentStep = this.state.currentStep\n    let currentStepState: StepStateEnum\n    //we don't wnat to display errors on the page - this will be done explicitly in validation\n    this.formRef.current.setState({ errorSchema: {} })\n    //in wizard mode we can only move forwards (don't know next step yet) or backwards (do know next step)\n    const isMoveForwardInWizardMode = this.props.isWizardMode && !nextStepId\n\n    //previousStack is used for 'back' navigation is wizard mode.\n    //only need to do it if moving forward i.e. nextStepId is undefined\n    if (isMoveForwardInWizardMode) {\n      previousStack.push(currentStep.id)\n    }\n\n    if (!isError) {\n      currentStepState = StepStateEnum.COMPLETED\n\n      if (!isMoveForwardInWizardMode && this.props.isWizardMode) {\n        currentStepState = StepStateEnum.TODO\n      }\n    } else {\n      currentStepState = StepStateEnum.ERROR\n    }\n    // determine next step\n    nextStepId = await this.getNextStepId(currentStep, formData, nextStepId)\n\n    const steps = this.state.steps.map(step => {\n      if (step.id === currentStep.id) {\n        return {\n          ...step,\n          ...{ state: currentStepState, inProgress: false },\n        }\n      } else if (step.id === nextStepId) {\n        return { ...step, ...{ inProgress: true } }\n      }\n      return step\n    })\n    //if we are in wizard mode we want to make sure that we include the step we are about to go to\n    if (isMoveForwardInWizardMode) {\n      _.set(formData, `${nextStepId}.included`, true)\n    }\n\n    //at this point the form is valid and submitted and the data reflects the latest\n    const nextStep = this.state.steps.find(step => step.id === nextStepId)!\n    // clean up unused screens in wizard before getting to submit\n    if (this.props.isWizardMode && nextStep.final) {\n      Object.keys(formData).forEach(key => {\n        if (formData[key].included === undefined) {\n          formData[key] = {}\n        }\n      })\n    }\n\n    this.saveStepState(previousStack, steps, nextStep!, formData)\n  }\n\n  //save the state of the current screen\n  saveStepState = (\n    previousStepIds: string[],\n    steps: Step[],\n    currentStep: Step,\n    formData: any,\n  ) => {\n    this.setState({\n      previousStepIds,\n      steps,\n      currentStep,\n      formData,\n      hasValidated: false,\n      doShowErrors: false,\n    })\n  }\n\n  //--------- fns to support navigation --------------------//\n  goPrevious = async (formData: any, isError: boolean) => {\n    let previousStepId: string | undefined\n    const previousStack: string[] = [...this.state.previousStepIds]\n    // in wizard mode we go to the previously visited screen.\n    // In regular mode go to the screen with previous index\n    if (this.props.isWizardMode) {\n      previousStepId = previousStack.pop()\n      if (!this.isSubmitScreen()) {\n        //since we don't know if we'll get back to that step again - exclude it. We will include it again if we\n        // get to it.\n        _.set(formData, `${this.state.currentStep.id}.included`, undefined)\n      }\n    } else {\n      const currentIndex = _.findIndex(this.state.steps, {\n        id: this.state.currentStep.id,\n      })\n      if (currentIndex > 0) {\n        previousStepId = this.state.steps[currentIndex - 1].id\n      }\n    }\n    if (!_.isUndefined(previousStepId)) {\n      return this.moveStep(formData, previousStepId, isError, previousStack)\n    }\n  }\n\n  triggerAction = async (navAction: NavActionEnum) => {\n    // we don't need to validate on save so bypassing submit\n    if (navAction === NavActionEnum.SAVE) {\n      return this.props.onSave(this.state.formData)\n    } else {\n      this.navAction = navAction\n      // first run whatever custom validaton we have\n      this.extraErrors = await this.runCustomValidation(\n        this.state.formData,\n        this.state.currentStep,\n        this.state.steps,\n      )\n      if (this.formRef.current) {\n        this.formRef.current.submit()\n      }\n    }\n  }\n\n  // triggered when we click on the step name in left nav (doesn't happen in wizard mode)\n  triggerStepChange = (step: Step) => {\n    this.nextStep = step\n    this.triggerAction(NavActionEnum.GO_TO_STEP)\n  }\n\n  onError = (args: any) => {\n    this.setState({\n      doShowErrors: true,\n      hasValidated: false,\n    })\n    if (this.navAction === NavActionEnum.VALIDATE) {\n      const modifiedSteps = this.setStepStatusForFailedValidation(\n        args.props,\n        this.state.steps,\n        !!this.props.isWizardMode,\n        this.state.formData,\n        this.getSchema(this.state.currentStep).properties ||\n          this.getSchema(this.state.currentStep),\n      )\n      this.setState({ steps: modifiedSteps })\n      this.formDivRef.current.scrollTo(0, 0)\n      if (this.state.isLoadingSaved) {\n        this.moveStep(this.state.formData, modifiedSteps[0].id, true)\n        this.setState({ isLoadingSaved: false })\n      }\n    }\n  }\n\n  setStepStatusForFailedValidation = (\n    errors: AjvError[],\n    steps: Step[],\n    isWizard: boolean,\n    formData: IFormData,\n    currentSchemaProperties: any,\n  ): Step[] => {\n    //error property is in the format: step.somevalue.etc  .welcome.submission_name example\n    //find all the steps where there is an error\n    const stepsWithError = errors.map(\n      error => _.trimStart(error.property, '.').split('.')[0],\n    )\n    //find all steps in current schema\n    const stepsInCurrentSchema = Object.keys(currentSchemaProperties)\n    const updatedSteps: Step[] = steps.map(step => {\n      //if there is an error in this step\n      if (stepsWithError.indexOf(step.id) > -1) {\n        return {\n          ...step,\n          state: StepStateEnum.ERROR,\n        }\n        //if no error and included in schema\n      } else if (stepsInCurrentSchema.indexOf(step.id) > -1) {\n        let state = StepStateEnum.COMPLETED\n        //if we are in wizard and possibly have not visited this step\n        if (isWizard && !_.get(formData[step.id], 'included')) {\n          state = step.state\n        }\n\n        return {\n          ...step,\n          state: state,\n        }\n      } else {\n        return step\n      }\n    })\n    return updatedSteps\n  }\n\n  //we are constantly saving form data. Needed to overwrite on-error behavior\n  handleOnChange({ formData }: any) {\n    //this is just for form updates. submit screen goes different route\n    if (!this.isSubmitScreen() && !this.state.currentStep.excluded) {\n      const hasUnsavedChanges = !_.isEqual(this.state.formData, formData)\n      this.setState({ formData, hasUnsavedChanges })\n    }\n  }\n\n  performAction(navAction: NavActionEnum, hasError: boolean) {\n    const formData = this.state.formData\n\n    switch (navAction) {\n      case NavActionEnum.NEXT: {\n        return this.moveStep(formData, undefined, hasError)\n      }\n      case NavActionEnum.PREVIOUS: {\n        return this.goPrevious(formData, hasError)\n      }\n      case NavActionEnum.GO_TO_STEP: {\n        //nextStep is returned when clicked on the Steps left nav\n        if (!this.nextStep) {\n          return\n        }\n        return this.moveStep(formData, this.nextStep.id, hasError)\n      }\n\n      case NavActionEnum.SUBMIT: {\n        this.props.onSubmit(formData)\n        return\n      }\n      case NavActionEnum.VALIDATE: {\n        //we get here is we clicked validate and the data is valid.\n        // if it's not valid we handle it in onError fn\n        const steps = this.setStepStatusForFailedValidation(\n          [],\n          this.state.steps,\n          !!this.props.isWizardMode,\n          this.state.formData,\n          this.getSchema(this.state.currentStep).properties ||\n            this.getSchema(this.state.currentStep),\n        )\n        const currentStep = {\n          ...this.state.currentStep,\n          state: StepStateEnum.COMPLETED,\n        }\n\n        this.setState({ hasValidated: true, currentStep, steps })\n        if (this.state.isLoadingSaved) {\n          this.moveStep(this.state.formData, steps[0].id, false)\n          this.setState({ isLoadingSaved: false })\n        }\n        return\n      }\n      default:\n        return\n    }\n  }\n\n  //we need to route things through submit - otherwise validation does not kick in\n  // it triggers internal library validation and calls the performAction with the params for action\n  onSubmit = (): any => {\n    this.performAction(\n      this.navAction,\n      this.state.currentStep.state === StepStateEnum.ERROR,\n    )\n  }\n\n  isSubmitScreen = (): boolean => {\n    return this.state.currentStep.final === true && !this.state.isLoadingSaved\n  }\n\n  showExcludeStateWarningModal = (\n    stepId: string,\n    isUpdateFlattenedData: boolean = false,\n  ): void => {\n    this.setState({\n      modalContext: {\n        action: this.toggleExcludeStep,\n        arguments: [stepId, true, isUpdateFlattenedData],\n      },\n    })\n  }\n\n  toggleExcludeStep = (stepId: string, isExclude: boolean): void => {\n    this.setState((prevState, props) => {\n      const steps = prevState.steps.map(stp => {\n        if (stp.id === stepId) {\n          return { ...stp, ...{ excluded: isExclude } }\n        }\n        return stp\n      })\n\n      const formDataUpdated = _.cloneDeep(prevState.formData)\n      const currentStep = _.cloneDeep(prevState.currentStep)\n      //we need this because you can exclude on the ifnal screen so the currentStep.id\n      //is not always the one we need to exclude\n      if (currentStep.id === stepId) {\n        currentStep.excluded = isExclude\n      }\n      //if exluding - blow away the data for the step\n      if (isExclude) {\n        formDataUpdated[stepId] = {}\n        //_.set(formDataUpdated, `${stepId}.included`, false);\n      } else {\n        _.set(formDataUpdated, `${stepId}.included`, true)\n      }\n      return {\n        steps,\n        formData: formDataUpdated,\n        modalContext: undefined,\n        currentStep,\n      }\n    })\n  }\n\n  private renderNotification = (status?: StatusEnum): JSX.Element => {\n    if (status === StatusEnum.SAVE_SUCCESS) {\n      return <div className=\"notification-area\"> Successfully saved </div>\n    }\n    if (status === StatusEnum.SUBMIT_SUCCESS) {\n      return <div className=\"notification-area\"> Successfully submitted </div>\n    }\n    if (status === StatusEnum.PROGRESS) {\n      return <div className=\"notification-area\"> working on it ....</div>\n    }\n    return <></>\n  }\n\n  // displays the text for screens that don't have any form data\n  private renderTextForStaticScreen = (): JSX.Element => {\n    if (!this.state.currentStep.copy) {\n      return <></>\n    }\n    const copy = this.state.currentStep.copy\n    return (\n      <div\n        className=\"static-screen\"\n        dangerouslySetInnerHTML={{ __html: copy! }}\n      />\n    )\n  }\n\n  //displays subheader for forms that can be excluded\n  renderOptionalFormSubheader = (isWizard: boolean = false): JSX.Element => {\n    if (isWizard) {\n      return <></>\n    }\n    const currentStep = this.state.currentStep\n\n    if (currentStep.excluded === true) {\n      return (\n        <div className=\"step-exclude-directions\">\n          This form is currently not included in the submission.\n          <button\n            className=\"btn btn-link\"\n            onClick={() => this.toggleExcludeStep(currentStep.id, false)}\n          >\n            INCLUDE\n          </button>\n        </div>\n      )\n    } else if (currentStep.excluded === false) {\n      return (\n        <div className=\"step-exclude-directions\">\n          This form is currently included in the submission. Enter some data if\n          you have it, or click \"Skip\".\n          <button\n            className=\"btn btn-link\"\n            onClick={() =>\n              this.showExcludeStateWarningModal(this.state.currentStep.id)\n            }\n          >\n            SKIP\n          </button>\n        </div>\n      )\n    }\n    return <></>\n  }\n\n  renderHelpToggle = (\n    currentStep: Step,\n    showHelp: boolean,\n    callbackFn: Function,\n  ): JSX.Element => {\n    if (currentStep.static || currentStep.final) {\n      return <></>\n    }\n    return (\n      <>\n        <label className=\"pull-right toggle-help-label\">\n          <span>Hide help</span>\n          <Switch\n            checkedIcon={false}\n            uncheckedIcon={false}\n            height={20}\n            width={45}\n            className=\"toggle-help\"\n            offColor=\"#ccc\"\n            onChange={() => callbackFn()}\n            checked={showHelp}\n          />\n          <span>Show help</span>\n        </label>\n      </>\n    )\n  }\n\n  runCustomValidation = async (\n    formData: IFormData,\n    currentStep: Step,\n    allSteps: Step[],\n  ): Promise<AjvError[]> => {\n    const errors: AjvError[] = []\n\n    //default - running on current step\n    let rules = currentStep.validationRules || []\n    let data = {\n      [currentStep.id]: formData[currentStep.id],\n    }\n\n    // for final step -- concatenate all rules and run on all data\n    if (currentStep.final) {\n      rules = allSteps.reduce((acc: any, value: Step) => {\n        return value.validationRules && value.validationRules.length > 0\n          ? acc.concat(value.validationRules)\n          : acc\n      }, [])\n      data = _.cloneDeep(formData)\n    }\n\n    if (rules.length === 0) {\n      return []\n    }\n\n    //this is a workaround for inability to define a rule to run on all members of the data array\n    // we define the generic rule with path e.g.\"path\": \".experiments[*].dose_range.dose_range_min\",\n    const allRules: any[] = []\n    rules.forEach(rule => {\n      //take a rule\n      const paramProp = rule.event.params.property\n      // if it's just a normal rule - add it\n      if (paramProp.indexOf('[*]') === -1) {\n        allRules.push(rule)\n      } else {\n        const path = paramProp.split('[*]')[0].substring(1)\n        const data = _.get(formData, path)\n        // generate a rule for each item in the data array by substituting [*] w/ appropriate index\n        if (Array.isArray(data) && typeof data !== 'string') {\n          for (let i = 0; i < data.length; i++) {\n            const newRule = JSON.parse(\n              JSON.stringify(rule).replace(/\\[\\*\\]/g, `[${i}]`),\n            )\n            allRules.push(newRule)\n          }\n        } else {\n          allRules.push(rule)\n        }\n      }\n    })\n    // no we run  all the rules through the engine\n    const engine = new Engine(allRules, {\n      allowUndefinedFacts: true,\n    })\n\n    try {\n      const result: EngineResult = await engine.run(data)\n      const validationEvents = result.events as IRulesValidationEvent[]\n      validationEvents.forEach(event => {\n        const err: AjvError = {\n          ...event.params,\n          ...{\n            params: {},\n            stack: `${event.params.property} ${event.params.message}`,\n          },\n        }\n        errors.push(err)\n      })\n    } catch (error) {\n      console.log(error)\n    }\n\n    return errors\n  }\n\n  transformErrors = (errors: AjvError[]): AjvError[] => {\n    // if we are not in wizard mode and not trying to submit or validate we just want to skip\n    // over the errors and just set the step status\n    // https://github.com/rjsf-team/react-jsonschema-form/issues/1263\n    this.extraErrors.forEach(extraError => {\n      if (!errors.find(error => error.stack === extraError.stack)) {\n        errors.push(extraError)\n      }\n    })\n\n    if (\n      this.navAction !== NavActionEnum.SUBMIT &&\n      this.navAction !== NavActionEnum.VALIDATE &&\n      (!this.props.isWizardMode || this.state.currentStep.final)\n    ) {\n      const currentStep = {\n        ...this.state.currentStep,\n      }\n      if (errors.length > 0) {\n        currentStep.state = StepStateEnum.ERROR\n      } else {\n        currentStep.state = StepStateEnum.COMPLETED\n      }\n\n      this.setState({ currentStep })\n\n      return []\n    }\n\n    // there is an odd behavior in the lib that in cases when we have additional fields depending on enum\n    // value if it's required and not entered we get 3 error: enum, required, and oneOf\n    // so if there is an error Oneof on a parent - ignore it and enum on a child. and just output 'required'\n    // if there is an enum error and there is required with the same prefix remove it\n\n    const reqErrors = errors.filter(error => error.name === 'required')\n    reqErrors.forEach(error => {\n      const parentPath = error.property.substring(\n        0,\n        error.property.lastIndexOf('.'),\n      )\n      _.remove(errors, (error: AjvError) => {\n        return (\n          error.property.indexOf(parentPath) > -1 &&\n          (error.name === 'enum' || error.name === 'oneOf')\n        )\n      })\n    })\n\n    return errors.map(error => {\n      error.message = error.message.replace('property', 'field')\n\n      return error\n    })\n  }\n\n  renderErrorListTemplate = (props: ErrorListProps) => {\n    const { errors } = props\n    const currentLis = errors\n      .map((error, i) => {\n        return renderTransformedErrorObject(\n          this.state.steps,\n          error,\n          this.uiSchema,\n          i,\n          this.props.schema,\n        )\n      })\n      .sort((a, b) => a.order - b.order)\n      .map(li => li.element)\n\n    return (\n      <div className=\"form-error-summary\">\n        <ul className=\"error-detail\">{currentLis}</ul>\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"outter-wrap\">\n        <Prompt\n          when={this.state.hasUnsavedChanges}\n          message={this.unsavedDataWarning}\n        />\n        <Header\n          isSubmitted={this.state.isSubmitted}\n          bodyText={this.state.currentStep.description}\n          title={this.props.formTitle}\n        ></Header>\n        <div>\n          <div className=\"inner-wrap\">\n            <StepsSideNav\n              stepList={this.state.steps}\n              isWizardMode={this.props.isWizardMode}\n              onStepChange={this.triggerStepChange}\n            ></StepsSideNav>\n            {this.state.isLoadingSaved && (\n              <div className=\"text-center\">\n                <span className={'spinner'} />\n              </div>\n            )}\n            <div className=\"form-wrap\">\n              <div className=\"form-title\">{this.state.currentStep.title}</div>\n              {this.renderNotification(this.props.callbackStatus)}\n              <div\n                className={`right-top-actions ${\n                  this.state.isSubmitted ? 'hide' : ''\n                }`}\n              >\n                {!this.state.currentStep.static && (\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-action save pull-right\"\n                    onClick={() => this.triggerAction(NavActionEnum.VALIDATE)}\n                  >\n                    VALIDATE\n                  </button>\n                )}\n                {this.renderHelpToggle(\n                  this.state.currentStep,\n                  this.state.doShowHelp,\n                  () =>\n                    this.setState({\n                      doShowHelp: !this.state.doShowHelp,\n                    }),\n                )}\n                {this.isSubmitScreen() && (\n                  <button\n                    type=\"button\"\n                    className=\"btn btn-action save pull-right\"\n                    disabled={this.state.isSubmitted}\n                    onClick={() => this.triggerAction(NavActionEnum.SUBMIT)}\n                  >\n                    SUBMIT\n                  </button>\n                )}\n              </div>\n              {this.renderOptionalFormSubheader(this.props.isWizardMode)}\n              <div\n                className={\n                  this.isSubmitScreen() || this.state.currentStep.static\n                    ? 'hide-form-only'\n                    : 'wrap'\n                }\n              >\n                {this.state.hasValidated && (\n                  <div className=\"notification-area\">\n                    Great! All required data on this form has been entered.\n                  </div>\n                )}\n                <div\n                  ref={this.formDivRef}\n                  className={`scroll-area ${\n                    this.state.currentStep.excluded ? 'disabled' : ' '\n                  } `}\n                >\n                  <Form\n                    className={\n                      this.state.doShowHelp\n                        ? 'submissionInputForm'\n                        : 'submissionInputForm no-help'\n                    }\n                    liveValidate={false}\n                    formData={this.state.formData}\n                    schema={this.getSchema(this.state.currentStep)}\n                    uiSchema={this.uiSchema}\n                    onSubmit={this.onSubmit}\n                    onChange={args => this.handleOnChange(args)}\n                    onError={args =>\n                      this.onError({\n                        props: args,\n                        form: this.formRef,\n                      })\n                    }\n                    showErrorList={\n                      !!this.state.doShowErrors || !!this.props.isWizardMode\n                    }\n                    ErrorList={this.renderErrorListTemplate}\n                    transformErrors={this.transformErrors}\n                    ref={this.formRef}\n                    disabled={\n                      this.state.currentStep.excluded || this.state.isSubmitted\n                    }\n                  >\n                    <div style={{ display: 'none' }}>\n                      <button type=\"submit\"></button>\n                    </div>\n                  </Form>\n                  {this.renderTextForStaticScreen()}\n                  {!this.props.isWizardMode && (\n                    <NextStepLink\n                      steps={this.state.steps}\n                      nextStepId={this.state.currentStep.default}\n                      onNavAction={(step: Step) => this.triggerStepChange(step)}\n                    ></NextStepLink>\n                  )}\n                </div>\n              </div>\n\n              {this.isSubmitScreen() && (\n                <SummaryTable\n                  formData={this.state.formData}\n                  steps={this.state.steps}\n                  callbackFn={(screenId: string) =>\n                    this.showExcludeStateWarningModal(screenId, true)\n                  }\n                  uiSchema={this.props.uiSchema}\n                  schema={this.props.schema}\n                ></SummaryTable>\n              )}\n\n              <NavButtons\n                currentStep={this.state.currentStep}\n                steps={this.state.steps}\n                previousStepIds={this.state.previousStepIds}\n                isFormSubmitted={this.state.isSubmitted}\n                onNavAction={(e: NavActionEnum) => this.triggerAction(e)}\n              ></NavButtons>\n            </div>\n          </div>\n        </div>\n        {this.state.modalContext && (\n          <WarningModal\n            show={true}\n            title={this.excludeWarningHeader}\n            copy={this.excludeWarningText}\n            className={`theme-${this.props.formClass}`}\n            callbackArgs={this.state.modalContext.arguments}\n            onCancel={() => this.setState({ modalContext: undefined })}\n            onConfirm={(stepId: string, isExclude: boolean) =>\n              this.toggleExcludeStep(stepId, isExclude)\n            }\n          ></WarningModal>\n        )}\n        <DataDebug formData={this.state.formData} hidden={true}></DataDebug>\n      </div>\n    )\n  }\n}\n\n// takes in a single validation error and  and displays it in more readable manner\n// used by renderErrorListTemplate\nfunction renderTransformedErrorObject(\n  steps: Step[],\n  error: AjvError,\n  uiSchema: UiSchema,\n  i: number,\n  schema: any,\n): { order: number; element: JSX.Element } {\n  const propPath = _.trimStart(error.property, '.')\n  const propArr = propPath.split('.')\n\n  // some things require labels in schema (e.g. checkboxes) so this is preferred\n  const labelFromSchema = `${propArr.join('.properties.')}.title`\n  //can be overriden by label in UI\n  const labelFromUi = `${propPath}.ui:title`\n  //for array fields we need to change the property e.g.\n  //  ld50.experiments[0].species_other should look like 'ld50.experiments.items.species_other'\n  const arrayLabelFromSchema = labelFromSchema.replace(/\\[.*?\\]/, '.items')\n  const arrayLabelFromUI = labelFromUi.replace(/\\[.*?\\]/, '.items')\n  const indexMatch = labelFromSchema.match(/\\[.*?\\]/)\n\n  let index = _.first(indexMatch)\n\n  if (index) {\n    index = index.substring(1, index.length - 1)\n    index = !isNaN(parseInt(index)) ? ` [${parseInt(index) + 1}]` : ''\n  }\n\n  const label =\n    _.get(uiSchema, labelFromUi) ||\n    _.get(schema.properties, labelFromSchema) ||\n    _.get(uiSchema, arrayLabelFromUI) ||\n    _.get(schema.properties, arrayLabelFromSchema) ||\n    error.property\n\n  const screen = _.find(steps, { id: propArr[0] }) || {\n    title: propArr[0],\n    order: 0,\n  }\n  const element = (\n    <li key={i} className=\"\">\n      <span>\n        <strong>\n          {screen.title}\n          {index}:\n        </strong>\n        {label}&nbsp; {error.message}\n      </span>\n    </li>\n  )\n  return { order: screen.order, element }\n}\n\n//recursively sets property value to dangerouslySetInnerHTML of that value\nfunction stringToElementForProp(srcObject: any, key: string): object {\n  _.keys(srcObject).some(k => {\n    if (k === key) {\n      const value = srcObject[k]\n      srcObject[k] = <span dangerouslySetInnerHTML={{ __html: value }}></span>\n\n      return srcObject\n    }\n    if (srcObject[k] && typeof srcObject[k] === 'object') {\n      stringToElementForProp(srcObject[k], key)\n    }\n  })\n  return srcObject\n}\n","import $RefParser from 'json-schema-ref-parser'\nimport { get, includes } from 'lodash-es'\nimport * as React from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport { UiSchema } from 'react-jsonschema-form'\nimport { SynapseClient } from '../../utils'\nimport { SRC_SIGN_IN_CLASS } from '../../utils/SynapseConstants'\nimport { FileEntity, FormData } from '../../utils/synapseTypes/'\nimport SynapseForm from './SynapseForm'\nimport { StatusEnum } from './types'\n\nexport type UploadToolSearchParams = {\n  formDataId?: string //formDataId for user data form data\n  dataFileHandleId?: string //fileHandle to get userData\n  submitted?: boolean // if the file has been submitted\n  formGroupId: string\n}\n\nexport type SynapseFormWrapperProps = {\n  // Provide the parent container (folder/project), that should contain a folder (named <user_id>) that this user can write to.\n  formSchemaEntityId: string // Synapse file that contains the form schema.\n  formUiSchemaEntityId: string // Synapse file that contains the form ui schema.\n  formNavSchemaEntityId: string //Synapse file that consists screen nav schema\n  token?: string // user's session token\n  searchParams?: UploadToolSearchParams\n  isWizardMode?: boolean // if we are displaying the form in wizard mode\n  fileNamePath: string // path in data to specify the name of saved file\n  formTitle: string //for UI customization\n  formClass?: string // to support potential theaming\n}\n\ntype SynapseFormWrapperState = {\n  notification?: Notification\n  isLoading?: boolean\n  formDataId?: string // file holding user form data\n  formData?: any // form data that prepopulates the form\n  formSchema?: any // schema that drives the form\n  formUiSchema?: UiSchema // ui schema that directs how to render the form elements\n  formNavSchema?: any // drives the steps left panel\n\n  status?: StatusEnum\n}\n\ntype Error = {\n  name?: string\n  message?: string\n}\n\ninterface Notification extends Error {\n  type: StatusEnum\n}\n\nclass SynapseFormWrapper extends React.Component<\n  SynapseFormWrapperProps,\n  SynapseFormWrapperState\n> {\n  constructor(props: SynapseFormWrapperProps) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      formDataId: this.props?.searchParams?.formDataId,\n    }\n  }\n\n  async componentDidMount() {\n    await this.getData(this.props.token)\n  }\n\n  async componentDidUpdate(prevProps: SynapseFormWrapperProps) {\n    const shouldUpdate = this.props.token !== prevProps.token\n    if (shouldUpdate) {\n      await this.getData(this.props.token)\n    }\n  }\n\n  //gets a file entity with content\n  getFileEntityData = async (\n    token: string,\n    entityId: string,\n    versionNumber?: string,\n  ): Promise<{ version?: number; content: JSON }> => {\n    try {\n      const entity: FileEntity = await SynapseClient.getEntity(\n        token,\n        entityId,\n        versionNumber,\n      )\n      const entityContent = await SynapseClient.getFileEntityContent(\n        token,\n        entity,\n      )\n      const content = JSON.parse(entityContent)\n      return {\n        version: entity.versionNumber,\n        content: content,\n      }\n    } catch (error) {\n      const newError = {\n        message: `${error.message}:  configuration data for ${entityId} failed to load`,\n      }\n      this.onError(newError)\n      return Promise.reject(newError)\n    }\n  }\n\n  //same as above but also uses $RefParser to convert json $refs to regular json\n  getFileEntityDataDereferenced = async (\n    token: string,\n    entityId: string,\n    versionNumber?: string,\n  ): Promise<{ version?: number; content: JSON }> => {\n    const { version, content } = await this.getFileEntityData(\n      token,\n      entityId,\n      versionNumber,\n    )\n    const derefContent = (await $RefParser.dereference(content)) as JSON\n    return {\n      version: version,\n      content: derefContent,\n    }\n  }\n\n  getData = async (token?: string): Promise<void> => {\n    if (!token) {\n      return\n    }\n    try {\n      let formData = {}\n      let dataFileHandleId: string | undefined\n      let submitted: boolean | undefined\n      let formSchemaVersion = undefined\n      let uiSchemaVersion = undefined\n      let navSchemaVersion = undefined\n      const { searchParams } = this.props\n      if (searchParams) {\n        ;({ dataFileHandleId, submitted } = searchParams)\n      }\n\n      //for not new form we need to get the data\n      //and if it is submitted form we need to pull appropriave schema versions\n      //for new form (no dataFileHandleId) we need to populate schema versions\n\n      if (dataFileHandleId) {\n        const fileData = await SynapseClient.getFileHandleContentFromID(\n          dataFileHandleId,\n          token,\n        )\n        formData = JSON.parse(fileData)\n        if (submitted && formData && formData['metadata']) {\n          ;({ formSchemaVersion, uiSchemaVersion, navSchemaVersion } = formData[\n            'metadata'\n          ])\n        }\n      }\n\n      const promises = [\n        this.getFileEntityDataDereferenced(\n          token,\n          this.props.formSchemaEntityId,\n          formSchemaVersion,\n        ),\n        this.getFileEntityData(\n          token,\n          this.props.formUiSchemaEntityId,\n          uiSchemaVersion,\n        ),\n        this.getFileEntityData(\n          token,\n          this.props.formNavSchemaEntityId,\n          navSchemaVersion,\n        ),\n      ]\n      const configData = await Promise.all(promises)\n\n      if (!dataFileHandleId) {\n        //if we are creating a new file - store the versions\n        formData = {\n          metadata: {\n            formSchemaVersion: configData[0].version,\n            uiSchemaVersion: configData[1].version,\n            navSchemaVersion: configData[2].version,\n          },\n        }\n      }\n      this.setState({\n        formData: formData,\n        formSchema: configData[0].content,\n        formUiSchema: configData[1].content,\n        formNavSchema: configData[2].content,\n        isLoading: false,\n      })\n    } catch (error) {\n      this.onError({ message: error })\n    } finally {\n      this.setState({\n        isLoading: false,\n      })\n    }\n  }\n\n  finishedProcessing = (status: StatusEnum, message?: string) => {\n    this.setState({\n      isLoading: false,\n      notification: { type: status, message: message },\n      status: status,\n    })\n    //this will show the update message for 7 seconds\n    setTimeout(() => {\n      this.setState({ status: undefined })\n    }, 7000)\n  }\n\n  onError = (error: Error) => {\n    this.setState({\n      notification: {\n        type: StatusEnum.ERROR,\n        message: error.message,\n        name: error.name,\n      },\n      status: StatusEnum.ERROR,\n      isLoading: false,\n    })\n  }\n\n  submitForm = async (formData: any) => {\n    await this.saveToFile(formData)\n\n    this.setState({\n      isLoading: true,\n    })\n\n    await SynapseClient.submitFormData(this.state.formDataId!, this.props.token)\n    this.finishedProcessing(StatusEnum.SUBMIT_SUCCESS, 'File Submitted')\n  }\n\n  createOrUpdateFormDataFile = async (\n    fileName: string,\n    fileContentsBlob: Blob,\n  ): Promise<FormData> => {\n    fileName = `${fileName}.json`\n    const fileUploadComplete = await SynapseClient.uploadFile(\n      this.props.token,\n      fileName,\n      fileContentsBlob,\n    )\n    const { searchParams } = this.props\n    const formGroupId = searchParams && searchParams.formGroupId\n    if (!formGroupId) {\n      console.error('formGroupId must be defined')\n      throw 'formGroupId must be defined'\n    }\n    try {\n      // do we need to create a new file entity, or update an existing file entity?\n      const newFileHandleId = fileUploadComplete.fileHandleId\n\n      let formData\n      if (this.state.formDataId) {\n        formData = await SynapseClient.updateFormData(\n          this.state.formDataId,\n          fileName,\n          newFileHandleId,\n          this.props.token!,\n        )\n      } else {\n        formData = await SynapseClient.createFormData(\n          formGroupId,\n          fileName,\n          newFileHandleId,\n          this.props.token!,\n        )\n      }\n\n      return formData\n    } catch (error) {\n      this.onError(error)\n      throw error\n    }\n  }\n\n  saveToFile = async (data: any) => {\n    const fileName = get(data, this.props.fileNamePath)\n    this.setState({\n      status: StatusEnum.PROGRESS,\n      notification: { type: StatusEnum.PROGRESS, message: 'Progress' },\n      isLoading: true,\n    })\n\n    if (!fileName) {\n      // try to find corresponding property. By convention it should be first level property\n      // and follow pattern screen.prop\n      let errorTitle = 'File Name'\n      try {\n        // get it to the schema format\n        const searchString = `${this.props.fileNamePath.replace(\n          '.',\n          '.properties.',\n        )}.title`\n        errorTitle = get(\n          this.state.formSchema.properties,\n          searchString,\n          errorTitle,\n        )\n      } finally {\n        const error = `Please Provide the ${errorTitle} before saving`\n        this.onError({ message: error })\n      }\n      return\n    }\n\n    try {\n      const fileContent: Blob = new Blob([JSON.stringify(data)], {\n        type: 'text/json',\n      })\n\n      const formData = await this.createOrUpdateFormDataFile(\n        fileName,\n        fileContent,\n      )\n      this.setState({\n        formDataId: formData.formDataId,\n      })\n\n      this.finishedProcessing(StatusEnum.SAVE_SUCCESS, 'File Saved')\n    } catch (error) {\n      this.onError({ message: error })\n    }\n  }\n\n  isReadyToDisplayForm = (state: SynapseFormWrapperState): boolean => {\n    return (\n      this.state.status !== StatusEnum.ERROR_CRITICAL &&\n      state.formSchema &&\n      state.formUiSchema &&\n      state.formNavSchema &&\n      state.formData\n    )\n  }\n\n  renderLoader = (\n    state: SynapseFormWrapperState,\n    props: SynapseFormWrapperProps,\n  ): JSX.Element => {\n    if (\n      includes([StatusEnum.ERROR, StatusEnum.ERROR_CRITICAL], state.status) &&\n      props.token &&\n      state.isLoading\n    ) {\n      return (\n        <div className=\"text-center\">\n          <span className={'spinner'} />\n        </div>\n      )\n    } else {\n      return <></>\n    }\n  }\n\n  renderNotification = (notification?: Notification): JSX.Element => {\n    if (!notification) {\n      return <></>\n    }\n    if (notification.type === StatusEnum.ERROR) {\n      return (\n        <Alert\n          variant=\"danger\"\n          onClose={() => this.setState({ status: undefined })}\n        >\n          <Alert.Heading>Error</Alert.Heading>\n\n          <p>\n            {notification.name} {notification.message}\n          </p>\n        </Alert>\n      )\n    }\n\n    return <></>\n  }\n\n  renderUnauthenticatedView = (token: string | undefined) => {\n    if (token) {\n      return <></>\n    } else {\n      return (\n        <div className=\"panel padding-full unauthenticated text-center\">\n          Please\n          <button\n            className={`SRC-standard-button-shape SRC-light-button SRC-sign-in-button ${SRC_SIGN_IN_CLASS}`}\n          >\n            sign in\n          </button>\n          to initiate or continue your submission\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className={`theme-${this.props.formClass}`}>\n        <div className=\"SRC-ReactJsonForm\">\n          {this.renderNotification(this.state.notification)}\n          {this.renderLoader(this.state, this.props)}\n          {this.renderUnauthenticatedView(this.props.token)}\n\n          {this.isReadyToDisplayForm(this.state) && (\n            <div>\n              <SynapseForm\n                schema={this.state.formSchema}\n                uiSchema={this.state.formUiSchema!}\n                formData={this.state.formData}\n                navSchema={this.state.formNavSchema}\n                isWizardMode={this.props.isWizardMode}\n                formTitle={this.props.formTitle}\n                formClass={this.props.formClass}\n                callbackStatus={this.state.status}\n                onSave={(data: any) => this.saveToFile(data)}\n                onSubmit={(data: any) => this.submitForm(data)}\n                isSubmitted={\n                  this.props.searchParams && !!this.props.searchParams.submitted\n                }\n              ></SynapseForm>\n            </div>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SynapseFormWrapper\n","import * as React from 'react'\n\nimport { SynapseClient } from '../../utils'\nimport {\n  FormData,\n  ListRequest,\n  StatusEnum,\n  ListResponse,\n} from '../../utils/synapseTypes/'\nimport { faTrash, faPhone } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport WarningModal from './WarningModal'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nimport moment from 'moment'\nimport { SRC_SIGN_IN_CLASS } from '../../utils/SynapseConstants'\nimport NoSubmissionsIcon from '../../assets/icons/json-form-tool-no-submissions.svg'\n\n\nexport type SynapseFormSubmissionGridProps = {\n  token?: string\n  formGroupId: string\n  pathpart: string\n  formClass?: string\n  itemNoun: string\n}\n\ntype FileListType = 'IN_PROGRESS' | 'SUBMITTED'\n\ntype SynapseFormSubmissionGridState = {\n  inProgress: {\n    fileList: FormData[]\n    nextPageToken?: string\n  }\n  submitted: {\n    fileList: FormData[]\n    nextPageToken?: string\n  }\n  isLoading: boolean\n  isShowInfoModal: boolean\n  modalContext?: { action: Function; arguments: any[] }\n}\n\nexport default class SynapseFormSubmissionGrid extends React.Component<\n  SynapseFormSubmissionGridProps,\n  SynapseFormSubmissionGridState\n> {\n  modalTitle = 'Trash Submission?'\n  listingText = {\n    inProgress: {\n      subhead: 'In Progress',\n      noRecords: `You don't have submissions in progress`,\n    },\n    submitted: {\n      subhead: 'Submitted',\n      noRecords: `You don't have anything submitted`,\n    },\n  }\n  modalCopy = (\n    <>\n      <p>\n        This submission is currently incomplete and has not been submitted. If\n        you trash this submission, you won't be able to recover the data.\n      </p>\n      <p>Are you sure you want to trash this submission?</p>\n    </>\n  )\n  static requestFilter = {\n    IN_PROGRESS: [StatusEnum.WAITING_FOR_SUBMISSION],\n    SUBMITTED: [\n      StatusEnum.SUBMITTED_WAITING_FOR_REVIEW,\n      StatusEnum.ACCEPTED,\n      StatusEnum.REJECTED,\n    ],\n  }\n\n  constructor(props: SynapseFormSubmissionGridProps) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      isShowInfoModal: false,\n      inProgress: {\n        fileList: [],\n      },\n      submitted: {\n        fileList: [],\n      },\n    }\n  }\n\n  async componentDidMount() {\n    await this.refresh(this.props.token)\n  }\n\n  async componentDidUpdate(prevProps: SynapseFormSubmissionGridProps) {\n    const shouldUpdate = this.props.token !== prevProps.token\n    if (shouldUpdate) {\n      await this.refresh(this.props.token)\n    }\n  }\n\n  async refresh(token?: string) {\n    if (token) {\n      await this.getUserFileListing().catch(error => {\n        this.onError(error)\n      })\n    }\n  }\n\n  getTypeFileListing = async (\n    filter: StatusEnum[],\n    nextPageToken?: string,\n  ): Promise<{ fileList: FormData[]; nextPageToken?: string }> => {\n    this.setState({\n      isLoading: true,\n    })\n    const token = this.props.token\n    const groupId = this.props.formGroupId\n    try {\n      const cleanUpName = (item: FormData): FormData => {\n        item = { ...item, ...{ name: item.name.replace('.json', '') } }\n        return item\n      }\n      const request: ListRequest = {\n        filterByState: filter,\n        groupId,\n        nextPageToken: nextPageToken,\n      }\n\n      const response: ListResponse = await SynapseClient.listFormData(\n        request,\n        token,\n      )\n      const fileList = response.page\n        ? response.page.map(item => cleanUpName(item))\n        : []\n\n      return {\n        fileList,\n        nextPageToken: response.nextPageToken,\n      }\n    } catch (error) {\n      this.onError(error)\n      return Promise.reject(error)\n    } finally {\n      this.setState({\n        isLoading: false,\n      })\n    }\n  }\n\n  getMore = async (fileListType: FileListType, nextPageToken: string) => {\n    const statusList =\n      fileListType === 'SUBMITTED'\n        ? SynapseFormSubmissionGrid.requestFilter.SUBMITTED\n        : SynapseFormSubmissionGrid.requestFilter.IN_PROGRESS\n    const result = await this.getTypeFileListing(statusList, nextPageToken)\n    if (fileListType === 'SUBMITTED') {\n      this.setState(prevState => ({\n        submitted: {\n          fileList: [...prevState.submitted.fileList, ...result.fileList],\n          nextPageToken: result.nextPageToken,\n        },\n      }))\n    } else {\n      this.setState(prevState => ({\n        inProgress: {\n          fileList: [...prevState.inProgress.fileList, ...result.fileList],\n          nextPageToken: result.nextPageToken,\n        },\n      }))\n    }\n  }\n\n  getUserFileListing = async (): Promise<void> => {\n    const inProgress = await this.getTypeFileListing(\n      SynapseFormSubmissionGrid.requestFilter.IN_PROGRESS,\n      this.state.inProgress.nextPageToken,\n    )\n    const submitted = await this.getTypeFileListing(\n      SynapseFormSubmissionGrid.requestFilter.SUBMITTED,\n      this.state.submitted.nextPageToken,\n    )\n\n    this.setState({\n      inProgress: inProgress,\n      submitted: submitted,\n    })\n\n    return\n  }\n  onError = (args: any) => {\n    console.log(args)\n  }\n\n  deleteFile = async (token: string, formDataId: string): Promise<any> => {\n    this.setState({\n      isLoading: true,\n      modalContext: undefined,\n    })\n    try {\n      await SynapseClient.deleteFormData(formDataId, token)\n      //await this.getUserFileListing(token, this.props.formGroupId)\n      this.setState((prevState, props) => ({\n        inProgress: {\n          fileList: prevState.inProgress.fileList.filter(\n            item => item.formDataId !== formDataId,\n          ),\n          nextPageToken: prevState.inProgress.nextPageToken,\n        },\n      }))\n    } catch (error) {\n      this.onError(error)\n      return []\n    } finally {\n      this.setState({\n        isLoading: false,\n      })\n    }\n  }\n\n  setModalConfirmationState = (token: string, formDataId: string) => {\n    this.setState({\n      modalContext: {\n        action: this.deleteFile,\n        arguments: [token, formDataId],\n      },\n    })\n  }\n  /* ------------------------------------------   rendering fns  ------------------------------------------------*/\n\n  renderLoading = (\n    token: string | undefined,\n    isLoading: boolean,\n  ): JSX.Element => {\n    if (token && isLoading) {\n      return (\n        <div className=\"text-center\">\n          <span>Loading&hellip;</span>\n          <span style={{ marginLeft: '2px' }} className={'spinner'} />\n        </div>\n      )\n    } else {\n      return <></>\n    }\n  }\n\n  renderUnauthenticatedView = (token: string | undefined) => {\n    if (token) {\n      return <></>\n    } else {\n      return (\n        <div className=\"file-grid\">\n          <h3>Your Submissions</h3>\n          <div className=\"panel padding-full unauthenticated text-center\">\n          <p className=\"padding-full\">Please sign in or register to initiate or continue your submission</p>\n            <button className={`btn btn-large ${SRC_SIGN_IN_CLASS}`}>\n              sign in\n            </button>\n          </div>\n        </div>\n      )\n    }\n  }\n\n  renderSubmissionsTable = (\n    fileList: FormData[],\n    pathpart: string,\n    formGroupId: string,\n    fileListType: FileListType,\n    nextPageToken?: string,\n  ): JSX.Element => {\n    if (!formGroupId) {\n      this.onError('Form Group ID is undefined')\n      return <></>\n    }\n    const isInProgress = fileListType === 'IN_PROGRESS'\n    const textSource = isInProgress\n      ? this.listingText.inProgress\n      : this.listingText.submitted\n\n    const subhead = <h4>{textSource.subhead}</h4>\n    const tableTitleRow = isInProgress ? (\n      <tr>\n        <th>Submission Name</th>\n        <th>Edited On</th>\n        <th></th>\n        <th></th>\n      </tr>\n    ) : (\n      <tr>\n        <th>Submission Name</th>\n        <th>Submitted On</th>\n        <th>Status</th>\n        <th></th>\n      </tr>\n    )\n\n    let content = (\n      <h5 className=\"text-center no-submissions padding-full\">\n        {textSource.noRecords}\n      </h5>\n    )\n    const viewMore = nextPageToken ? (\n      <div className=\"view-more\">\n        <button\n          className=\"btn btn-link\"\n          onClick={() => this.getMore(fileListType, nextPageToken)}\n        >\n          more ...\n        </button>\n      </div>\n    ) : (\n      <></>\n    )\n    if (fileList.length > 0) {\n      content = (\n        <div className=\"file-table\" key={`table${fileListType}`}>\n          <table className=\"table\">\n            <thead>{tableTitleRow}</thead>\n            <tbody>\n              {fileList.map((dataFileRecord, key) => {\n                if (isInProgress) {\n                  return (\n                    <tr key={dataFileRecord.formDataId! + key + fileListType}>\n                      <td>\n                        <a\n                          href={`${pathpart}?formGroupId=${formGroupId}&formDataId=${dataFileRecord.formDataId}&dataFileHandleId=${dataFileRecord.dataFileHandleId}`}\n                        >\n                          {dataFileRecord.name}\n                        </a>\n                      </td>\n                      <td>{moment(dataFileRecord.modifiedOn).calendar()}</td>\n                      <td>&nbsp;</td>\n                      <td className=\"text-right\">\n                        <button\n                          className=\"btn\"\n                          aria-label=\"delete\"\n                          onClick={() =>\n                            this.setModalConfirmationState(\n                              this.props.token!,\n                              dataFileRecord.formDataId!,\n                            )\n                          }\n                        >\n                          <FontAwesomeIcon\n                            icon={faTrash}\n                            aria-hidden=\"true\"\n                          ></FontAwesomeIcon>\n                        </button>\n                      </td>\n                    </tr>\n                  )\n                } else {\n                  return (\n                    <tr key={dataFileRecord.formDataId! + key}>\n                      <td>\n                        <a\n                          href={`${pathpart}?formGroupId=${formGroupId}&formDataId=${dataFileRecord.formDataId}&dataFileHandleId=${dataFileRecord.dataFileHandleId}&submitted=1`}\n                        >\n                          {dataFileRecord.name}\n                        </a>\n                      </td>\n                      <td>{moment(dataFileRecord.modifiedOn).calendar()}</td>\n                      <td>{dataFileRecord.submissionStatus.state}</td>\n                      <td className=\"text-right\">\n                        <button\n                          className=\"btn\"\n                          aria-label=\"information\"\n                          onClick={() =>\n                            this.setState({ isShowInfoModal: true })\n                          }\n                        >\n                          <FontAwesomeIcon\n                            icon={faPhone}\n                            aria-hidden=\"true\"\n                          ></FontAwesomeIcon>\n                        </button>\n                      </td>\n                    </tr>\n                  )\n                }\n              })}\n            </tbody>\n          </table>\n          {viewMore}\n        </div>\n      )\n    }\n    return (\n      <div key={`grid-${fileListType}`}>\n        {subhead} {content}\n      </div>\n    )\n  }\n\n  renderSubmissionsTables = (\n    inProgress: { fileList: FormData[]; nextPageToken?: string },\n    submitted: { fileList: FormData[]; nextPageToken?: string },\n    pathpart: string,\n    formGroupId: string,\n  ): JSX.Element[] | JSX.Element => {\n    if (inProgress.fileList.length === 0 && submitted.fileList.length === 0) {\n      return (\n        <div className=\"text-center\">\n          <img src={NoSubmissionsIcon} alt=\"no submissions\"></img>\n          <p className=\"padding-full\">You have no submissions</p>\n        </div>\n      )\n    } else {\n      return [\n        this.renderSubmissionsTable(\n          inProgress.fileList,\n          pathpart,\n          formGroupId,\n          'IN_PROGRESS',\n          inProgress.nextPageToken,\n        ),\n\n       this.renderSubmissionsTable(\n          submitted.fileList,\n          pathpart,\n          formGroupId,\n          'SUBMITTED',\n          submitted.nextPageToken,\n        ),\n      ]\n    }\n  }\n\n  render() {\n    return (\n      <div className={`theme-${this.props.formClass}`}>\n        <div className=\"SRC-ReactJsonForm\">\n          {this.renderLoading(this.props.token, this.state.isLoading)}\n          {this.renderUnauthenticatedView(this.props.token)}\n\n          {!this.state.isLoading && (\n            <div className=\"file-grid \">\n              <h3>Your Submissions</h3>\n              <div className=\"panel panel-default padding-full\">\n                {this.renderSubmissionsTables(\n                  this.state.inProgress,\n                  this.state.submitted,\n                  this.props.pathpart,\n                  this.props.formGroupId,\n                )}\n\n                <div className=\"text-center\">\n                  <a\n                    className=\"btn btn-large\"\n                    href={`${this.props.pathpart}?formGroupId=${this.props.formGroupId}`}\n                  >\n                    Add new {this.props.itemNoun}\n                  </a>\n                </div>\n              </div>\n            </div>\n          )}\n          {this.state.modalContext && (\n            <WarningModal\n              className={`theme-${this.props.formClass}`}\n              show={typeof this.state.modalContext !== 'undefined'}\n              title={this.modalTitle}\n              copy={this.modalCopy}\n              callbackArgs={this.state.modalContext.arguments}\n              onCancel={() => this.setState({ modalContext: undefined })}\n              onConfirm={(token: string, formDataId: string) =>\n                this.deleteFile(token, formDataId)\n              }\n            />\n          )}\n\n          <Modal\n            show={this.state.isShowInfoModal}\n            animation={false}\n            className={`theme-${this.props.formClass}`}\n          >\n            <Modal.Header\n              closeButton={false}\n              onHide={() => this.setState({ isShowInfoModal: false })}\n            >\n              <Modal.Title>More Information</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              Please <a href=\"mailto:ModelAD@iupui.edu\">contact us</a> for more\n              information about your submission\n            </Modal.Body>\n            <Modal.Footer>\n              <Button\n                variant=\"success\"\n                onClick={() => this.setState({ isShowInfoModal: false })}\n              >\n                OK\n              </Button>\n            </Modal.Footer>\n          </Modal>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { useEffect, useState } from 'react'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faDownload } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'\nimport { SynapseClient } from '../../utils'\nimport { DownloadList } from '../../utils/synapseTypes'\nimport { DOWNLOAD_LIST_CHANGE_EVENT } from '../../utils/functions/dispatchDownloadListChangeEvent'\nimport DownloadListTable from './DownloadListTable'\nimport ReactTooltip from 'react-tooltip'\nimport { TOOLTIP_DELAY_SHOW } from '../table/SynapseTableConstants'\n\nlibrary.add(faDownload)\n\nexport type ShowDownloadProps = {\n  token?: string\n  to?: string\n}\n\nfunction ShowDownload({ token, to }: ShowDownloadProps & RouteComponentProps) {\n  const [downloadList, setDownloadList] = useState<DownloadList | undefined>(\n    undefined,\n  )\n  const [showDownloadModal, setShowDownloadModal] = useState(false)\n  const idForToolTip = 'SHOW_DOWNLOAD_TOOLTIP'\n  const tooltipText = 'Click to view items in your download list.'\n  useEffect(() => {\n    if (!token) {\n      return\n    }\n    const updateDownloadList = async (\n      event?: CustomEventInit<DownloadList>,\n    ) => {\n      if (event?.detail) {\n        setDownloadList(event.detail)\n      } else {\n        // for initialization\n        SynapseClient.getDownloadList(token).then((downloadList) => {\n          setDownloadList(downloadList)\n        })\n      }\n    }\n    updateDownloadList()\n    document.addEventListener(DOWNLOAD_LIST_CHANGE_EVENT, updateDownloadList)\n    return () => {\n      document.removeEventListener(\n        DOWNLOAD_LIST_CHANGE_EVENT,\n        updateDownloadList,\n      )\n    }\n  }, [token])\n\n  if (!token) {\n    return <></>\n  }\n  const size = downloadList?.filesToDownload.length ?? 0\n  if (size === 0 && !showDownloadModal) {\n    // close only if the download modal is already closed too\n    return <></>\n  }\n  const positionClass = to ? 'position-by-anchor' : 'position-by-button'\n  const content = (\n    <>\n      <span id={idForToolTip} data-for={idForToolTip} data-tip={tooltipText}>\n        <span className=\"icon-container\">\n          <FontAwesomeIcon icon=\"download\" />\n        </span>\n        <span className={`download-size ${positionClass}`}>{size}</span>\n      </span>\n      <ReactTooltip\n        delayShow={TOOLTIP_DELAY_SHOW}\n        place={'bottom'}\n        type={'dark'}\n        effect={'solid'}\n        border={true}\n        id={idForToolTip}\n      />\n    </>\n  )\n\n  return to ? (\n    <Link className=\"Download-Link SRC-userImgSmall\" to={to}>\n      {content}\n    </Link>\n  ) : (\n    <>\n      <button\n        onClick={() => setShowDownloadModal(true)}\n        className=\"Download-Link\"\n      >\n        {content}\n      </button>\n      {showDownloadModal && (\n        <DownloadListTable\n          token={token}\n          renderAsModal={true}\n          onHide={() => setShowDownloadModal(false)}\n        />\n      )}\n    </>\n  )\n}\n\nexport default withRouter(ShowDownload)\n","import { QueryBundleRequest, QueryResultBundle } from '../synapseTypes'\nimport { useState } from 'react'\nimport useDeepCompareEffect from 'use-deep-compare-effect'\nimport { SynapseClientError } from '../SynapseClient'\nimport { SynapseClient } from '..'\n\nexport type GetQueryResultBundleProps = {\n  queryBundleRequest: QueryBundleRequest\n  token?: string\n}\n\ntype State = {\n  queryResultBundle: QueryResultBundle | undefined\n  isLoading: boolean\n  error: SynapseClientError | undefined\n}\n\nexport default function useGetQueryResultBundle(\n  props: GetQueryResultBundleProps,\n) {\n  const { queryBundleRequest, token } = props\n  const [state, setState] = useState<State>({\n    isLoading: false,\n    error: undefined,\n    queryResultBundle: undefined,\n  })\n\n  const { isLoading, error, queryResultBundle } = state\n  useDeepCompareEffect(() => {\n    const getData = async () => {\n      if (isLoading) {\n        return\n      }\n      setState({\n        isLoading: true,\n        error: undefined,\n        queryResultBundle: undefined,\n      })\n      try {\n        const data = await SynapseClient.getQueryTableResults(\n          queryBundleRequest,\n          token,\n        )\n        setState({\n          queryResultBundle: data,\n          error: undefined,\n          isLoading: false,\n        })\n      } catch (err) {\n        setState({\n          queryResultBundle: undefined,\n          error: err,\n          isLoading: false,\n        })\n      }\n    }\n    getData()\n  }, [queryBundleRequest, token])\n\n  return { queryResultBundle, error, isLoading }\n}\n","import { useEffect, useState } from 'react'\nexport type UseShowDesktopProps = number\n\nexport const MOBILE_VIEWPORT_WIDTH = 600\n\nexport default function useShowDesktop(breakpoint?: UseShowDesktopProps) {\n  let usedBreakpoint = breakpoint ?? MOBILE_VIEWPORT_WIDTH\n  const [showDesktop, setShowDesktop] = useState(\n    window.innerWidth > usedBreakpoint,\n  )\n  useEffect(() => {\n    const listener = () => {\n      const updatedValue = window.innerWidth > usedBreakpoint\n      if (updatedValue !== showDesktop) {\n        setShowDesktop(updatedValue)\n      }\n    }\n    window.addEventListener('resize', listener)\n    return () => {\n      window.removeEventListener('resize', listener)\n    }\n  })\n\n  return showDesktop\n}\n","import React, { useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport type ExpandableContentProps = {\n  title: JSX.Element\n  content: JSX.Element\n}\n\nexport default function ExpandableContent({\n  title,\n  content,\n}: ExpandableContentProps) {\n  const [isExpanded, setIsExpanded] = useState(false)\n\n  return (\n    <div className=\"ExpandableContent\">\n      <div className={'ExpandableContent__button__container'}>\n        <button\n          className={isExpanded ? 'expanded' : ''}\n          onClick={() => setIsExpanded(!isExpanded)}\n        >\n          <span>{title}</span>\n          <FontAwesomeIcon\n            className=\"SRC-primary-action-color\"\n            icon={isExpanded ? 'times' : 'plus'}\n          />\n        </button>\n      </div>\n      <div\n        className={`ExpandableContent__content__container ${\n          isExpanded ? '' : 'hide'\n        }`}\n      >\n        {content}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { GoalsDataProps } from './Goals'\nimport ExpandableContent from '../ExpandableContent'\nimport QueryCount from '../../../containers/QueryCount'\n\nexport default function ({\n  link,\n  summary,\n  countSql,\n  title,\n  token,\n}: GoalsDataProps) {\n  const titleElement = (\n    <div className=\"Goals__Mobile__Header\">\n      {countSql && <span className=\"Goals__Mobile__Header__Count\">\n        <QueryCount\n          parens={false}\n          sql={countSql}\n          token={token}\n          name=\"\"\n        />\n      </span>}\n      <span className=\"Goals__Mobile__Header__Title\"> {title} </span>\n    </div>\n  )\n  const content = (\n    <div className=\"Goals__Mobile__Content\">\n      <p>{summary}</p>\n      <a className=\"Goals__Mobile__Content__Link\" href={link}>\n        EXPLORE\n      </a>\n    </div>\n  )\n  return <ExpandableContent title={titleElement} content={content} />\n}\n","import React, { useEffect, useState } from 'react'\nimport {\n  QueryBundleRequest,\n  FileHandleAssociation,\n  FileHandleAssociateType,\n  BatchFileRequest,\n} from '../../../utils/synapseTypes'\nimport { SynapseConstants } from '../../../utils'\nimport { SynapseClientError, getFiles } from '../../../utils/SynapseClient'\nimport { ErrorBanner } from '../../ErrorBanner'\nimport useGetQueryResultBundle from '../../../utils/hooks/useGetQueryResultBundle'\nimport useShowDesktop from '../../../utils/hooks/useShowDesktop'\nimport GoalsMobile from './Goals.Mobile'\nimport GoalsDesktop from './Goals.Desktop'\nimport { getFieldIndex } from '../../../utils/functions/queryUtils'\n\nexport type GoalsProps = {\n  entityId: string\n  token?: string\n}\n\nexport type GoalsDataProps = {\n  countSql?: string\n  title: string\n  summary: string\n  link: string\n  asset: string\n  token?: string\n}\n\nenum ExpectedColumns {\n  TABLEID = 'TableId', // Both TableId or CountSql are used to indicate what Table rows to count.\n  COUNT_SQL = 'CountSql', // Code uses CountSql over TableId if defined (if the CountSql column is in the schema and filled in).\n  TITLE = 'Title',\n  SUMMARY = 'Summary',\n  LINK = 'Link',\n  ASSET = 'Asset',\n}\n\nexport default function Goals(props: GoalsProps) {\n  const { entityId, token } = props\n  const [assets, setAssets] = useState<string[] | undefined>()\n  const [error, setError] = useState<string | SynapseClientError | undefined>()\n  const showDesktop = useShowDesktop()\n  const queryBundleRequest: QueryBundleRequest = {\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    entityId,\n    partMask:\n      SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS |\n      SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n    query: {\n      sql: `select * from ${entityId} order by ItemOrder`,\n    },\n  }\n  const { queryResultBundle } = useGetQueryResultBundle({\n    token,\n    queryBundleRequest,\n  })\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const assetColumnIndex = getFieldIndex(\n          ExpectedColumns.ASSET,\n          queryResultBundle,\n        )\n        const assets =\n          queryResultBundle?.queryResult.queryResults.rows.map(\n            el => el.values[assetColumnIndex],\n          ) ?? []\n        if (assets.length === 0) {\n          // wait for data to load\n          return\n        }\n        const fileHandleAssociationList: FileHandleAssociation[] = assets.map(\n          fileId => {\n            return {\n              associateObjectId: entityId!,\n              associateObjectType: FileHandleAssociateType.TableEntity,\n              fileHandleId: fileId,\n            }\n          },\n        )\n        const batchFileRequest: BatchFileRequest = {\n          includeFileHandles: false,\n          includePreSignedURLs: true,\n          includePreviewPreSignedURLs: false,\n          requestedFiles: fileHandleAssociationList,\n        }\n        const files = await getFiles(batchFileRequest, token)\n        setError(undefined)\n        setAssets(\n          files.requestedFiles\n            .filter(el => el.preSignedURL !== undefined)\n            .map(el => el.preSignedURL!),\n        )\n      } catch (e) {\n        console.error('Error on get data', e)\n        setError(e)\n      }\n    }\n    getData()\n  }, [entityId, token, queryResultBundle])\n\n  const tableIdColumnIndex = getFieldIndex(\n    ExpectedColumns.TABLEID,\n    queryResultBundle,\n  )\n  const countSqlColumnIndex = getFieldIndex(\n    ExpectedColumns.COUNT_SQL,\n    queryResultBundle,\n  )\n\n  const titleColumnIndex = getFieldIndex(\n    ExpectedColumns.TITLE,\n    queryResultBundle,\n  )\n  const summaryColumnIndex = getFieldIndex(\n    ExpectedColumns.SUMMARY,\n    queryResultBundle,\n  )\n  const linkColumnIndex = getFieldIndex(ExpectedColumns.LINK, queryResultBundle)\n\n  return (\n    <div className={`Goals${showDesktop ? '__Desktop' : ''}`}>\n      {error && <ErrorBanner error={error} token={token} />}\n      {queryResultBundle?.queryResult.queryResults.rows.map((el, index) => {\n        const values = el.values\n        const tableId =\n          tableIdColumnIndex > -1 ? values[tableIdColumnIndex] : undefined\n        let countSql\n        if (countSqlColumnIndex > -1 && values[countSqlColumnIndex]) {\n          countSql = values[countSqlColumnIndex]\n        } else if (tableId) {\n          countSql = `SELECT * FROM ${tableId}`\n        }\n        const title = values[titleColumnIndex]\n        const summary = values[summaryColumnIndex]\n        const link = values[linkColumnIndex]\n        // assume that we recieve assets in order of rows and there is an asset for each item\n        // can revisit if this isn't the case.\n        const asset = assets?.[index] ?? ''\n        const goalsDataProps: GoalsDataProps = {\n          countSql,\n          title,\n          summary,\n          link,\n          asset,\n          token,\n        }\n        return showDesktop ? (\n          <GoalsDesktop {...goalsDataProps} />\n        ) : (\n          <GoalsMobile {...goalsDataProps} />\n        )\n      })}\n    </div>\n  )\n}\n","import React from 'react'\nimport { ProgramsDataProps } from './Programs'\nimport ExpandableContent from '../ExpandableContent'\nimport { Icon } from '../../../containers/row_renderers/utils'\n\nexport default function ({\n  link,\n  summary,\n  title,\n  color,\n  iconValue,\n  iconOptions, \n  exploreLink,\n}: ProgramsDataProps) {\n  const titleElement = (\n    <div className=\"Programs__Mobile__Header\">\n      <Icon type={iconValue} iconOptions={iconOptions}/>\n      <span className=\"Programs__Mobile__Header__Title\"> {title} </span>\n    </div>\n  )\n  const content = (\n    <div className=\"Programs__Mobile__Content\">\n      {link && <p className=\"Programs__Card__header__info__link\">\n        <a\n        style={{borderBottom: `1px solid ${color}`}}\n        href={link}>\n          Visit website\n        </a>\n      </p>}\n      <p>{summary}</p>\n      <p>\n        <a href={exploreLink} className=\"homepage-button-link\">\n            EXPLORE\n        </a>\n      </p>\n    </div>\n  )\n  return <ExpandableContent title={titleElement} content={content} />\n}\n","import React from 'react'\nimport { QueryBundleRequest } from '../../../utils/synapseTypes'\nimport { SynapseConstants } from '../../../utils'\nimport { ErrorBanner } from '../../ErrorBanner'\nimport useGetQueryResultBundle from '../../../utils/hooks/useGetQueryResultBundle'\nimport ResourcesDesktop from './Resources.Desktop'\nimport ResourcesMobile from './Resources.Mobile'\nimport useShowDesktop from '../../../utils/hooks/useShowDesktop'\nimport { getFieldIndex } from '../../../utils/functions/queryUtils'\n\nexport type ResourcesProps = {\n  entityId: string\n  token?: string\n}\n\nenum ExpectedColumns {\n  NAME = 'Name',\n  WIKI = 'Wiki',\n}\n\nexport type Data = {\n  name: string\n  ownerId: string\n  wikiId: string\n}[]\n\nexport default function Resources(props: ResourcesProps) {\n  const { entityId, token } = props\n  const showDesktop = useShowDesktop()\n\n  const queryBundleRequest: QueryBundleRequest = {\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    entityId,\n    partMask:\n      SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS |\n      SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n    query: {\n      sql: `SELECT Name, Wiki FROM ${entityId} ORDER BY ItemOrder`,\n    },\n  }\n  const { queryResultBundle, error } = useGetQueryResultBundle({\n    token,\n    queryBundleRequest,\n  })\n\n  const nameIndex = getFieldIndex(ExpectedColumns.NAME, queryResultBundle)\n  const wikiIndex = getFieldIndex(ExpectedColumns.WIKI, queryResultBundle)\n  const data: Data =\n    queryResultBundle?.queryResult.queryResults.rows.map(el => {\n      const values = el.values\n      const name = values[nameIndex]\n      const wikiValue = values[wikiIndex] ?? ''\n      const split = wikiValue.split('/')\n      const ownerId = split[0]\n      const wikiId = split[2]\n      return {\n        name,\n        ownerId,\n        wikiId,\n      }\n    }) ?? []\n  return (\n    <div className=\"Resources\">\n      <ErrorBanner error={error} token={token} />\n      {showDesktop ? (\n        <ResourcesDesktop data={data} token={token} />\n      ) : (\n        <ResourcesMobile data={data} token={token} />\n      )}\n    </div>\n  )\n}\n","import { Data } from './Resources'\nimport React, { useState } from 'react'\nimport MarkdownSynapse from '../../MarkdownSynapse'\n\nexport type ResourcesDesktopProps = {\n  data: Data\n  token?: string\n}\n\nexport default function ResourcesDesktop({\n  data,\n  token,\n}: ResourcesDesktopProps) {\n  const [index, setIndex] = useState(0)\n  return (\n    <div className=\"control-container\">\n      <div className=\"button-container\">\n        {data?.map((el, curIndex) => {\n          return (\n            <button\n              className={index === curIndex ? 'isSelected' : ''}\n              onClick={() => setIndex(curIndex)}\n              key={el.name}\n            >\n              {el.name}\n            </button>\n          )\n        })}\n        {/* \n            This button keeps the border line in the button container running from top to bottom,\n            it doesn't have any functionality.\n          */}\n        <button className=\"gap-fill\" />\n      </div>\n      <div className=\"content-container\">\n        {data?.map((el, curIndex) => {\n          const { ownerId, wikiId } = el\n          return (\n            <span key={ownerId} className={index === curIndex ? '' : 'hide'}>\n              <MarkdownSynapse\n                token={token}\n                ownerId={ownerId}\n                wikiId={wikiId}\n              />\n            </span>\n          )\n        })}\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Data } from './Resources'\nimport MarkdownSynapse from '../../../containers/MarkdownSynapse'\nimport ExpandableContent from '../ExpandableContent'\n\nexport type ResourcesMobileProps = {\n  data: Data\n  token?: string\n}\n\nexport default function ResourcesMobile({ data, token }: ResourcesMobileProps) {\n  return (\n    <div className=\"Resources_Mobile\">\n      {data.map(({ name, ownerId, wikiId }) => {\n        let title = <> {name} </>\n        let markdown = (\n          <MarkdownSynapse token={token} ownerId={ownerId} wikiId={wikiId} />\n        )\n        return <ExpandableContent title={title} content={markdown} />\n      })}\n    </div>\n  )\n}\n","import * as React from 'react'\nimport Parser from 'rss-parser'\nimport moment from 'moment'\nimport subscribePlus from '../assets/icons/subscribe_plus.svg'\nimport MailchimpSubscribe from 'react-mailchimp-subscribe'\nimport { LockedFacet } from './QueryWrapper'\nimport NoData from '../assets/icons/file-dotted.svg'\n\nlet rssParser = new Parser()\ntype RssState = {\n  rssFeed: any\n  isLoadingError: boolean\n  itemId2MoreItem: {}\n  isShowingSubscribeUI: boolean\n  allItemsUrl?: string\n}\n\nexport type RssFeedCardsProps = {\n  url: string\n  lockedFacet?: LockedFacet // optional tag to filter by, typically set by using this component on a DetailsPage\n  itemsToShow: number\n  allowCategories?: string[]\n  mailChimpListName?: string\n  mailChimpUrl?: string\n  viewAllNewsButtonText?: string\n}\nexport default class RssFeedCards extends React.Component<RssFeedCardsProps, RssState> {\n  // only update the state if this component is mounted\n  _isMounted = false\n  \n  constructor(props: RssFeedCardsProps) {\n    super(props)\n    this.state = {\n      rssFeed: {},\n      isLoadingError: false,\n      itemId2MoreItem: {},\n      isShowingSubscribeUI: false,\n    }\n  }\n  \n  componentDidMount() {\n    this._isMounted = true\n    const { url, lockedFacet } = this.props\n    const lockedFacetValue = lockedFacet?.value\n    const tagPath = lockedFacetValue ? `/tag/${lockedFacetValue.replace(' ', '-')}` : ''\n    const allItems = `${url}${tagPath}`\n    const feedUrl = `${allItems}/feed/`\n    fetch(feedUrl)\n      .then(response => response.text())\n      .then(responseData => rssParser.parseString(responseData))\n      .then(rss => {\n        if (this._isMounted) {\n          this.setState({ rssFeed: rss,\n          allItemsUrl: allItems })\n        }\n      })\n      .catch(err => {\n        if (this._isMounted) {\n          this.setState({ isLoadingError: true })\n        }\n      })\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  public onClickSubscribe = () => {\n    this.setState({ isShowingSubscribeUI: true })\n  }\n\n  render() {\n    const { viewAllNewsButtonText } = this.props\n    \n    if (this.state.rssFeed.items?.length === 0) {\n      return (\n        <div className=\"text-center SRCBorderedPanel SRCBorderedPanel--padded2x\">\n          <img src={NoData} alt=\"no data\"></img>\n          <div style={{ marginTop: '20px', fontStyle: 'italic' }}>\n            There are no items currently available\n          </div>\n        </div>\n      )\n    }\n    return (\n      <>        \n        {this.props.mailChimpUrl && (\n          <div className=\"FeedSubscribe text-center\">\n            {!this.state.isShowingSubscribeUI && (\n              <a className=\"FeedSubscribeToNewsLink\" onClick={this.onClickSubscribe}>\n                <img src={subscribePlus} alt=\"Subscribe to News\" />\n                Subscribe to News\n              </a>\n            )}\n            {this.state.isShowingSubscribeUI && (\n                <div className=\"MailchimpSubscribeContainer\">\n                  <img src={subscribePlus} alt=\"Subscribe to News\" />\n                  <p>\n                    Subscribe to receive the {this.props.mailChimpListName} by e-mail,\n                    which provides information and updates related to the\n                    Portal. You can opt out at any time by using the unsubscribe\n                    link within the e-mail. We will not share your information\n                    with any third parties or use it for any other purposes.\n                  </p>\n                  <div className=\"SRC-marginBottomTop\">\n                    <MailchimpSubscribe url={this.props.mailChimpUrl} />\n                  </div>\n                </div>\n            )}\n          </div>\n        )}\n        <div className=\"Feed\">\n          <div className=\"FeedItems\">\n          {this.state.rssFeed.items &&\n            this.state.rssFeed.items.map((item: any, index: any) => {\n              // The other is to hide the large number of items in a particular feed (usually a max of 10 are returned).  See state.isShowingMoreItems\n              let isItemVisible: boolean =\n                index < this.props.itemsToShow\n\n              return (\n                <div\n                  key={item.guid}\n                  className={`FeedItem ${isItemVisible ? '' : 'hidden'}`}\n                >\n                  <div>\n                    <div className=\"FeedItemCategories\">\n                      {item['categories'].map((categoryName: string,) => {\n                        // are we allowed to show this category/tag?\n                        const categoryNameLowerCase = categoryName.toLowerCase()\n                        const allowCategories = this.props.allowCategories\n                        if (allowCategories?.findIndex(item => categoryNameLowerCase === item.toLowerCase()) === -1)\n                          return <></>\n                        // else\n                        return <a \n                          href={`${this.state.rssFeed.link}/?tag=${categoryName.replace(' ', '-')}`}\n                          className=\"SRC-no-underline-on-hover\"\n                          target=\"_blank\" rel=\"noopener noreferrer\">\n                            <div key={`${item.guid}_${categoryName}`} className=\"FeedItemCategory\">{categoryName}</div>\n                        </a>\n                      })}\n                    </div>\n                    <p className=\"FeedItemDate\">\n                      {moment(item['isoDate']).format('MMMM YYYY')}\n                    </p>\n                    <p className=\"FeedItemTitle\">{item['title']}</p>\n                    <div className=\"FeedItemDescription\"\n                    >{item['contentSnippet'].replace(/\\[...\\]|\\[…\\]/gm, '…')}</div>\n                    <a className=\"FeedItemLink\" href={item['link']} target=\"_blank\" rel=\"noopener noreferrer\">Continue reading</a>\n                  </div>\n                </div>\n              )\n            })}\n          </div>\n          {this.state.rssFeed.items &&\n            this.state.rssFeed.items.length > this.props.itemsToShow && this.state.allItemsUrl && (\n              <div className=\"FeedViewAllNewsButtonContainer\">\n                <a className=\"homepage-button-link\" href={this.state.allItemsUrl} target=\"_blank\" rel=\"noopener noreferrer\">\n                    { viewAllNewsButtonText ?? 'VIEW ALL NEWS' }\n                </a>\n              </div>\n            )}\n          {this.state.isLoadingError && (\n            <div>Unable to load feed: {this.props.url}</div>\n          )}\n        </div>\n      </>\n    )\n  }\n}\n","import React, { FunctionComponent /*, useState , useEffect */ } from 'react' // importing FunctionComponent\nimport Plotly from 'plotly.js-basic-dist'\nimport * as PlotlyTyped from 'plotly.js'\nimport createPlotlyComponent from 'react-plotly.js/factory'\nimport { GraphItem, PlotStyle, Dictionary } from './types'\nimport _ from 'lodash-es'\nconst Plot = createPlotlyComponent(Plotly)\n\nexport type DotPlotProps = {\n  plotData: GraphItem[]\n  layoutConfig: Partial<PlotlyTyped.Layout>\n  optionsConfig: Partial<PlotlyTyped.Config>\n  label?: string\n  style?: React.CSSProperties\n  id: string\n  isLegend?: boolean\n  isXAxis?: boolean\n  xMax?: number\n  plotStyle?: PlotStyle\n  markerSymbols?: Dictionary\n  onClick?: Function\n}\n\ntype LayoutOptions = {\n  isLegend: boolean\n  isXAxis: boolean\n  maxValue?: number\n  backgroundColor?: string\n}\n\nfunction getLayout(\n  dotPlotLayoutConfig: Partial<PlotlyTyped.Layout>,\n  layoutOptions?: LayoutOptions,\n): Partial<PlotlyTyped.Layout> {\n  const result = _.cloneDeep(dotPlotLayoutConfig)\n  if (!layoutOptions) {\n    return result\n  }\n  if (layoutOptions.backgroundColor) {\n    result.plot_bgcolor = layoutOptions.backgroundColor\n  }\n  result.yaxis!.showticklabels = false\n  result.xaxis!.range = [-5, layoutOptions.maxValue! + 30]\n  result.xaxis!.visible = layoutOptions.isXAxis\n  result.showlegend = layoutOptions.isLegend\n  result.margin = {\n    t: 0,\n    b: layoutOptions.isXAxis ? 50 : 0,\n    l: 0,\n    r: 0,\n    pad: 15,\n  }\n  let height = 30\n  if (layoutOptions.isLegend) {\n    height = 35\n    result.margin.pad = 0\n    result.xaxis = {\n      visible: false,\n      zeroline: false,\n      showgrid: false,\n      showline: false,\n      range: [0, 1],\n    }\n\n    result.yaxis = {\n      visible: false,\n      showline: false,\n    }\n  }\n  if (layoutOptions.isXAxis) {\n    result.yaxis = {\n      visible: false,\n      showgrid: false,\n      showline: false,\n    }\n    height = 50\n  }\n\n  result.height = height\n\n  return result\n}\n\nfunction createArrayOfGroupValues(\n  headers: string[],\n  items: GraphItem[],\n): any[] {\n  const result = new Array(headers.length)\n  items.forEach(item => {\n    const index = headers.indexOf(item.y)\n    result[index] = item.x\n  })\n  return result\n}\n\nfunction getPlotDataPoints(\n  graphItems: GraphItem[],\n  plotStyle: PlotStyle,\n  ySorted?: string[],\n  markerSymbols?: Dictionary,\n): any[] {\n  const isFakeData = ySorted === undefined\n  var groups = _.uniq(graphItems.map(item => item.group))\n  const data: any = []\n  const defaultSymbols = [\n    'y-down',\n    'triangle-up',\n    'cross-thin-open',\n    'triangle-up-open-dot',\n    'star-square-open',\n    'diamond-x',\n  ]\n\n  groups.forEach((group, i) => {\n    data.push({\n      type: 'scatter',\n\n      x: isFakeData\n        ? [-10] // fake datavalue outside of the bounds\n        : createArrayOfGroupValues(\n            ySorted!,\n            graphItems.filter(row => row.group === group),\n          ),\n      y: ySorted,\n      text: [group],\n      hovertemplate: `%{x} %{text}<extra></extra>`,\n      mode: 'markers',\n      name: group,\n      marker: {\n        color: plotStyle.markerFill,\n        line: {\n          color: plotStyle.markerLine,\n          width: 1,\n        },\n\n        symbol: markerSymbols ? markerSymbols[group] : defaultSymbols[i],\n        size: plotStyle.markerSize,\n      },\n    })\n  })\n  return data\n}\n\nconst DotPlot: FunctionComponent<DotPlotProps> = ({\n  plotData,\n  optionsConfig,\n  layoutConfig,\n  label,\n  id,\n  xMax,\n  style = { width: '100%', height: '100%' },\n  markerSymbols,\n  plotStyle = {\n    markerFill: '#515359',\n    markerLine: '#515359',\n    markerSize: 9,\n    backgroundColor: 'transparent',\n  },\n  onClick,\n  isLegend = false,\n  isXAxis = false,\n}: DotPlotProps) => {\n  const pointsTypes = label ? [label] : undefined\n\n  return (\n    <Plot\n      key={`dotPlot_${id}`}\n      layout={getLayout(layoutConfig, {\n        isLegend: isLegend,\n        isXAxis: isXAxis,\n        maxValue: xMax,\n        backgroundColor: plotStyle.backgroundColor,\n      })}\n      style={style}\n      data={getPlotDataPoints(plotData, plotStyle, pointsTypes, markerSymbols)}\n      config={optionsConfig}\n      onClick={(e: any) => (onClick ? onClick(e) : _.noop)}\n    />\n  )\n}\n\nexport default DotPlot\n","import React, { FunctionComponent } from 'react'\nimport Plotly from 'plotly.js-basic-dist'\nimport * as PlotlyTyped from 'plotly.js'\nimport createPlotlyComponent from 'react-plotly.js/factory'\nimport { GraphItem, BarPlotColors, PlotStyle } from './types'\nimport _ from 'lodash-es'\n\nconst Plot = createPlotlyComponent(Plotly)\n\nexport type BarPlotProps = {\n  isTop: boolean\n  style?: React.CSSProperties\n  plotData: GraphItem[]\n  layoutConfig: Partial<PlotlyTyped.Layout>\n  optionsConfig: Partial<PlotlyTyped.Config>\n  label: string\n  xMax: number\n  colors?: BarPlotColors\n  plotStyle?: PlotStyle\n  onClick?: Function\n}\n\ntype LayoutOptions = {\n  isTop: boolean\n  maxValue: number\n  isLegend?: boolean\n  backgroundColor?: string\n}\n\nfunction getBarPlotDataPoints(\n  data: any[],\n  filter?: string,\n  colors?: BarPlotColors,\n): any[] {\n  if (filter) {\n    data = data.filter(item => item.y === filter)\n  }\n  var groups = _.uniq(data.map(item => item['group'])).sort()\n  const result: any[] = []\n  const defaultColors = [`(28,118,175,1)`, `rgba(91,176,181,1)`]\n\n  groups.forEach((group, i) => {\n    const items = data.filter(item => item.group === group)\n    result.push({\n      x: items.map(item => item.x),\n      y: items.map(item => item.y),\n      name: group,\n      orientation: 'h',\n      marker: {\n        color: colors ? colors[group] : defaultColors[i],\n        width: 1,\n      },\n      text: [group],\n      hovertemplate: `%{x} %{text}<extra></extra>`,\n      type: 'bar',\n    })\n  })\n\n  return result\n}\n\nfunction getLayout(\n  layoutConfig: Partial<PlotlyTyped.Layout>,\n  { isTop, maxValue, backgroundColor }: LayoutOptions,\n): Partial<PlotlyTyped.Layout> {\n  const layout = _.cloneDeep(layoutConfig)\n  layout.xaxis = {\n    visible: false,\n    range: [0, maxValue],\n  }\n  if (backgroundColor) {\n    layout.plot_bgcolor = backgroundColor\n    layout.paper_bgcolor = backgroundColor\n  }\n  if (!isTop) {\n    layout.hoverlabel = {\n      font: {\n        size: 10,\n      },\n    }\n  }\n  layout.showlegend = false\n  layout.height = isTop ? 40 : 20\n  return layout\n}\n\nconst BarPlot: FunctionComponent<BarPlotProps> = ({\n  plotData,\n  optionsConfig,\n  isTop,\n  layoutConfig,\n  label,\n  xMax,\n  colors,\n  plotStyle = { backgroundColor: 'transparent' },\n  style = { width: '100%', height: '100%' },\n  onClick,\n}: BarPlotProps) => {\n  return (\n    <Plot\n      style={style}\n      layout={getLayout(layoutConfig, {\n        isTop,\n        maxValue: xMax,\n        backgroundColor: plotStyle.backgroundColor,\n      })}\n      config={optionsConfig}\n      data={getBarPlotDataPoints(plotData, label, colors)}\n      onClick={(e: any) => (onClick ? onClick(e) : _.noop)}\n    />\n  )\n}\n\nexport default BarPlot\n","import React, { FunctionComponent, useState, useEffect } from 'react' // importing FunctionComponent\nimport * as PlotlyTyped from 'plotly.js'\n\nimport { ElementWithTooltip, TooltipVisualProps } from '../ElementWithTooltip'\nimport { unCamelCase } from '../../../utils/functions/unCamelCase'\n\nimport { SynapseConstants } from '../../../utils'\nimport { getFullQueryTableResults } from '../../../utils/SynapseClient'\nimport {\n  QueryResultBundle,\n  QueryBundleRequest,\n  RowSet,\n} from '../../../utils/synapseTypes'\nimport { resultToJson } from '../../../utils/functions/sqlFunctions'\nimport {\n  GraphItem,\n  PlotProps,\n  BarPlotColors,\n  ClickCallbackParams,\n} from './types'\nimport _ from 'lodash-es'\nimport DotPlot from './DotPlot'\nimport BarPlot from './BarPlot'\nimport loadingScreen from '../../LoadingScreen'\n\nexport type ThemesPlotProps = {\n  token?: string\n  onPointClick: ({ facetValue, type, event }: ClickCallbackParams) => void\n  dotPlot: PlotProps\n  topBarPlot: PlotProps\n  sideBarPlot: PlotProps\n  tooltipProps?: TooltipVisualProps\n  dotPlotYAxisLabel?: string\n}\n\ntype TotalsGroupByY = { y: string; count: number }\ntype TotalsGroupByGroup = { group: string; count: number }\n\nconst optionsConfig: Partial<PlotlyTyped.Config> = {\n  displayModeBar: false,\n  responsive: true,\n  scrollZoom: false,\n  editable: false,\n  autosizable: true,\n}\n\nconst tooltipVisualProps: TooltipVisualProps = {\n  delayShow: 0,\n  place: 'right',\n  type: 'light',\n  effect: 'solid',\n  border: true,\n}\nconst dotPlotLayoutConfig: Partial<PlotlyTyped.Layout> = {\n  showlegend: true,\n  dragmode: false,\n  legend: {\n    font: {\n      size: 11,\n    },\n\n    y: 1.1,\n    xanchor: 'right',\n    x: 1,\n\n    orientation: 'h',\n  },\n  xaxis: {\n    visible: true,\n    fixedrange: true,\n    zeroline: false,\n    showgrid: false,\n    showline: true,\n    linecolor: '#ddd', //bottom line\n    autotick: true,\n    ticks: 'outside',\n    tickcolor: '#ddd',\n  },\n\n  yaxis: {\n    fixedrange: true,\n    zeroline: false,\n    gridcolor: '#ddd', //horizontal lines\n    automargin: true,\n  },\n\n  margin: {\n    pad: 20,\n  },\n  hovermode: 'closest',\n}\n\nconst barLayoutConfig: Partial<PlotlyTyped.Layout> = {\n  barmode: 'stack',\n  showlegend: false,\n  dragmode: false,\n  hovermode: 'closest',\n  yaxis: { visible: false, fixedrange: true },\n  margin: {\n    l: 0,\n    r: 0,\n    b: 0,\n    t: 0,\n    pad: 0,\n  },\n}\n\nfunction fetchData(\n  token: string,\n  { xField, yField, groupField, entityId, whereClause, infoField }: PlotProps,\n): Promise<RowSet> {\n  const sql = `SELECT ${xField} as \"x\", ${yField} as \"y\", ${\n    infoField ? infoField + ' as \"info\", ' : ''\n  }   ${groupField} as \"group\" FROM ${entityId} ${\n    whereClause ? ' WHERE ' + whereClause : ''\n  }`\n\n  const queryRequest: QueryBundleRequest = {\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    partMask: SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n    entityId: entityId,\n    query: {\n      sql: sql,\n    },\n  }\n\n  return getFullQueryTableResults(queryRequest, token).then(\n    (data: QueryResultBundle) => {\n      return data.queryResult.queryResults\n    },\n  )\n}\n\nfunction getTotalsByProp<T>(data: GraphItem[], prop: string): T[] {\n  const resultObject = data.reduce((res, obj) => {\n    res[obj[prop]] =\n      (obj[prop] in res ? Number(res[obj[prop]]) : 0) + Number(obj.x)\n    return res\n  }, {})\n  const result = []\n  for (const property in resultObject) {\n    result.push(({\n      [prop]: property,\n      count: resultObject[property] as number,\n    } as unknown) as T)\n  }\n  return result\n}\n\nconst getClickTargetData = (\n  e: PlotlyTyped.PlotMouseEvent,\n  swap: boolean,\n): ClickCallbackParams => {\n  const pointData = e.points[0].data\n\n  let facetValue = pointData.y[0] as string\n  let type = pointData.name\n\n  if (swap) {\n    // @ts-ignore\n    ;[facetValue, type] = [type, facetValue]\n  }\n  return { facetValue, type, event: e.event }\n}\n\nconst renderTopBarLegend = (\n  colors: BarPlotColors | undefined,\n  xLabels: string[],\n): JSX.Element => (\n  <div className=\"ThemesPlot__barPlotLegend\">\n    {xLabels.map((item, i) => (\n      <div style={{ float: 'left' }} key={`topBar_${i}`}>\n        <div\n          className=\"ThemesPlot__barPlotLegend__label\"\n          key=\"topBar_label\"\n          style={{\n            backgroundColor: `${colors ? colors[item] : 'transparent'}`,\n          }}\n        ></div>\n        <div className=\"ThemesPlot__barPlotLegend__graph\" key=\"topBar_graph\">\n          {item}\n        </div>{' '}\n      </div>\n    ))}\n  </div>\n)\n\nconst fadeColors = (colors: { [key: string]: string }, opacity: string) => {\n  for (let key in colors) {\n    colors[key] = colors[key]\n      .replace(',1)', `, ${opacity})`)\n      .replace(',1.0)', `, ${opacity})`)\n  }\n  return colors\n}\n\nconst getTooltip = (data: GraphItem[], filter: string) => {\n  return _.first(data.filter(item => item.y === filter).map(item => item.info))\n}\n\nconst ThemesPlot: FunctionComponent<ThemesPlotProps> = ({\n  token,\n  dotPlot,\n  topBarPlot,\n  sideBarPlot,\n  tooltipProps = tooltipVisualProps,\n  onPointClick,\n  dotPlotYAxisLabel = 'Research Themes',\n}: ThemesPlotProps) => {\n  const [isLoaded, setIsLoaded] = useState(false)\n  const [dotPlotQueryData, setDotPlotQueryData] = useState<GraphItem[]>([])\n  const [topBarPlotData, setTopBarQueryData] = useState<GraphItem[]>([])\n  const [sideBarPlotData, setSideBarQueryData] = useState<GraphItem[]>([])\n\n  useEffect(() => {\n    const dotPlotData = fetchData(token!, dotPlot)\n    const topBarPlotData = fetchData(token!, topBarPlot)\n    const sideBarPlotData = fetchData(token!, sideBarPlot)\n    Promise.all([dotPlotData, topBarPlotData, sideBarPlotData])\n      .then(result => {\n        setDotPlotQueryData(resultToJson(result[0].headers, result[0].rows))\n        setTopBarQueryData(resultToJson(result[1].headers, result[1].rows))\n        setSideBarQueryData(resultToJson(result[2].headers, result[2].rows))\n        setIsLoaded(true)\n      })\n      .catch(err => {\n        throw err\n      })\n    return () => {}\n  }, [token, dotPlot, topBarPlot, sideBarPlot])\n  let yLabelsForDotPlot: string[] = []\n  let xLabelsForTopBarPlot: string[] = []\n  let xMaxForDotPlot = 0\n  let xMaxForSideBarPlot = 0\n  let topBarPlotDataSorted: TotalsGroupByY[] = []\n  let totalsByDotPlotY: TotalsGroupByY[] = []\n  if (isLoaded) {\n    totalsByDotPlotY = getTotalsByProp(sideBarPlotData, 'y')\n    yLabelsForDotPlot = totalsByDotPlotY\n      .sort((a, b) => b.count - a.count)\n      .map(item => item.y)\n    xMaxForSideBarPlot = Math.max(...totalsByDotPlotY.map(item => item.count))\n    xMaxForDotPlot = Math.max(...dotPlotQueryData.map(item => Number(item.x)))\n    topBarPlotDataSorted = _.orderBy(getTotalsByProp(topBarPlotData, 'y'), [\n      'y',\n    ])\n    xLabelsForTopBarPlot = _.orderBy(\n      getTotalsByProp<TotalsGroupByGroup>(topBarPlotData, 'group'),\n      ['group'],\n    ).map(item => item.group)\n  }\n\n  return (\n    <>\n      {!isLoaded && (\n        loadingScreen\n      )}\n\n      {isLoaded && (\n        <div className=\"ThemesPlot\">\n          <div className=\"ThemesPlot__dotPlotLegend\">\n            <DotPlot\n              id=\"head\"\n              plotData={dotPlotQueryData}\n              isLegend={true}\n              markerSymbols={dotPlot.markerSymbols}\n              style={{ width: '100%', height: '100%' }}\n              layoutConfig={dotPlotLayoutConfig}\n              optionsConfig={{\n                ...optionsConfig,\n                responsive: true,\n                staticPlot: true,\n              }}\n              plotStyle={{\n                ...dotPlot.plotStyle!,\n                backgroundColor: 'transparent',\n              }}\n            ></DotPlot>\n          </div>\n          {topBarPlot.colors &&\n            renderTopBarLegend(topBarPlot.colors, xLabelsForTopBarPlot)}\n          {topBarPlotDataSorted.map((item, i) => (\n            <div className=\"ThemesPlot__topBarPlot\" key={`topBarDiv_${i}`}>\n              <div className=\"ThemesPlot__topBarPlot__label\">\n                {item.count}&nbsp;{unCamelCase(item.y)}\n              </div>\n              <div className=\"ThemesPlot__topBarPlot__plot\">\n                <BarPlot\n                  style={{ width: '100%', height: '100%' }}\n                  layoutConfig={_.cloneDeep(barLayoutConfig)}\n                  optionsConfig={{ ...optionsConfig }}\n                  plotData={topBarPlotData}\n                  isTop={true}\n                  label={item.y}\n                  xMax={item.count}\n                  onClick={(e: any) =>\n                    onPointClick(getClickTargetData(e, true))\n                  }\n                  colors={\n                    // we are not actually fading colors for now. But keeping implemenation in case it changes\n                    i % 2 === 0\n                      ? topBarPlot.colors\n                      : fadeColors({ ...topBarPlot.colors }, '1')\n                  }\n                />\n              </div>\n            </div>\n          ))}\n          <div style={{ display: 'flex', position: 'relative' }}>\n            <div className=\"ThemesPlot__dotPlotYLabel\">{dotPlotYAxisLabel}</div>\n            <div className=\"ThemesPlot__dotPlot\">\n              {yLabelsForDotPlot.map((label, i) => (\n                <div\n                  key={`plotDiv_${+i}`}\n                  className=\"ThemesPlot__dotPlot__row\"\n                  style={{\n                    backgroundColor: dotPlot.plotStyle?.backgroundColor,\n                  }}\n                >\n                  <div className=\"ThemesPlot__dotPlot__barColumn\">\n                    <ElementWithTooltip\n                      idForToolTip={`plotDiv1_${+i}`}\n                      tooltipText={`${getTooltip(dotPlotQueryData, label)} `}\n                      tooltipVisualProps={tooltipProps}\n                      callbackFn={() => _.noop}\n                    >\n                      <div>\n                        <span className=\"ThemesPlot__dotPlot__themeLabel\">\n                          {label}\n                        </span>\n                        <br />\n                        <span className=\"ThemesPlot__dotPlot__countLabel\">\n                          {totalsByDotPlotY[i].count} {sideBarPlot.countLabel}\n                        </span>\n                        <br />\n                        <BarPlot\n                          style={{ width: '100%' }}\n                          layoutConfig={barLayoutConfig}\n                          optionsConfig={optionsConfig}\n                          plotData={sideBarPlotData}\n                          isTop={false}\n                          xMax={xMaxForSideBarPlot}\n                          label={label}\n                          colors={fadeColors({ ...topBarPlot.colors }, '1')}\n                        />\n                      </div>\n                    </ElementWithTooltip>\n                  </div>\n                  <div className=\"ThemesPlot__dotPlot__dotPlotColumn\">\n                    <div\n                      style={{\n                        width: '100%',\n                        backgroundColor: dotPlot.plotStyle?.backgroundColor,\n                      }}\n                    >\n                      <DotPlot\n                        id={i + ''}\n                        onClick={(e: any) =>\n                          onPointClick(getClickTargetData(e, false))\n                        }\n                        plotData={dotPlotQueryData}\n                        plotStyle={dotPlot.plotStyle}\n                        markerSymbols={dotPlot.markerSymbols}\n                        xMax={xMaxForDotPlot}\n                        label={label}\n                        layoutConfig={dotPlotLayoutConfig}\n                        optionsConfig={{\n                          ...optionsConfig,\n                          responsive: false,\n                        }}\n                      ></DotPlot>\n                    </div>\n                  </div>\n                </div>\n              ))}\n              <div className=\"ThemesPlot__dotPlot__row\">\n                <div\n                  className=\"ThemesPlot__dotPlot__barColumn\"\n                  style={{ textAlign: 'right' }}\n                >\n                  VOLUME:\n                </div>\n                <div\n                  className=\"ThemesPlot__dotPlot__dotPlotColumn\"\n                  style={{ marginTop: '0px' }}\n                >\n                  <DotPlot\n                    id={'footer'}\n                    plotData={dotPlotQueryData}\n                    isXAxis={true}\n                    xMax={xMaxForDotPlot}\n                    layoutConfig={dotPlotLayoutConfig}\n                    optionsConfig={{ ...optionsConfig, responsive: false }}\n                  ></DotPlot>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div></div>\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default ThemesPlot\n","import * as React from 'react'\nimport { getUserProfileWithProfilePicAttached } from '../utils/functions/getUserData'\nimport { UserProfileList } from '../utils/SynapseClient'\nimport { MEDIUM_USER_CARD } from '../utils/SynapseConstants'\nimport { QueryResultBundle, UserProfile } from '../utils/synapseTypes/'\nimport UserCard, { UserCardSize } from './UserCard'\nimport { without } from 'lodash-es'\n\nexport type UserCardListProps = {\n  list: string[]\n  size?: UserCardSize\n  // Data should not be needed, however, it gives the option to fill in a user profile with other column\n  // fields. This is required specifically by AMP-AD Explore/People page\n  data?: QueryResultBundle\n}\n\ntype MapOwnerIdToUserProfile = {\n  [index: number]: UserProfile\n}\nexport type UserCardListState = {\n  userProfileMap: MapOwnerIdToUserProfile\n}\nexport default class UserCardList extends React.Component<\n  UserCardListProps,\n  UserCardListState\n> {\n  constructor(props: UserCardListProps) {\n    super(props)\n    this.state = {\n      userProfileMap: {},\n    }\n    this.update = this.update.bind(this)\n  }\n\n  componentDidMount() {\n    const { list } = this.props\n    this.update(list)\n  }\n\n  componentDidUpdate(prevProps: UserCardListProps) {\n    const priorListOfIds = prevProps.list\n    const newValues = without(\n      this.props.list.filter(el => el),\n      ...priorListOfIds,\n    )\n    // check that the props have changed by seeing that at least one element is different\n    if (newValues.length > 0) {\n      this.update(newValues)\n    }\n  }\n\n  update(list: string[]) {\n    getUserProfileWithProfilePicAttached(list.filter(el => el))\n      .then((data: UserProfileList) => {\n        const newEntries = {}\n        data.list.forEach(el => {\n          const { ownerId } = el\n          newEntries[ownerId] = el\n        })\n        this.setState({\n          userProfileMap: { ...this.state.userProfileMap, ...newEntries },\n        })\n      })\n      .catch((err: string) => {\n        console.log('Error on batch call =', err)\n      })\n  }\n\n  /**\n   * Given data this will find rows where there is no userId columnType and create faux user profiles\n   * using firstName, lastName, and instituion (company in UserProfile object).\n   * @param {QueryResultBundle} data\n   * @returns list of UserProfiles with firstName, lastName, company, userName (first letter of firstName) filled out.\n   * @memberof UserCardList\n   */\n  manuallyExtractData(data: QueryResultBundle) {\n    const firstNameIndex = data.queryResult.queryResults.headers.findIndex(\n      el => el.name === 'firstName',\n    )\n    const lastNameIndex = data.queryResult.queryResults.headers.findIndex(\n      el => el.name === 'lastName',\n    )\n    const institutionIndex = data.queryResult.queryResults.headers.findIndex(\n      el => el.name === 'institution',\n    )\n    const ownerId = data.queryResult.queryResults.headers.findIndex(\n      el => el.columnType === 'USERID',\n    )\n    const nullOwnerIdsRows = data.queryResult.queryResults.rows.filter(\n      el => !el.values[ownerId],\n    )\n    return nullOwnerIdsRows.map<UserProfile>(el => {\n      const values = el.values\n      return {\n        firstName: values[firstNameIndex],\n        lastName: values[lastNameIndex],\n        company: values[institutionIndex],\n        ownerId: '',\n        userName: values[firstNameIndex][0],\n      }\n    })\n  }\n\n  render() {\n    const { size = MEDIUM_USER_CARD, data, list } = this.props\n    const { userProfileMap = {} } = this.state\n    const fauxUserProfilesList = data && this.manuallyExtractData(data)\n    let fauxUserProfileIndex = 0\n    return (\n      <div className=\"SRC-card-grid-row\">\n        {// we loop through the list from the props because thats the 'active set of data' whereas the data stored in state could be stale\n        list.map(ownerId => {\n          const userProfile = userProfileMap[ownerId]\n          if (userProfile) {\n            return (\n              <div\n                key={JSON.stringify(userProfile)}\n                className=\"SRC-grid-item SRC-narrow-grid-item\"\n              >\n                <UserCard\n                  size={size}\n                  preSignedURL={userProfile.clientPreSignedURL}\n                  userProfile={userProfile}\n                />\n              </div>\n            )\n          }\n          const fauxUserProfile =\n            fauxUserProfilesList && fauxUserProfilesList[fauxUserProfileIndex]\n          if (!fauxUserProfile) {\n            // This could happen in one of two cases:\n            // - The props just updated with a new userlist where the data is being gathered for this particular user\n            //   OR there is no mapping for this user\n            return false\n          }\n          fauxUserProfileIndex += 1\n          return (\n            <div\n              key={JSON.stringify(fauxUserProfile)}\n              className=\"SRC-grid-item SRC-narrow-grid-item\"\n            >\n              <UserCard\n                disableLink={true}\n                hideEmail={true}\n                size={size}\n                userProfile={fauxUserProfile}\n              />\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\nimport Plotly from 'plotly.js-basic-dist'\nimport * as PlotlyTyped from 'plotly.js'\nimport createPlotlyComponent from 'react-plotly.js/factory'\nimport { SizeMe } from 'react-sizeme'\n\nimport { QueryWrapperChildProps } from '../../../containers/QueryWrapper'\nimport {\n  FacetColumnResultValues,\n  ColumnType,\n  FacetColumnResult,\n  FacetColumnResultValueCount,\n} from '../../../utils/synapseTypes'\n\nimport { getColorPallette } from '../../../containers/ColorGradient'\nimport { unCamelCase } from '../../../utils/functions/unCamelCase'\nimport { useEffect, useState } from 'react'\nimport loadingScreen from '../../LoadingScreen'\nimport { GraphData, extractPlotDataArray, getPlotStyle, renderLegend } from '../../widgets/facet-nav/FacetNavPanel'\nimport { getFacets } from '../../widgets/facet-nav/FacetNav'\n\nconst Plot = createPlotlyComponent(Plotly)\n\nexport type FacetPlotsCardOwnProps = {\n  title?:string\n  rgbIndex?: number\n  facetsToPlot?: string[]\n  detailsPagePath?: string\n}\n\ntype FacetPlotsCardProps = FacetPlotsCardOwnProps & QueryWrapperChildProps\n\nconst layout: Partial<PlotlyTyped.Layout> = {\n  showlegend: false,\n  annotations: [],\n  margin: { l: 0, r: 0, b: 0, t: 0, pad: 0 },\n  yaxis: {\n    visible: false,\n    showgrid: false,\n  },\n  xaxis: {\n    visible: false,\n    showgrid: false,\n  },\n}\n\nconst FacetPlotsCard: React.FunctionComponent<FacetPlotsCardProps> = ({\n  title,\n  isLoadingNewData,\n  rgbIndex,\n  facetsToPlot,\n  detailsPagePath,\n  data,\n  isLoading,\n  facetAliases,\n}: FacetPlotsCardProps): JSX.Element => {\n  const [facetPlotDataArray, setFacetPlotDataArray] = useState<GraphData[]>([])\n  const [facetDataArray, setFacetDataArray] = useState<FacetColumnResult[]>([])\n  const [selectedFacetValue, setSelectedFacetValue] = useState<string>('')\n  const { colorPalette } = getColorPallette(rgbIndex ?? 0, 2)\n  \n  useEffect(() => {\n    if (!facetsToPlot || !data) {\n      return\n    } else {\n      const getColumnType = (facetToPlot:FacetColumnResult): ColumnType | undefined =>\n        data?.columnModels?.find(\n          columnModel => columnModel.name === facetToPlot.columnName,\n        )?.columnType as ColumnType\n  \n      const facetsDataToPlot = getFacets(data, facetsToPlot)\n      const newPlotData = facetsDataToPlot.map((item, index) => {\n        const plotData = extractPlotDataArray(\n          item as FacetColumnResultValues,\n          getColumnType(item),\n          index+1, //individual plot rgbIndex\n          'PIE',\n        )\n        return plotData\n      })\n      setFacetPlotDataArray(newPlotData)\n      setFacetDataArray(facetsDataToPlot)\n      // If we are showing a facet selection based card, then set the selectedFacetValue.  For example, facet column \"study\" with value \"ROSMAP\"\n      const selectedFacet:FacetColumnResultValueCount|undefined = data?.facets?.map(item => {\n        const facetValues:FacetColumnResultValueCount[] = (item as FacetColumnResultValues).facetValues\n        if (facetValues) {\n          const filteredFacetValues:FacetColumnResultValueCount[] = facetValues.filter(facetValue => {\n            return facetValue.isSelected\n          })\n          return filteredFacetValues.length > 0 ? filteredFacetValues[0] : undefined\n        } else {\n          return undefined\n        }\n      })[0]\n      if (selectedFacet && selectedFacet.value) {\n        setSelectedFacetValue(selectedFacet?.value)\n      }\n    }\n  }, [facetsToPlot, data,])\n\n  if (isLoadingNewData || !facetPlotDataArray || !facetDataArray) {\n    return (\n      <div className=\"FacetPlotsCard FacetPlotsCard__loading SRC-centerContentColumn\">\n        {loadingScreen}\n      </div>\n    )\n  } else {\n    let detailsPageLink = <></>\n    if (detailsPagePath && selectedFacetValue) {\n      detailsPageLink = <div className=\"FacetPlotsCard__body__footer\">\n        <div className=\"FacetPlotsCard__body__footer__link\">\n          <a href={detailsPagePath}>\n            View {selectedFacetValue}\n          </a>\n        </div>\n      </div>\n    }\n    const isShowingMultiplePlots = facetPlotDataArray.length > 1\n    const cardTitle = title ?? (isShowingMultiplePlots ? selectedFacetValue : unCamelCase(facetDataArray[0].columnName, facetAliases))\n    return (\n      <div className=\"FacetPlotsCard cardContainer\">\n        <div className=\"FacetPlotsCard__titlebar\" style={{backgroundColor: colorPalette[0].replace(')', ',.05)')}}>\n          <span className=\"FacetPlotsCard__title\">\n            {cardTitle}\n          </span>\n          {isLoading && (\n            <span style={{ marginLeft: '2px' }} className={'spinner'} />\n          )}\n        </div>\n        <div className=\"FacetPlotsCard__body\">\n          {/* create a plot for every facet to be plotted */}\n          {facetPlotDataArray.map((plotData, index) => {\n            return <div>\n              {index !== 0 && <hr></hr>}\n              {isShowingMultiplePlots && \n                <div className=\"FacetPlotsCard__body__facetname\">\n                  <span>\n                      {unCamelCase(facetDataArray[index].columnName, facetAliases)}\n                  </span>\n                </div>\n              }\n              <div className=\"FacetPlotsCard__body__row\">\n                <SizeMe monitorHeight>\n                  {({ size }) => (\n                    <div className=\"FacetPlotsCard__body__plot\">\n                      <Plot\n                        key={`${facetsToPlot![index]}-${size.width}`}\n                        layout={layout}                      \n                        data={plotData?.data ?? []}\n                        style={getPlotStyle(\n                          size.width,\n                          'PIE',\n                          150,\n                        )}\n                        config={{ displayModeBar: false }}                  \n                      />\n                    </div>\n                  )}\n                </SizeMe>\n                {renderLegend(plotData?.labels, plotData?.colors, false)}\n                </div>\n            </div>\n          })}\n          {detailsPageLink}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default FacetPlotsCard\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 30,\n  cy: 25,\n  r: 25,\n  fill: \"#1C76AF\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M16 34.8317C16 28.112 21.4478 22.6643 28.1679 22.6643C34.8879 22.6643 40.3357 28.112 40.3357 34.8322L16 34.8317Z\",\n  fill: \"white\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M28.3533 21.0504C31.4048 21.0504 33.8785 18.5767 33.8785 15.5252C33.8785 12.4737 31.4048 10 28.3533 10C25.3018 10 22.8281 12.4737 22.8281 15.5252C22.8281 18.5767 25.3018 21.0504 28.3533 21.0504Z\",\n  fill: \"white\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M36.5 23C40.6422 23 44 26.3613 44 30.5077C44 34.6541 40.6422 38.0154 36.5 38.0154C32.3578 38.0154 29 34.6541 29 30.5077C29 26.3613 32.3578 23 36.5 23Z\",\n  fill: \"#62AC62\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M29 30.5077C29 34.6541 32.3578 38.0154 36.5 38.0154V23C32.3578 23 29 26.3613 29 30.5077Z\",\n  fill: \"white\",\n  fillOpacity: 0.1\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M32.9181 30.7493L32.002 31.7027L34.9466 34.7671L41.4903 27.9573L40.5742 27.0039L34.9466 32.8604L32.9181 30.7493Z\",\n  fill: \"white\"\n});\n\nvar SvgAccountRegistered = function SvgAccountRegistered(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 60,\n    height: 61,\n    viewBox: \"0 0 60 61\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgAccountRegistered, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/account-registered.d8350d08.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 30,\n  cy: 25,\n  r: 25,\n  fill: \"#1C76AF\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M33.1134 8L30 10.6276L26.8867 8L25.2149 11.7179L21.2723 10.7064L21.3776 14.7856L17.3823 15.5871L19.245 19.2065L16 21.6698L19.245 24.1266L17.3823 27.7525L21.3776 28.554L21.2723 32.6266L25.2149 31.6216L26.8867 35.3397L30 32.712L33.1134 35.3397L34.7852 31.6216L38.7278 32.6266L38.6225 28.554L42.6179 27.7525L40.7551 24.1266L44 21.6699V21.6698L40.7551 19.2065L42.6179 15.5871L38.6225 14.7856L38.7278 10.713L34.7852 11.7179L33.1134 8Z\",\n  fill: \"#62AC62\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M20.5867 30.3209L16.3281 37.8423L21.1922 36.4956L22.5416 41.3697L26.0234 35.2278L26.4711 34.4264L25.2139 31.6215L21.2713 32.6265L21.3634 28.9414L20.5867 30.3209Z\",\n  fill: \"white\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M38.7272 32.6264L34.7846 31.6213L33.5801 34.2949L34.0342 35.0963L37.5886 41.3696L38.9378 36.4955L43.802 37.8421L39.4052 30.0777L38.6285 28.6982L38.7272 32.6264Z\",\n  fill: \"white\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M30.6948 12.9661C35.4969 12.9661 39.3897 16.8629 39.3897 21.6698C39.3897 26.4768 35.4969 30.3736 30.6948 30.3736C25.8928 30.3736 22 26.4768 22 21.6698C22 16.8629 25.8928 12.9661 30.6948 12.9661Z\",\n  fill: \"white\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M39.3901 21.6698C39.3901 16.8629 35.4974 12.9661 30.6953 12.9661V30.3736C35.4974 30.3736 39.3901 26.4768 39.3901 21.6698Z\",\n  fill: \"#62AC62\",\n  fillOpacity: 0.1\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M26.0621 21.3421L25 22.4474L28.4138 26L36 18.1053L34.9379 17L28.4138 23.7895L26.0621 21.3421Z\",\n  fill: \"#62AC62\"\n});\n\nvar SvgAccountCertified = function SvgAccountCertified(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 60,\n    height: 61,\n    viewBox: \"0 0 60 61\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgAccountCertified, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/account-certified.77d5a352.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 30,\n  cy: 25,\n  r: 25,\n  fill: \"#1C76AF\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M30.411 43.9997C28.9446 39.9284 24.4859 39.1271 20.9378 38.2919C18.0273 37.607 15.7531 35.9125 14.7347 33.3418C12.1754 27.6956 17.0707 23.467 17.7491 18.319C18.0891 15.7821 16.6142 13.7923 15.232 11.8602L17.5834 9.17422C21.4912 11.1725 26.9736 10.662 30.411 8C33.8482 10.662 39.3294 11.1753 43.2386 9.17703L45.5914 11.863C44.2078 13.7952 42.7343 15.7852 43.0742 18.3218C43.7541 23.4716 48.648 27.6987 46.0887 33.3447C45.0703 35.9153 42.7975 37.61 39.8856 38.2947C36.336 39.13 31.8774 39.9288 30.4109 44L30.411 43.9997Z\",\n  fill: \"white\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M40.0622 38.2919C36.5141 39.1271 32.0554 39.9284 30.589 43.9997L30.589 8C34.0264 10.662 39.5088 11.1725 43.4166 9.17422L45.768 11.8602C44.3858 13.7923 42.9109 15.7821 43.2509 18.319C43.9293 23.467 48.8246 27.6956 46.2653 33.3418C45.2469 35.9125 42.9727 37.607 40.0622 38.2919Z\",\n  fill: \"#62AC62\",\n  fillOpacity: 0.1\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M30.4043 18.5293C34.7859 18.5293 38.3378 22.0849 38.3378 26.471C38.3378 30.8571 34.7859 34.4127 30.4043 34.4127C26.0226 34.4127 22.4707 30.8571 22.4707 26.471C22.4707 22.0849 26.0226 18.5293 30.4043 18.5293Z\",\n  fill: \"#62AC62\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.4707 26.471C22.4707 30.8571 26.0226 34.4127 30.4043 34.4127V18.5293C26.0226 18.5293 22.4707 22.0849 22.4707 26.471Z\",\n  fill: \"white\",\n  fillOpacity: 0.1\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M26.6156 26.7266L25.6465 27.7351L28.7614 30.9767L35.6834 23.7731L34.7143 22.7646L28.7614 28.9597L26.6156 26.7266Z\",\n  fill: \"white\"\n});\n\nvar SvgAccountValidated = function SvgAccountValidated(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 60,\n    height: 61,\n    viewBox: \"0 0 60 61\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgAccountValidated, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/account-validated.db2e0572.svg\";\nexport { ForwardRef as ReactComponent };","/** Originally from YamUI.  May need to alter to update to later versions of react-intersection-observer (which does the heavy lifting).\n * This component has the option to provide an outOfView renderer, which might be useful in the future.\n */\nimport * as React from 'react';\nimport Observer from 'react-intersection-observer';\n\n\nexport interface BaseComponentProps {\n  /**\n   * One or more class names to be added to the root element of this component, i.e.\n   * `\"class-one class-two\"`.\n   */\n  className?: string;\n}\n\nexport interface NestableBaseComponentProps extends BaseComponentProps {\n  /**\n   * Elements to be rendered as children of this component.\n   */\n  children?: React.ReactNode;\n}\n\nexport interface VisibilityObserverProps extends BaseComponentProps {\n  /**\n   * A callback which will be triggered when the component is scrolled into view.\n   */\n  onEnterView?: (() => void);\n\n  /**\n   * A callback which will be triggered when the component is scrolled out of view.\n   */\n  onLeaveView?: (() => void);\n\n  /**\n   * Render prop to return child content when the component is visible in the viewport. Once the component\n   * has been in view it will always use this render prop, even when scrolled back out of view.\n   */\n  renderInView?: (() => React.ReactNode);\n\n  /**\n   * Render prop to return child content before the component becomes visible in the viewport.\n   */\n  renderOutOfView?: (() => React.ReactNode);\n\n  /**\n   * Wrapper element tag name.\n   * @default 'div'\n   */\n  tag?: string;\n\n  /**\n   * A CSS margin string which pushes the intersection boundary further in or out of the viewport.\n   * A positive value will expand the viewport threshold so your component is considered \"in view\" while it's\n   * still offscreen, for example you could set thresholdOffset=\"200px\" you want an image to start loading before\n   * it scrolls into view. A negative value will move the boundary into the viewport, triggering \"in view\" after\n   * it's already becoming visible.\n   * \"200px\", \"200px 0 50px 0\", \"-50px\" are all valid values.\n   */\n  rootMargin?: string;\n}\n\nexport interface VisibilityObserverState {\n  hasBeenInView: boolean;\n}\n\n/**\n * VisibilityObserver uses the IntersectionObserver API to allow conditional child rendering and callbacks based\n * on viewport visibility. It will render the `renderOutOfView` prop until it is scrolled into view, then will\n * always render the `renderInView` prop instead. Callbacks will always be triggered on visibility changes.\n */\nexport default class VisibilityObserver extends React.Component<VisibilityObserverProps, VisibilityObserverState> {\n  constructor(props: VisibilityObserverProps) {\n    super(props);\n    this.state = {\n      hasBeenInView: false,\n    };\n  }\n\n  public render() {\n    const { rootMargin, tag } = this.props;\n\n    return (\n      <Observer\n        tag={tag || 'div'}\n        rootMargin={rootMargin}\n        onChange={this.onVisibilityChange}\n        render={this.getObserverChildren}\n      />\n    );\n  }\n\n  private getObserverChildren = (isVisible: boolean) => {\n    const { renderInView, renderOutOfView } = this.props;\n    const shouldRenderAsInView = isVisible || this.state.hasBeenInView;\n\n    if (shouldRenderAsInView && renderInView) {\n      return renderInView();\n    }\n\n    if (!isVisible && renderOutOfView) {\n      return renderOutOfView();\n    }\n\n    return null;\n  };\n\n  private onVisibilityChange = (isVisible: boolean) => {\n    if (isVisible) {\n      this.setState({ hasBeenInView: true });\n      if (this.props.onEnterView) {\n        this.props.onEnterView();\n      }\n    } else {\n      if (this.props.onLeaveView) {\n        this.props.onLeaveView();\n      }\n    }\n  };\n}","import * as React from 'react';\nimport VisibilityObserver from './VisibilityObserver';\n\nexport default class RenderIfInView extends React.Component {\n  public render() {    \n    return <VisibilityObserver renderInView={this.getChildren} />\n  }\n\n  private getChildren = () => {\n    return <>{this.props.children}</>\n  }\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.7184 1.81746L6.05903 14.6667L0.256836 8.77744L1.74431 7.26766L6.05903 11.6364L17.2309 0.307678L18.7184 1.81746Z\",\n  fill: \"white\"\n});\n\nvar SvgCheck = function SvgCheck(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"auto\",\n    height: 15,\n    viewBox: \"0 0 19 15\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCheck, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/check.59b5495a.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.4785 26.55V22.833H15.399L16.992 23.6295H19.647L20.709 23.364L20.4435 22.302L19.9125 20.709L21.771 17.523L23.0985 14.868L23.895 13.0095H29.205L34.2495 14.6025L38.4975 18.054L41.1525 22.302L41.949 28.143L40.6215 33.453L38.4975 36.639L34.2495 40.6215L29.205 41.949L23.895 41.6835L20.4435 40.0905L18.585 39.294L16.461 40.0905L14.868 40.6215H13.275L11.4165 40.0905L10.3545 39.0285L13.0095 37.17L14.337 35.577L13.806 33.453L12.4785 29.736V26.55Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9.7512 38.5904C9.58734 38.6547 9.46703 38.7957 9.42762 38.9679C9.38821 39.14 9.43592 39.3184 9.55622 39.447C12.7962 42.9338 17.2228 40.5484 18.4483 39.7747C21.0183 41.542 24.026 42.4754 27.1748 42.4754C35.615 42.4754 42.4803 35.6759 42.4803 27.319C42.4803 18.9622 35.6145 12.1627 27.1748 12.1627C26.0464 12.1627 24.9263 12.2913 23.8332 12.5319C24.0365 9.31065 22.906 6.02715 20.4232 3.52561C15.8184 -1.11649 8.25586 -1.18287 3.56819 3.37627C1.29487 5.58741 0.0274833 8.5411 0.00050855 11.696C-0.0285308 14.8488 1.18698 17.8253 3.41882 20.0757C5.77306 22.4486 8.93857 23.6828 12.1782 23.6081C11.5953 26.1863 11.9355 28.775 11.948 28.8745C12.118 30.5298 12.7569 32.6807 13.5783 34.3651C14.296 36.767 9.79699 38.5716 9.75137 38.5902L9.7512 38.5904ZM4.17145 19.3273C2.1408 17.28 1.03526 14.5732 1.06218 11.7064C1.08708 8.83775 2.24037 6.14946 4.31042 4.13962C8.58332 -0.0150302 15.4736 0.0472034 19.6701 4.27652C23.8123 8.45193 23.8517 15.025 19.7572 19.2401C19.6846 19.3148 19.61 19.3894 19.5332 19.4641C19.5187 19.4766 19.5063 19.4911 19.4938 19.5077C18.8632 20.271 18.855 20.9555 18.9587 21.3952C19.1142 22.0465 19.5892 22.5526 20.0476 22.9053C17.3636 23.7308 15.8743 22.2374 15.8079 22.1689C15.7063 22.0611 15.5652 22.003 15.4221 22.003C15.3682 22.003 15.3143 22.0113 15.2603 22.0279C11.3193 23.2807 7.06913 22.2478 4.17146 19.3273L4.17145 19.3273ZM14.578 34.0068C14.5697 33.9819 14.5614 33.957 14.549 33.9342C13.769 32.3474 13.1634 30.3188 13.0016 28.7486C12.9974 28.7217 12.6448 26.0065 13.292 23.5258C13.9599 23.447 14.6277 23.3204 15.2894 23.1275C15.7561 23.5092 16.8472 24.2206 18.4775 24.2206C19.33 24.2206 20.3319 24.0257 21.4685 23.4864C21.6552 23.3972 21.7734 23.2064 21.7713 22.9989C21.7672 22.7915 21.6448 22.6048 21.454 22.5198C21.1014 22.3642 20.1493 21.8125 19.9917 21.1467C19.9211 20.8521 20.0207 20.5431 20.2945 20.205C20.3692 20.1303 20.4438 20.0557 20.5185 19.9789C22.2837 18.1619 23.3395 15.9445 23.7087 13.6462C24.835 13.3683 26.0007 13.2231 27.1747 13.2231C35.0276 13.2251 41.4182 19.5473 41.4182 27.3195C41.4182 35.0918 35.0276 41.4139 27.1747 41.4139C24.1276 41.4139 21.2216 40.4763 18.77 38.7008C18.5812 38.5659 18.3282 38.5659 18.1415 38.7049C18.0979 38.7381 13.9889 41.725 10.888 39.2401C12.367 38.5079 15.4202 36.6369 14.5781 34.0068L14.578 34.0068Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.24373 10.7735C8.24373 12.4008 5.80273 12.4008 5.80273 10.7735C5.80273 9.14615 8.24373 9.14615 8.24373 10.7735Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.7857 10.7735C17.7857 12.4008 15.3447 12.4008 15.3447 10.7735C15.3447 9.14615 17.7857 9.14615 17.7857 10.7735Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19.1167 14.9898C19.1167 17.2088 15.7881 17.2088 15.7881 14.9898C15.7881 12.7707 19.1167 12.7707 19.1167 14.9898Z\",\n  fill: \"#D46D1E\",\n  fillOpacity: 0.05\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M7.57766 14.9898C7.57766 17.2088 4.24902 17.2088 4.24902 14.9898C4.24902 12.7707 7.57766 12.7707 7.57766 14.9898Z\",\n  fill: \"#D46D1E\",\n  fillOpacity: 0.05\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.94406 15.2315C8.96699 15.299 9.52636 16.876 11.6835 16.876C13.8419 16.876 14.4025 15.299 14.4229 15.2315C14.4446 15.1688 14.4561 15.1049 14.4561 15.0386C14.4548 14.7432 14.2242 14.4925 13.9145 14.4478C13.6049 14.4032 13.3067 14.5792 13.2125 14.8614C13.1692 14.9711 12.8455 15.6691 11.6835 15.6691C10.5227 15.6691 10.1991 14.9699 10.1545 14.8614C10.0615 14.5756 9.76205 14.3972 9.44986 14.4418C9.13897 14.4864 8.90833 14.7408 8.90833 15.0386C8.90833 15.1049 8.9198 15.1688 8.94146 15.2315L8.94406 15.2315Z\",\n  fill: \"#5C94B9\"\n});\n\nvar SvgChatBubbles = function SvgChatBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 43,\n    viewBox: \"0 0 43 43\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgChatBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/chat-bubbles.7b7ecea8.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M26.0393 12.5492V19.089H26.0397H30.5554V12.5492C30.5554 5.62965 24.8774 0 17.8984 0V4.47765C22.3876 4.47765 26.0393 8.09818 26.0393 12.5492Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M9.75828 19.0891V12.5493C9.75828 8.09841 13.4101 4.47777 17.899 4.47777V0C10.9202 0 5.24219 5.62965 5.24219 12.5492V19.0889H5.24255H9.75828V19.0891Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18 48.4558C27.9411 48.4558 36 40.7282 36 31.1956C36 21.663 27.9411 13.9353 18 13.9353C8.05888 13.9353 0 21.663 0 31.1956C0 40.7282 8.05888 48.4558 18 48.4558Z\",\n  fill: \"white\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M35.5 31.0681C35.5 40.305 27.685 47.8284 18 47.8284C8.31503 47.8284 0.5 40.305 0.5 31.0681C0.5 21.8313 8.31503 14.3079 18 14.3079C27.685 14.3079 35.5 21.8313 35.5 31.0681Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1,\n  stroke: \"#5C94B9\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.0004 36.4929C16.5086 36.4929 15.2881 35.2723 15.2881 33.7805V28.3559C15.2881 26.8641 16.5086 25.6436 18.0004 25.6436C19.4922 25.6436 20.7127 26.8641 20.7127 28.3559V33.7805C20.7127 35.2723 19.4922 36.4929 18.0004 36.4929Z\",\n  fill: \"white\",\n  stroke: \"#5C94B9\",\n  strokeWidth: 2\n});\n\nvar SvgLock = function SvgLock(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 49,\n    viewBox: \"0 0 36 49\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgLock, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/lock.4695a739.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M45.9229 21.141H45.5448L45.5479 21.5191C45.5805 25.453 48.7682 28.2572 53.0391 28.2572H53.0394C57.307 28.2572 60.4945 25.4529 60.5272 21.5191L60.5303 21.141H60.1522H45.9229ZM53.3949 5.81433L53.0394 4.74711L52.6834 5.81413L48.4348 18.5465L48.2701 19.04L48.7903 19.0402L57.2808 19.0436L57.8011 19.0438L57.6367 18.5501L53.3949 5.81433ZM38.6256 57.6559H39.0006L39.0006 57.281L39.001 54.4849L39.0011 54.1957L38.7213 54.1222C36.0547 53.4219 33.3324 53.0699 30.61 53.0665H30.6096C30.6008 53.0665 30.5927 53.0667 30.5854 53.0671C30.5791 53.0674 30.5733 53.0677 30.5684 53.0681C30.5654 53.0683 30.5625 53.0686 30.5598 53.0688C30.5576 53.0686 30.5553 53.0684 30.5529 53.0682C30.542 53.0673 30.5276 53.0665 30.5107 53.0665H30.5102C27.7845 53.0699 25.0622 53.4219 22.3989 54.1222L22.1192 54.1957V54.4849V57.2809V57.6559H22.4942H38.6256ZM5.36199 37.4608L5.19769 37.9541L5.71762 37.9543L14.2047 37.9578L14.7251 37.958L14.5606 37.4643L10.3154 24.725L9.9595 23.6571L9.60381 24.7251L5.36199 37.4608ZM2.84677 40.0449H2.46864L2.47178 40.423C2.50442 44.3566 5.69182 47.1644 9.963 47.1644H9.96334C14.2313 47.1644 17.4182 44.3564 17.4546 40.4233L17.4581 40.0449H17.0796H2.84677ZM60.7509 19.0506L60.7507 19.0508H61.5771C62.1549 19.0508 62.624 19.5211 62.624 20.0942V21.4582C62.624 26.5075 58.5354 30.3474 53.0391 30.3474C47.5393 30.3474 43.4507 26.5076 43.4507 21.4582V20.0942C43.4507 19.5211 43.9199 19.0508 44.4976 19.0508H45.7899H46.0603L46.1457 18.7943L50.9808 4.28568L51.2583 3.45327L50.4649 3.82804L37.0029 10.1874L36.7507 10.3065L36.7922 10.5823C36.8384 10.8888 36.8699 11.1928 36.8699 11.4982C36.8699 14.4941 34.7382 17.0041 31.9069 17.5961L31.6086 17.6585V17.9632V50.6528V51.0129L31.9684 51.0275C34.7894 51.1422 37.6054 51.591 40.3493 52.4135L40.3507 52.4139C40.7925 52.5444 41.0981 52.9512 41.0981 53.4114V58.7034C41.0981 59.2788 40.6301 59.7469 40.0478 59.7469H21.0725C20.4914 59.7469 20.0256 59.28 20.0256 58.7034V53.4114C20.0256 52.9488 20.3266 52.544 20.7691 52.4141L20.771 52.4135C23.5149 51.591 26.3275 51.1422 29.1519 51.0275L29.5117 51.0129V50.6528V17.9326V17.6344L29.2211 17.5673C27.6192 17.1974 26.2518 16.2162 25.3831 14.881L25.2077 14.6114L24.9145 14.7437L11.5616 20.7687L11.2531 20.908L11.3601 21.2291L16.8499 37.7018L16.9354 37.9583H17.2057H18.5014C19.0797 37.9583 19.5483 38.4258 19.5483 39.0017V40.3623C19.5483 45.4118 15.4595 49.2549 9.9634 49.2549C4.46381 49.2549 0.375 45.4119 0.375 40.3623V39.0017C0.375 38.4257 0.843561 37.9583 1.42188 37.9583H2.71423H2.98448L3.06997 37.7019L8.82917 20.4314L8.84712 20.3775L8.84834 20.3208C8.8584 19.852 9.17752 19.4378 9.65257 19.3278L9.68853 19.3194L9.72217 19.3042L24.2273 12.7608L24.4825 12.6457L24.4447 12.3683C24.4049 12.0765 24.3765 11.7883 24.3765 11.4983C24.3765 8.06463 27.1776 5.26855 30.6233 5.26855C32.7969 5.26855 34.7144 6.38389 35.8348 8.07091L36.0142 8.34101L36.3074 8.20253L52.4117 0.595287L52.4346 0.584454L52.4559 0.570631C52.5507 0.508981 52.664 0.462067 52.796 0.429068L52.8063 0.426488L52.8164 0.423329C53.3128 0.26887 53.8499 0.492673 54.0741 0.968446L54.0746 0.969616C54.1447 1.117 54.1733 1.27482 54.1681 1.44134L54.166 1.5082L54.1871 1.57166L59.9292 18.7942L60.0147 19.0506H60.285H60.7509ZM26.4731 11.4973C26.4731 13.7816 28.3364 15.6401 30.6228 15.6401C32.9092 15.6401 34.7724 13.7816 34.7724 11.4973C34.7724 9.21613 32.909 7.35786 30.6228 7.35786C28.3366 7.35786 26.4731 9.21613 26.4731 11.4973Z\",\n  fill: \"#5C94B9\",\n  stroke: \"white\",\n  strokeWidth: 0.75\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M2.1815 44.0825L1.30859 39.7179L1.74505 38.845H11.3471H18.7668V41.0273L17.021 44.9554L13.9658 47.5741L10.4742 48.447L6.54605 48.0106L3.92732 45.8283L2.1815 44.0825Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M45.3905 25.3149L44.5176 20.9504L44.954 20.0775H54.556H61.9758V22.2597L60.23 26.1878L57.1748 28.8066L53.6831 29.6795L49.755 29.243L47.1363 27.0607L45.3905 25.3149Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1\n});\n\nvar SvgScale = function SvgScale(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 61,\n    viewBox: \"0 0 63 61\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgScale, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/scale.8945fa95.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M22.766 58.8119C9.68539 50.4096 4.45065 44.594 2.34834 37.6271C1.27184 34.0596 0.995427 30.1224 1.00006 25.2523C1.00214 23.0649 1.06047 20.708 1.12448 18.122C1.13166 17.8317 1.13892 17.5384 1.14618 17.2422C1.2112 14.5884 1.27595 11.7046 1.28757 8.54972C9.50478 8.43742 16.041 6.87564 22.7606 1.31573C29.3476 6.87737 35.8826 8.43748 44.0943 8.54972C44.106 11.6863 44.1707 14.5559 44.236 17.1989C44.2437 17.5071 44.2513 17.812 44.2588 18.1139C44.3228 20.6764 44.3813 23.0153 44.3845 25.1888C44.3917 30.052 44.1202 33.995 43.0526 37.5731C40.9679 44.5597 35.7683 50.4116 22.766 58.8119Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1,\n  stroke: \"#5C94B9\",\n  strokeWidth: 2\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M14.8693 29.3455C16.8859 31.5252 18.9022 33.7048 20.9188 35.8844C21.3431 36.3432 22.0069 36.1732 22.3247 35.6968L31.5972 21.7929C32.0375 21.1327 32.4779 20.4726 32.9181 19.8124C33.5746 18.8279 32.0236 17.8994 31.372 18.8761L22.0996 32.78C21.6593 33.4402 21.9043 33.0534 21.4639 33.7135C20.9952 33.7761 21.9327 33.6509 21.4639 33.7135C19.4474 31.5339 18.1518 30.2136 16.1352 28.034C15.3366 27.1705 14.0715 28.4832 14.8693 29.3455Z\",\n  fill: \"#5C94B9\"\n});\n\nvar SvgShield = function SvgShield(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 60,\n    viewBox: \"0 0 46 60\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgShield, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/shield.3cfb6e0b.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 28.4211,\n  cy: 31.579,\n  r: 27.4211,\n  stroke: \"#5C94B9\",\n  strokeWidth: 2\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.8945 20.8176C17.8945 15.1842 22.4616 10.6172 28.0953 10.6172C33.729 10.6172 38.2961 15.1842 38.2961 20.818L17.8945 20.8176Z\",\n  fill: \"white\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M28.2531 9.26397C30.8113 9.26397 32.8851 7.19016 32.8851 4.63199C32.8851 2.07381 30.8113 0 28.2531 0C25.6949 0 23.6211 2.07381 23.6211 4.63199C23.6211 7.19016 25.6949 9.26397 28.2531 9.26397Z\",\n  fill: \"white\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0 54.5018C0 48.8684 4.56711 44.3014 10.2008 44.3014C15.8344 44.3014 20.4016 48.8684 20.4016 54.5021L0 54.5018Z\",\n  fill: \"white\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M10.3585 42.9481C12.9167 42.9481 14.9905 40.8743 14.9905 38.3162C14.9905 35.758 12.9167 33.6842 10.3585 33.6842C7.80038 33.6842 5.72656 35.758 5.72656 38.3162C5.72656 40.8743 7.80038 42.9481 10.3585 42.9481Z\",\n  fill: \"white\"\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M35.7891 54.5018C35.7891 48.8684 40.3562 44.3014 45.9898 44.3014C51.6235 44.3014 56.1906 48.8684 56.1906 54.5021L35.7891 54.5018Z\",\n  fill: \"white\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M46.1476 42.9481C48.7058 42.9481 50.7796 40.8743 50.7796 38.3162C50.7796 35.758 48.7058 33.6842 46.1476 33.6842C43.5894 33.6842 41.5156 35.758 41.5156 38.3162C41.5156 40.8743 43.5894 42.9481 46.1476 42.9481Z\",\n  fill: \"white\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.4072 20.3176C18.6674 15.1927 22.9055 11.1172 28.0953 11.1172C33.2851 11.1172 37.5232 15.1927 37.7834 20.318L18.4072 20.3176Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1,\n  stroke: \"#5C94B9\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M32.3851 4.63199C32.3851 6.91402 30.5351 8.76397 28.2531 8.76397C25.971 8.76397 24.1211 6.91402 24.1211 4.63199C24.1211 2.34995 25.971 0.5 28.2531 0.5C30.5351 0.5 32.3851 2.34995 32.3851 4.63199Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1,\n  stroke: \"#5C94B9\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M0.512664 54.0018C0.772896 48.8769 5.01094 44.8014 10.2008 44.8014C15.3906 44.8014 19.6287 48.8769 19.8889 54.0021L0.512664 54.0018Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1,\n  stroke: \"#5C94B9\"\n});\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M14.4905 38.3162C14.4905 40.5982 12.6406 42.4481 10.3585 42.4481C8.07652 42.4481 6.22656 40.5982 6.22656 38.3162C6.22656 36.0341 8.07652 34.1842 10.3585 34.1842C12.6406 34.1842 14.4905 36.0341 14.4905 38.3162Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1,\n  stroke: \"#5C94B9\"\n});\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M36.3017 54.0018C36.562 48.8769 40.8 44.8014 45.9898 44.8014C51.1797 44.8014 55.4177 48.8769 55.678 54.0021L36.3017 54.0018Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1,\n  stroke: \"#5C94B9\"\n});\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50.2796 38.3162C50.2796 40.5982 48.4296 42.4481 46.1476 42.4481C43.8656 42.4481 42.0156 40.5982 42.0156 38.3162C42.0156 36.0341 43.8656 34.1842 46.1476 34.1842C48.4296 34.1842 50.2796 36.0341 50.2796 38.3162Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1,\n  stroke: \"#5C94B9\"\n});\n\nvar SvgPeople = function SvgPeople(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 60,\n    viewBox: \"0 0 57 60\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPeople, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/people.d2f8a5da.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9.76082 38.4706L41.0223 5.7222L52.3579 16.4808L21.1114 49.2143L9.76082 38.4706Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1,\n  stroke: \"#5C94B9\",\n  strokeWidth: 1.5\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.4441 51.0408L8.92569 39.4014L20.2493 50.1345L8.80186 55.183L4.4441 51.0408Z\",\n  stroke: \"#5C94B9\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M8.69813 55.7748L0 60L3.85672 51.1894L8.69813 55.7748Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50.2519 0.929496L56.6688 7.03798C58.3264 8.61014 57.9982 11.6726 55.9631 13.8179L53.1404 16.7821L53.1075 16.8148L40.7168 4.9909L40.7496 4.95815L43.5724 1.99398C45.6074 -0.151362 48.66 -0.659038 50.2847 0.929496H50.2519Z\",\n  fill: \"#5C94B9\"\n});\n\nvar SvgPen = function SvgPen(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 60,\n    viewBox: \"0 0 58 60\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPen, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/pen.d8675625.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"circle\", {\n  cx: 30,\n  cy: 30,\n  r: 29,\n  stroke: \"#5C94B9\",\n  strokeWidth: 2\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M17.096 40.2764C16.8176 40.2764 16.5372 40.2176 16.2725 40.0999C15.7823 39.8803 15.4097 39.4822 15.2175 38.9822L11.4565 29.0699C11.2643 28.5699 11.2839 28.0268 11.4996 27.5365C11.7193 27.0463 12.1173 26.6737 12.6174 26.4815L25.6515 21.5361L30.8381 35.1998L17.812 40.1452C17.5806 40.2334 17.3413 40.2765 17.0962 40.2765L17.096 40.2764ZM24.8061 23.4382L13.1484 27.8659C13.0151 27.9149 12.9072 28.0188 12.8503 28.1443C12.7915 28.2777 12.7876 28.4189 12.8347 28.5561L16.5957 38.4684C16.6447 38.6017 16.7486 38.7096 16.8741 38.7665C17.0075 38.8253 17.1486 38.8292 17.2859 38.7821L28.9436 34.3545L24.8061 23.4382Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.2821 39.7592C11.2232 39.7592 10.2232 39.1121 9.82709 38.063L8.03876 33.3412C7.52502 31.9882 8.21131 30.4685 9.56435 29.9548L12.9018 28.69L16.5589 38.3182L13.2096 39.5868C12.9037 39.7045 12.59 39.7594 12.2821 39.7594V39.7592ZM12.037 30.5864L10.0761 31.3315C9.48394 31.557 9.17803 32.2237 9.40553 32.8218L11.1939 37.5436C11.4194 38.1358 12.0861 38.4417 12.6842 38.2142L14.645 37.4691L12.037 30.5864Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref5 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M45.9849 38.3217C45.9162 38.3217 45.8476 38.3178 45.779 38.3021L29.3624 35.4235L24.3955 22.3542L34.7686 9.30854C35.0392 8.97126 35.4706 8.79872 35.902 8.86733C36.3275 8.93597 36.6922 9.22422 36.8432 9.63206L47.1084 36.6883C47.2614 37.0961 47.1868 37.5511 46.9123 37.8844C46.6868 38.1648 46.3378 38.3217 45.9848 38.3217L45.9849 38.3217ZM30.4348 34.1195L45.5727 36.7706L35.6369 10.5889L26.0735 22.6211L30.4348 34.1195Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref6 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M29.9995 34.426L25.5732 22.1309L35.9011 9.8358L46.7208 37.3768L29.9995 34.426Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1\n});\n\nvar _ref7 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.8331 48.9438C23.4703 48.9438 23.1233 48.7438 22.9507 48.3987L17.9248 38.5316L26.1961 35.3942L27.1765 37.9727C27.5393 38.9336 27.3961 40.0023 26.7941 40.8356L26.2941 41.5259L28.6433 46.0007C28.7766 46.2497 28.7962 46.5497 28.6923 46.8144C28.5903 47.0792 28.3825 47.289 28.1138 47.3929L24.1881 48.8832C24.0744 48.9244 23.9509 48.944 23.8332 48.944L23.8331 48.9438ZM19.9799 39.3217L24.0625 47.3515L27.0862 46.2044L24.5645 41.4002L25.6038 39.9687C25.9175 39.5432 25.992 38.9883 25.7999 38.4941L25.343 37.2941L19.9799 39.3217Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref8 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M50.4655 19.1516L50.9871 20.5262L46.6378 22.1773L46.1162 20.8027L50.4655 19.1516Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref9 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M44.9737 11.2688L46.0346 12.2865L42.8109 15.6475L41.75 14.6298L44.9737 11.2688Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref10 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M47.5854 28.2326L52.223 28.6091L52.1033 30.0758L47.4658 29.6993L47.5854 28.2326Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref11 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M23.1937 26.5344L23.7153 27.909L16.5148 30.6405L15.9932 29.2659L23.1937 26.5344Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref12 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 11.6193,\n  y1: 6.28518,\n  x2: 47.0292,\n  y2: 53.4983,\n  stroke: \"#5C94B9\",\n  strokeWidth: 2\n});\n\nvar _ref13 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M11.3112 38.8523L8.36035 31.967L9.34396 30.9834L12.7866 29.508L15.7374 37.8687L13.2784 38.8523H11.3112Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1\n});\n\nvar _ref14 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M24.0987 48.1965L19.1807 38.8522L22.1315 37.8686L26.0659 36.3932L26.5577 38.8522L26.0659 40.3276L25.5741 41.803L28.0331 46.7211L24.0987 48.1965Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1\n});\n\nvar SvgSpeaker = function SvgSpeaker(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 60,\n    viewBox: \"0 0 60 60\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _ref10, _ref11, _ref12, _ref13, _ref14);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSpeaker, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/speaker.45564927.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M3.35043 11.6993L20.52 59.0555L18.4435 60L1.27637 12.4541L3.35043 11.6993Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M1.08672 8.49302C1.84137 8.30318 2.78586 8.68285 3.16318 9.4375C3.35302 10.0047 3.35302 10.382 3.16318 10.7593L0.899228 11.514C0.521895 11.3241 0.144575 11.1366 0.144575 10.5695C-0.232757 9.81483 0.144575 8.87034 1.08906 8.49302H1.08672Z\",\n  fill: \"#5C94B9\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.1303 29.7038C11.0679 26.7724 10.037 23.9675 9.00658 21.1648L8.95782 21.0322C7.88548 18.1154 6.81326 15.1989 5.705 12.1391C9.71524 9.84426 12.5466 9.34663 14.7484 9.32592C15.7287 9.3167 16.5901 9.40062 17.4387 9.4833C17.6261 9.50156 17.8128 9.51975 18.0001 9.53687C19.0073 9.62894 20.046 9.69153 21.1012 9.46945L21.1195 9.4656L21.1377 9.46105C25.3435 8.41003 31.7685 5.06297 36.7392 1.92758C36.5552 3.36893 36.1803 5.06493 35.5899 6.71541C34.6969 9.21176 33.3762 11.4208 31.6607 12.5642L30.5117 13.3299L31.5977 14.1828C32.4209 14.8293 33.4061 15.1778 34.3896 15.4337C34.8853 15.5626 35.4059 15.6739 35.9251 15.7836C35.9611 15.7912 35.9971 15.7988 36.0331 15.8065C36.5233 15.9099 37.0162 16.014 37.5219 16.1365C39.1413 16.5286 40.848 17.0993 42.5246 18.3317C42.0045 18.4802 41.4868 18.6777 40.974 18.9065C39.6662 19.4902 38.2967 20.322 36.8952 21.2053C36.6139 21.3826 36.3307 21.5623 36.0453 21.7434C33.442 23.3952 30.6605 25.1601 27.553 26.2236L27.5353 26.2297L27.5179 26.2364C26.4181 26.6594 25.2511 26.8488 23.9851 26.9543C23.3516 27.007 22.706 27.0379 22.0332 27.0693L21.9646 27.0725C21.3185 27.1026 20.648 27.1338 19.9699 27.1864C17.4781 27.3796 14.8109 27.8656 12.1303 29.7038Z\",\n  fill: \"#5C94B9\",\n  fillOpacity: 0.1,\n  stroke: \"#5C94B9\",\n  strokeWidth: 2\n});\n\nvar SvgFlag = function SvgFlag(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: 60,\n    viewBox: \"0 0 45 60\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgFlag, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/flag.c9034d71.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\n\nconst Arrow = (props: React.SVGProps<SVGSVGElement>) => (\n  <svg\n    {...props}\n    className={`SRC-arrow-icon ${props.className ?? ''}`}\n    width=\"35\"\n    height=\"35\"\n    viewBox=\"0 0 35 35\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path d=\"M0 15.2904L0 19.7096L26.5152 19.7096L14.3624 31.8624L17.5 35L35 17.5L17.5 -1.68579e-07L14.3624 3.13763L26.5152 15.2904L0 15.2904Z\" />\n  </svg>\n)\n\nexport default Arrow\n","import BrainhubCarousel, {\n  CarouselProps as BrainhubCarouselProps,\n} from '@brainhubeu/react-carousel'\nimport React, { useState } from 'react'\nimport Arrow from '../assets/icons/Arrow'\nimport useShowDesktop from '../utils/hooks/useShowDesktop'\nimport { SizeMe } from 'react-sizeme'\nimport '@brainhubeu/react-carousel/lib/style.css'\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Remainder\nfunction mod(a: number, b: number) {\n  return ((a % b) + b) % b\n}\n\nexport type CarouselProps = {\n  children: React.ReactElement[]\n  isLoading?: boolean\n}\n\nconst DesktopProps: BrainhubCarouselProps = {\n  clickToChange: true,\n  infinite: true,\n  slidesPerScroll: 1,\n  slidesPerPage: 3,\n  centered: true,\n  arrowLeft: <Arrow className=\"SRC-Carousel__LeftArrow\" />,\n  arrowRight: <Arrow className=\"SRC-Carousel__RightArrow\" />,\n  addArrowClickHandler: true,\n  breakpoints: {\n    1100: {\n      slidesPerPage: 1,\n    },\n  },\n}\n\nconst MobileProps: BrainhubCarouselProps = {\n  dots: true,\n  infinite: true,\n  slidesPerScroll: 1,\n  slidesPerPage: 1,\n}\n\n/**\n * Responsive carousel. The component will display a loading spinner if no children are passed via props.\n * Note that the child components must accept a className prop, or its class will be overriden\n */\nexport const Carousel: React.FunctionComponent<CarouselProps> = ({\n  children,\n  isLoading = false,\n}) => {\n  const showDesktop = useShowDesktop()\n  const [currentIndex, setCurrentIndex] = useState(0)\n\n  const styledChildren = React.Children.map(children, (child, index) => {\n    // react-carousel renders a flexbox that translates the visible portion to achieve the carousel effect.\n    // To create the 'infinite' effect, duplicates are rendered, and the translation sometimes 'jumps' to the previous identical part of the flex container\n    // Styling just the 'active' card (and not duplicates) causes CSS transitions to appear to run twice when the translation jumps\n    // Calculating the mod index lets us style all duplicates, preventing the user from seeing multiple transitions.\n    let childClass = child.props.className ?? ''\n    if (index === mod(currentIndex, children.length)) {\n      childClass += ' SRC-Carousel__SelectedCard'\n    } else {\n      childClass += ' SRC-Carousel__UnselectedCard'\n    }\n    return React.cloneElement(child, { className: childClass })\n  })\n\n  return isLoading ? (\n    <div className=\"spinner\" style={{ display: 'block' }} />\n  ) : (\n    <div className=\"SRC-Carousel\">\n      <SizeMe refreshMode=\"debounce\" noPlaceholder={true}>\n        {({ size }) => (\n          <BrainhubCarousel\n            {...(showDesktop ? DesktopProps : MobileProps)}\n            key={size.width!}\n            value={currentIndex}\n            onChange={value => setCurrentIndex(value)}\n          >\n            {styledChildren}\n          </BrainhubCarousel>\n        )}\n      </SizeMe>\n    </div>\n  )\n}\n\nexport default Carousel\n","import { SynapseClient, SynapseConstants } from '../../../utils'\nimport { getFieldIndex } from '../../../utils/functions/queryUtils'\nimport useGetQueryResultBundle from '../../../utils/hooks/useGetQueryResultBundle'\nimport { QueryBundleRequest } from '../../../utils/synapseTypes'\nimport React, { useState, useEffect } from 'react'\nimport Carousel from '../../Carousel'\nimport { ProjectViewCard } from './ProjectViewCard'\nimport { ErrorBanner } from '../../ErrorBanner'\n\nexport type ProjectViewCarouselProps = {\n  token?: string\n  entityId: string\n}\n\ntype ProjectData = {\n  projectName: string\n  projectDescription: string\n  entityId: string\n  imageFileName?: string\n  imageUrl?: string\n}\n\nenum ExpectedColumns {\n  ID = 'id',\n  PROJECT_DISPLAY_NAME = 'projectDisplayName',\n  NAME = 'name', // fallback\n  PROJECT_DESCRIPTION = 'projectDescription',\n  PROJECT_IMAGE = 'projectImageFileName',\n}\n\n/**\n * Display a carousel of projects using a Project View. Driven by the following annotations/column names:\n * projectDisplayName, projectDescription, projectImageFileName. The projectImageFileName must\n * be an attachment on the project's root wiki page.\n */\nexport const ProjectViewCarousel: React.FunctionComponent<ProjectViewCarouselProps> = ({\n  token,\n  entityId,\n}) => {\n  const queryBundleRequest: QueryBundleRequest = {\n    concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n    entityId,\n    partMask:\n      SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS |\n      SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n    query: {\n      sql: `select * from ${entityId}`,\n    },\n  }\n\n  const [projects, setProjects] = useState<ProjectData[]>([])\n  const [error, setError] = useState<Error>()\n  const {\n    queryResultBundle,\n    error: queryError,\n    isLoading,\n  } = useGetQueryResultBundle({\n    token,\n    queryBundleRequest,\n  })\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const entityIdIndex = getFieldIndex(\n          ExpectedColumns.ID,\n          queryResultBundle,\n        )\n        const displayNameColumnIndex = getFieldIndex(\n          ExpectedColumns.PROJECT_DISPLAY_NAME,\n          queryResultBundle,\n        )\n        const descriptionColumnIndex = getFieldIndex(\n          ExpectedColumns.PROJECT_DESCRIPTION,\n          queryResultBundle,\n        )\n        const nameColumnIndex = getFieldIndex(\n          ExpectedColumns.NAME,\n          queryResultBundle,\n        )\n        const imageColumnIndex = getFieldIndex(\n          ExpectedColumns.PROJECT_IMAGE,\n          queryResultBundle,\n        )\n\n        const projects: ProjectData[] =\n          queryResultBundle?.queryResult.queryResults.rows.map(row => {\n            return {\n              projectName:\n                row.values[displayNameColumnIndex] ??\n                row.values[nameColumnIndex],\n              projectDescription: row.values[descriptionColumnIndex],\n              imageFileName: row.values[imageColumnIndex],\n              entityId: row.values[entityIdIndex],\n            }\n          }) ?? []\n        if (queryError) {\n          throw queryError\n        }\n        if (projects.length === 0) {\n          // wait for data to load\n          return\n        }\n\n        for (const project of projects) {\n          try {\n            if (project.imageFileName) {\n              const wikiPageKey = await SynapseClient.getWikiPageKeyForEntity(\n                token,\n                project.entityId,\n              )\n\n              project.imageUrl = await SynapseClient.getPresignedUrlForWikiAttachment(\n                token,\n                project.entityId,\n                wikiPageKey.wikiPageId,\n                project.imageFileName!,\n              )\n            }\n          } catch (err) {\n            // Don't break the whole component just because we can't find an image.\n            // The user will just see the placeholder.\n            console.error(err)\n          }\n        }\n\n        setProjects(projects)\n      } catch (error) {\n        console.error(error)\n        setError(error)\n      }\n    }\n    getData()\n  }, [entityId, token, queryResultBundle, queryError])\n\n  return error ? (\n    <ErrorBanner error={error}></ErrorBanner>\n  ) : (\n    <Carousel isLoading={isLoading}>\n      {projects.map(project => {\n        return (\n          <ProjectViewCard\n            key={project.entityId}\n            projectName={project.projectName}\n            projectDescription={project.projectDescription}\n            synId={project.entityId}\n            image={\n              project.imageUrl ? (\n                <img\n                  src={project.imageUrl}\n                  alt={`Logo for ${project.projectName}`}\n                />\n              ) : undefined\n            }\n          />\n        )\n      })}\n    </Carousel>\n  )\n}\n\nexport default ProjectViewCarousel\n","import React from 'react'\nimport { Button } from 'react-bootstrap'\n\nexport type ProjectCardProps = {\n  projectName: string\n  projectDescription: string\n  synId: string\n  image?: JSX.Element\n}\n\nexport const ProjectViewCard: React.FunctionComponent<\n  ProjectCardProps & React.HTMLAttributes<HTMLDivElement>\n> = ({ projectName, projectDescription, synId, image, ...domProps }) => {\n  return (\n    <div\n      {...domProps}\n      className={`cardContainer ProjectViewCard bootstrap-4-backport ${\n        domProps.className ?? ''\n      }`}\n    >\n      {image ? image : <div className={'ProjectViewCard__ImagePlaceholder'} />}\n      <div>\n        <div className=\"ProjectViewCard__ProjectName\">{projectName}</div>\n        <div className=\"ProjectViewCard__ProjectDescription\">\n          {projectDescription}\n        </div>\n      </div>\n      <Button\n        variant=\"primary\"\n        className=\"ProjectViewCard__ViewProjectButton\"\n        onClick={() =>\n          window.open(\n            `https://www.synapse.org/#!Synapse:${synId}`,\n            '_blank',\n            'noopener',\n          )\n        }\n      >\n        View Project\n      </Button>\n    </div>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9.27273 9.27273H10.4318V11.4518L12.3173 12.5414L11.7377 13.5459L9.27273 12.1241V9.27273ZM12.3636 5.40909H1.54545V13.9091H5.15409C4.82182 13.2059 4.63636 12.4177 4.63636 11.5909C4.63636 10.1563 5.20625 8.78051 6.22065 7.7661C7.23505 6.7517 8.61088 6.18182 10.0455 6.18182C10.8723 6.18182 11.6605 6.36727 12.3636 6.69955V5.40909ZM1.54545 15.4545C0.687727 15.4545 0 14.7591 0 13.9091V3.09091C0 2.23318 0.687727 1.54545 1.54545 1.54545H2.31818V0H3.86364V1.54545H10.0455V0H11.5909V1.54545H12.3636C12.7735 1.54545 13.1666 1.70828 13.4564 1.99811C13.7463 2.28794 13.9091 2.68103 13.9091 3.09091V7.80455C14.8673 8.77818 15.4545 10.115 15.4545 11.5909C15.4545 13.0255 14.8847 14.4013 13.8703 15.4157C12.8559 16.4301 11.48 17 10.0455 17C8.56955 17 7.23273 16.4127 6.25909 15.4545H1.54545ZM10.0455 7.84318C9.0515 7.84318 8.09825 8.23803 7.39541 8.94087C6.69258 9.6437 6.29773 10.5969 6.29773 11.5909C6.29773 13.6618 7.97455 15.3386 10.0455 15.3386C10.5376 15.3386 11.025 15.2417 11.4796 15.0534C11.9343 14.865 12.3475 14.589 12.6955 14.241C13.0435 13.8929 13.3196 13.4798 13.5079 13.0251C13.6962 12.5704 13.7932 12.0831 13.7932 11.5909C13.7932 9.52 12.1164 7.84318 10.0455 7.84318Z\",\n  fill: \"white\"\n});\n\nvar SvgCalendarClock = function SvgCalendarClock(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 15,\n    height: 15,\n    viewBox: \"0 0 16 17\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCalendarClock, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/calendar-clock.1440a207.svg\";\nexport { ForwardRef as ReactComponent };","import { EvaluationRoundLimitType } from '../../../utils/synapseTypes/Evaluation'\nimport React from 'react'\nimport { FormControl, FormGroup } from 'react-bootstrap'\nimport { EvaluationRoundLimitInput } from '../input_models/models'\n\nexport type EvaluationRoundLimitOptionsProps = {\n  limitInput: EvaluationRoundLimitInput\n  //all types for which an EvaluationRoundLimitOptions was already created\n  allSelectedTypes: Set<EvaluationRoundLimitType>\n  onChange: (limitInput: EvaluationRoundLimitInput) => void\n}\n\nexport const LIMIT_TYPE_DISPLAY_NAME: Partial<Record<\n  EvaluationRoundLimitType,\n  string\n>> = {\n  // EvaluationRoundLimitType.TOTAL is purposely omitted because an <input> in the parent handles it\n  DAILY: 'Daily Limit',\n  WEEKLY: 'Weekly Limit',\n  MONTHLY: 'Monthly Limit',\n}\n\nexport const EvaluationRoundLimitOptions: React.FunctionComponent<EvaluationRoundLimitOptionsProps> = ({\n  limitInput,\n  allSelectedTypes,\n  onChange,\n}) => {\n  return (\n    <React.Fragment>\n      <FormGroup className=\"limit-type\">\n        <label>Limit Type</label>\n        <FormControl\n          as=\"select\"\n          custom\n          value={limitInput.type}\n          onChange={event => {\n            onChange({\n              type: event.target.value as EvaluationRoundLimitType,\n              maxSubmissionString: limitInput.maxSubmissionString,\n            })\n          }}\n        >\n          {Object.entries(LIMIT_TYPE_DISPLAY_NAME).map(\n            ([displayLimitType, displayName]) => (\n              <option\n                key={displayLimitType}\n                value={displayLimitType}\n                disabled={\n                  allSelectedTypes.has(\n                    displayLimitType as EvaluationRoundLimitType,\n                  ) && displayLimitType !== limitInput.type\n                }\n              >\n                {displayName}\n              </option>\n            ),\n          )}\n        </FormControl>\n      </FormGroup>\n\n      <FormGroup className=\"limit-input\">\n        <label>Maximum Submissions</label>\n        <FormControl\n          type=\"text\"\n          pattern=\"[0-9]*\"\n          value={limitInput.maxSubmissionString}\n          onChange={event => {\n            onChange({\n              type: limitInput.type,\n              maxSubmissionString: event.target.value,\n            })\n          }}\n        />\n      </FormGroup>\n    </React.Fragment>\n  )\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"rect\", {\n  width: 26,\n  height: 26\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  fillRule: \"evenodd\",\n  clipRule: \"evenodd\",\n  d: \"M14.1996 11.8004V7H11.7996V11.8004H7V14.2004H11.7996V19H14.1996V14.2004H19V11.8004H14.1996Z\",\n  fill: \"white\"\n});\n\nvar SvgIconPlusSquareFilled = function SvgIconPlusSquareFilled(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 26,\n    height: 26,\n    viewBox: \"0 0 26 26\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgIconPlusSquareFilled, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon_plus_square_filled.b1430018.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M18.7729 8.10786L17.6651 7L13.2729 11.3921L8.88081 7L7.77295 8.10786L12.1651 12.5L7.77295 16.8921L8.88081 18L13.2729 13.6079L17.6651 18L18.7729 16.8921L14.3808 12.5L18.7729 8.10786Z\",\n  fill: \"inherit\"\n});\n\nvar SvgIconTimes = function SvgIconTimes(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 27,\n    height: 26,\n    viewBox: \"0 0 27 26\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgIconTimes, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/icon_times.f3fa7393.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useCallback, useEffect } from 'react'\nimport {\n  EvaluationRoundLimitOptions,\n  LIMIT_TYPE_DISPLAY_NAME,\n} from './EvaluationRoundLimitOptions'\nimport { EvaluationRoundLimitType } from '../../../utils/synapseTypes/Evaluation'\nimport { ReactComponent as IconPlusSquareFilled } from '../../../assets/icons/icon_plus_square_filled.svg'\nimport { ReactComponent as IconTimes } from '../../../assets/icons/icon_times.svg'\nimport { EvaluationRoundLimitInput } from '../input_models/models'\nimport { Button } from 'react-bootstrap'\n\nconst AVAILABLE_LIMIT_TYPES = Object.keys(LIMIT_TYPE_DISPLAY_NAME)\n\nexport type EvaluationRoundLimitOptionsListProps = {\n  limitInputs: EvaluationRoundLimitInput[]\n  handleChange: (\n    index: number,\n  ) => (limitInput: EvaluationRoundLimitInput) => void\n\n  handleDeleteLimit: (index: number) => () => void\n\n  onAddNewLimit: (limit: EvaluationRoundLimitInput) => void\n}\n\nconst selectUnusedType = (\n  selectedTypes: Set<EvaluationRoundLimitType>,\n): EvaluationRoundLimitType => {\n  return AVAILABLE_LIMIT_TYPES.find(\n    key => !selectedTypes.has(key as EvaluationRoundLimitType),\n  ) as EvaluationRoundLimitType\n}\n\nexport const EvaluationRoundLimitOptionsList: React.FunctionComponent<EvaluationRoundLimitOptionsListProps> = ({\n  limitInputs,\n  handleChange,\n  handleDeleteLimit,\n  onAddNewLimit,\n}) => {\n  // all types that are currently being used\n  const selectedTypes: Set<EvaluationRoundLimitType> = new Set(\n    limitInputs.map(limit => limit.type),\n  )\n\n  const addNewLimit = useCallback(() => {\n    onAddNewLimit({\n      type: selectUnusedType(selectedTypes),\n      maxSubmissionString: '',\n    })\n  }, [onAddNewLimit, selectedTypes])\n\n  //display some input even if no limits currently exist\n  useEffect(() => {\n    if (limitInputs.length === 0) {\n      addNewLimit()\n    }\n  }, [limitInputs, addNewLimit])\n\n  return (\n    <div className=\"advanced-limits-grid\">\n      {limitInputs.map((limit, index) => {\n        return (\n          <React.Fragment key={limit.type}>\n            <EvaluationRoundLimitOptions\n              limitInput={limit}\n              allSelectedTypes={selectedTypes}\n              onChange={handleChange(index)}\n            />\n\n            {/*remove button for the EvaluationRoundLimitOptions*/}\n            <Button\n              // use an invalid variant, we just want the basic bootstrap 4 \"btn\" class behavior\n              variant=\"\"\n              className=\"remove-button\"\n              onClick={handleDeleteLimit(index)}\n            >\n              <IconTimes className=\"SRC-icon-fill\" />\n            </Button>\n\n            {/*conditionally create a \"add\" button*/}\n            {\n              // if last element\n              index === limitInputs.length - 1 &&\n                // if the are unused limit types\n                limitInputs.length < AVAILABLE_LIMIT_TYPES.length && (\n                  <Button\n                    // use an invalid variant, we just want the basic bootstrap 4 \"btn\" class behavior\n                    variant=\"\"\n                    onClick={addNewLimit}\n                    className=\"add-button\"\n                  >\n                    <IconPlusSquareFilled className=\"SRC-icon-fill\" />\n                  </Button>\n                )\n            }\n          </React.Fragment>\n        )\n      })}\n    </div>\n  )\n}\n","import { Button, Col, Dropdown, Form, Row } from 'react-bootstrap'\nimport React, { useEffect, useState } from 'react'\nimport { capitalize } from 'lodash-es'\nimport {\n  createEvaluation,\n  deleteEvaluation,\n  getEvaluation,\n  SynapseClientError,\n  updateEvaluation,\n} from '../../utils/SynapseClient'\nimport { ErrorBanner } from '../ErrorBanner'\nimport { Evaluation, EvaluationStatus } from '../../utils/synapseTypes'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEllipsisV } from '@fortawesome/free-solid-svg-icons'\nimport { CreatedOnByUserDiv } from './CreatedOnByUserDiv'\n\nconst defaultEvaluationStatus = EvaluationStatus.PLANNED\n\nexport type EvaluationEditorProps = {\n  /** session token to make authenticated API calls */\n  readonly sessionToken: string\n  /** Use if UPDATING an existing Evaluation. Id of the evaluation to edit */\n  readonly evaluationId?: string\n  /** Use if CREATING a new Evaluation. Id of the Entity that will be associated with the Evaluation */\n  readonly entityId?: string\n  /** If true, the \"Created on\" date will be displayed in UTC time */\n  readonly utc: boolean\n  /** Callback after successful deletion of the Evaluation */\n  readonly onDeleteSuccess: () => void\n}\n\n/**\n * Edits basic properties of an Evaluation\n */\nexport const EvaluationEditor: React.FunctionComponent<EvaluationEditorProps> = ({\n  sessionToken,\n  evaluationId,\n  entityId,\n  utc,\n  onDeleteSuccess,\n}: EvaluationEditorProps) => {\n  if (evaluationId && entityId) {\n    throw new Error('please use either evaluationId or entityId but not both')\n  }\n\n  const [error, setError] = useState<SynapseClientError>()\n\n  const [name, setName] = useState<string>('')\n  const [description, setDescription] = useState<string>('')\n  const [\n    submissionInstructionsMessage,\n    setSubmissionInstructionsMessage,\n  ] = useState<string>('')\n  const [submissionReceiptMessage, setSubmissionReceiptMessage] = useState<\n    string\n  >('')\n  const [status, setStatus] = useState<EvaluationStatus>(\n    defaultEvaluationStatus,\n  )\n\n  const [evaluation, setEvaluation] = useState<Evaluation>({\n    contentSource: entityId,\n  })\n\n  useEffect(() => {\n    setName(evaluation.name ?? '')\n    setDescription(evaluation.description ?? '')\n    setSubmissionInstructionsMessage(\n      evaluation.submissionInstructionsMessage ?? '',\n    )\n    setSubmissionReceiptMessage(evaluation.submissionReceiptMessage ?? '')\n    setStatus(evaluation.status ?? defaultEvaluationStatus)\n  }, [evaluation])\n\n  useEffect(() => {\n    // if we initially passed in a update the we retrieve a new Evaluation\n    if (evaluationId) {\n      //clear error\n      setError(undefined)\n      getEvaluation(evaluationId, sessionToken)\n        .then(retrievedEvaluation => {\n          setEvaluation(retrievedEvaluation)\n        })\n        .catch(error => setError(error))\n    }\n  }, [evaluationId, sessionToken])\n\n  const onSave = () => {\n    // clear out error\n    setError(undefined)\n    const newOrUpdatedEvaluation: Evaluation = {\n      ...evaluation,\n      name,\n      description,\n      submissionInstructionsMessage,\n      submissionReceiptMessage,\n      status,\n    }\n\n    const promise = newOrUpdatedEvaluation.id\n      ? updateEvaluation(newOrUpdatedEvaluation, sessionToken)\n      : createEvaluation(newOrUpdatedEvaluation, sessionToken)\n\n    promise\n      .then(evaluation => setEvaluation(evaluation))\n      .catch(error => setError(error))\n  }\n\n  // create delete callback if the evaluation has id\n  const onDelete = evaluation?.id\n    ? () => {\n        setError(undefined)\n        deleteEvaluation(evaluation.id!, sessionToken)\n          .then(onDeleteSuccess)\n          .catch(error => setError(error))\n      }\n    : undefined\n\n  return (\n    <div className=\"bootstrap-4-backport\">\n      <div className=\"evaluation-editor\">\n        <Row>\n          <Col>\n            <h4>{evaluation.id ? 'Edit' : 'Create'} Evaluation Queue</h4>\n          </Col>\n          <Col>\n            <EvaluationEditorDropdown onClick={onSave} onDelete={onDelete} />\n          </Col>\n        </Row>\n        <Form>\n          <Form.Group>\n            <Form.Label>Name</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={name}\n              onChange={event => setName(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Status</Form.Label>\n            <Form.Control\n              as=\"select\"\n              custom\n              value={status}\n              onChange={event =>\n                setStatus(event.target.value as EvaluationStatus)\n              }\n            >\n              {Object.keys(EvaluationStatus).map(key => {\n                return (\n                  <option key={key} value={key}>\n                    {capitalize(key)}\n                  </option>\n                )\n              })}\n            </Form.Control>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label>Description</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              value={description}\n              rows={2}\n              onChange={event => setDescription(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Submission Instructions</Form.Label>\n            <Form.Control\n              as=\"textarea\"\n              value={submissionInstructionsMessage}\n              rows={2}\n              onChange={event =>\n                setSubmissionInstructionsMessage(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label>Submission Receipt Message</Form.Label>\n            <Form.Control\n              type=\"text\"\n              value={submissionReceiptMessage}\n              onChange={event =>\n                setSubmissionReceiptMessage(event.target.value)\n              }\n            />\n          </Form.Group>\n          {evaluation?.createdOn && (\n            <CreatedOnByUserDiv\n              userId={evaluation.ownerId!}\n              date={new Date(evaluation.createdOn)}\n              sessionToken={sessionToken}\n              utc={utc}\n            />\n          )}\n          {error && <ErrorBanner error={error} token={sessionToken} />}\n          <div>\n            <Button className=\"float-right save-button\" onClick={onSave}>\n              Save\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\ntype EvaluationEditorDropdownProps = {\n  onClick: () => void\n  onDelete?: () => void\n}\n\nconst EvaluationEditorDropdown: React.FunctionComponent<EvaluationEditorDropdownProps> = ({\n  onClick,\n  onDelete,\n}) => {\n  return (\n    <Dropdown className=\"float-right\">\n      <Dropdown.Toggle variant=\"link\" className=\"dropdown-no-caret\">\n        <FontAwesomeIcon icon={faEllipsisV} />\n      </Dropdown.Toggle>\n      <Dropdown.Menu alignRight={true}>\n        <Dropdown.Item onClick={onClick}>Save</Dropdown.Item>\n        {onDelete && (\n          <>\n            <Dropdown.Divider />\n            <Dropdown.Item onClick={onDelete}>Delete</Dropdown.Item>\n          </>\n        )}\n      </Dropdown.Menu>\n    </Dropdown>\n  )\n}\n","import * as React from 'react'\nimport { FunctionComponent } from 'react'\n\nimport {\n  FacetColumnResult,\n  FacetColumnResultRange,\n  FacetColumnResultValueCount,\n} from '../../../utils/synapseTypes'\nimport { unCamelCase } from '../../../utils/functions/unCamelCase'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { ElementWithTooltip } from '../ElementWithTooltip'\nimport _ from 'lodash'\nimport { SynapseConstants } from '../../../utils'\n\nexport type FacetWithSelection = {\n  facet: FacetColumnResult\n  selectedValue?: FacetColumnResultValueCount\n  displayValue?: string\n}\n\nexport type SelectionCriteriaPillProps = {\n  facetWithSelection?: FacetWithSelection\n  index: number\n  className?: string\n  onRemove: Function\n  filter?: {\n    columnName: string\n    value: string\n  }\n}\n\nconst SelectionCriteriaPill: FunctionComponent<SelectionCriteriaPillProps> = ({\n  facetWithSelection,\n  index,\n  onRemove,\n  filter,\n}) => {\n  let innerText,\n    tooltipText: string | null = ''\n  if (facetWithSelection) {\n    if (facetWithSelection.facet.facetType === 'enumeration') {\n      innerText =\n        facetWithSelection.displayValue === SynapseConstants.VALUE_NOT_SET\n          ? 'Unannotated'\n          : facetWithSelection.displayValue\n    } else {\n      innerText =\n        (facetWithSelection.facet as FacetColumnResultRange).selectedMin +\n        ' - ' +\n        (facetWithSelection.facet as FacetColumnResultRange).selectedMax\n    }\n    tooltipText = `${unCamelCase(\n      facetWithSelection.facet.columnName,\n    )}: ${innerText}`\n  } else {\n    let filterValue = filter?.value\n    if (filterValue?.startsWith('%') && filterValue?.endsWith('%')) {\n      // strip '%' wildcard character when using a LIKE condition\n      filterValue = filterValue.substring(1, filterValue.length-1)\n    }\n    innerText = `\"${filterValue}\" in ${unCamelCase(filter?.columnName)}`\n    tooltipText = `${unCamelCase(filter?.columnName)}: ${filterValue}`\n  }\n  return (\n    <ElementWithTooltip\n      idForToolTip={`selectionCriteria_${+index}`}\n      tooltipText={tooltipText}\n      callbackFn={() => _.noop}\n    >\n      <label\n        className=\"SelectionCriteriaPill\"\n        key={index + '__SelectionCriteriaPill'}\n      >\n        <span>{innerText}</span>\n        <button\n          onClick={() => onRemove(facetWithSelection)}\n          className=\"SelectionCriteriaPill__btnRemove\"\n        >\n          <FontAwesomeIcon icon={faTimes} title=\"deselect\" />\n        </button>\n      </label>\n    </ElementWithTooltip>\n  )\n}\n\nexport default SelectionCriteriaPill\n","import * as React from 'react'\nimport {\n  QueryBundleRequest,\n  FacetColumnResultRange,\n  FacetColumnResultValues,\n  EntityHeader,\n  UserProfile,\n  FacetColumnResult,\n  ColumnModel,\n  FacetColumnRequest,\n} from '../utils/synapseTypes'\nimport { SynapseClient, SynapseConstants } from '../'\nimport {\n  getStoredEntityHeaders,\n  getStoredUserProfiles,\n} from '../utils/functions/getDataFromFromStorage'\nimport useDeepCompareEffect from 'use-deep-compare-effect'\nimport { cloneDeep } from 'lodash-es'\nimport SelectionCriteriaPill, {\n  FacetWithSelection,\n} from './widgets/facet-nav/SelectionCriteriaPill'\nimport {\n  applyChangesToValuesColumn,\n  applyChangesToRangeColumn,\n} from './widgets/query-filter/QueryFilter'\nimport { RadioValuesEnum } from './widgets/query-filter/RangeFacetFilter'\nimport { useState, FunctionComponent } from 'react'\nimport { QueryWrapperChildProps } from './QueryWrapper'\nimport { ColumnSingleValueFilterOperator } from '../utils/synapseTypes/Table/QueryFilter'\n\nexport type TotalQueryResultsProps = {\n  isLoading: boolean\n  style?: React.CSSProperties\n  lastQueryRequest: QueryBundleRequest\n  token: string | undefined\n  unitDescription: string\n  frontText: string\n  applyChanges?: Function\n  showNotch?: boolean\n} & QueryWrapperChildProps\n\n// This is a stateful component so that during load the component can hold onto the previous\n// total instead of showing 0 results for the intermittent loading state.\n\nconst TotalQueryResults: FunctionComponent<TotalQueryResultsProps> = ({\n  style,\n  unitDescription,\n  frontText,\n  lastQueryRequest,\n  token,\n  isLoading: parentLoading,\n  executeQueryRequest,\n  getInitQueryRequest,\n  showNotch = false,\n  error,\n}) => {\n  const [total, setTotal] = useState<number | undefined>(undefined) // undefined to start\n  const [isLoading, setIsLoading] = useState(false)\n  const [facetsWithSelection, setFacetsWithSelection] = useState<\n    FacetWithSelection[]\n  >([])\n\n  const applyChanges = (facets: FacetColumnRequest[]) => {\n    const queryRequest: QueryBundleRequest = cloneDeep(lastQueryRequest)\n    queryRequest.query.selectedFacets = facets\n    queryRequest.query.offset = 0\n    executeQueryRequest!(queryRequest)\n  }\n\n  const getEnumFacetsWithSelections = (\n    facets: FacetColumnResult[],\n  ): FacetColumnResultValues[] => {\n    const enumFacets = facets.filter(\n      facet => facet.facetType === 'enumeration',\n    ) as FacetColumnResultValues[]\n    const enumFacetsWithSelections = enumFacets.filter(\n      facet =>\n        facet.facetValues.filter(value => value.isSelected === true).length > 0,\n    )\n    return enumFacetsWithSelections\n  }\n\n  const getRangeFacetsWithSelections = (\n    facets: FacetColumnResult[],\n  ): FacetColumnResultRange[] => {\n    const rangeFacets = facets.filter(\n      facet => facet.facetType === 'range',\n    ) as FacetColumnResultRange[]\n    const rangeFacetsWithSelections = rangeFacets.filter(\n      facet => facet.selectedMax || facet.selectedMin,\n    )\n    return rangeFacetsWithSelections\n  }\n\n  const getDisplayValueForEntityColumn = (\n    entityHeaders: EntityHeader[],\n    facetValue: string,\n  ): string => {\n    const entity = entityHeaders.find(item => item.id === facetValue)\n    return entity?.name ?? facetValue\n  }\n\n  const getDisplayValueUserIdColumn = (\n    userProfiles: UserProfile[],\n    facetValue: string,\n  ): string => {\n    const userProfile = userProfiles.find(item => item.ownerId === facetValue)\n    return userProfile?.userName || facetValue\n  }\n\n  const transformEnumFacetsForSelectionDisplay = (\n    facets: FacetColumnResultValues[],\n    columnModels: ColumnModel[],\n  ): FacetWithSelection[] => {\n    const lookUpEntityHeaders = getStoredEntityHeaders()\n    const lookUpUserProfiles = getStoredUserProfiles()\n    const filteredEnumWithSelectedValuesOnly: FacetWithSelection[] = []\n    facets.forEach(facet => {\n      const columnModel = columnModels.find(\n        model => model.name === facet.columnName,\n      )\n      facet.facetValues.forEach(facetValue => {\n        if (facetValue.isSelected) {\n          let displayValue = facetValue.value\n          if (columnModel?.columnType === 'ENTITYID') {\n            displayValue = getDisplayValueForEntityColumn(\n              lookUpEntityHeaders,\n              facetValue.value,\n            )\n          } else if (columnModel?.columnType === 'USERID') {\n            displayValue = getDisplayValueUserIdColumn(\n              lookUpUserProfiles,\n              facetValue.value,\n            )\n          }\n\n          filteredEnumWithSelectedValuesOnly.push({\n            facet,\n            displayValue,\n            selectedValue: facetValue,\n          })\n        }\n      })\n    })\n    return filteredEnumWithSelectedValuesOnly\n  }\n\n  useDeepCompareEffect(() => {\n    const calculateTotal = async () => {\n      const cloneLastQueryRequest = cloneDeep(lastQueryRequest)\n      cloneLastQueryRequest.partMask =\n        SynapseConstants.BUNDLE_MASK_QUERY_COUNT |\n        SynapseConstants.BUNDLE_MASK_QUERY_FACETS |\n        SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS\n      if (parentLoading || total === undefined) {\n        setIsLoading(true)\n        SynapseClient.getQueryTableResults(cloneLastQueryRequest, token)\n          .then(data => {\n            setTotal(data.queryCount!)\n            const rangeFacetsWithSelections = getRangeFacetsWithSelections(\n              data.facets!,\n            )\n            const enumFacetsWithSelections = getEnumFacetsWithSelections(\n              data.facets!,\n            )\n            const rangeFacetsForDisplay = rangeFacetsWithSelections.map(\n              facet => ({ facet }),\n            )\n            const enumFacetsForDisplay = transformEnumFacetsForSelectionDisplay(\n              enumFacetsWithSelections,\n              data.columnModels!,\n            )\n\n            setFacetsWithSelection([\n              ...rangeFacetsForDisplay,\n              ...enumFacetsForDisplay,\n            ])\n          })\n          .catch(err => {\n            console.error('err ', err)\n          })\n          .finally(() => {\n            setIsLoading(false)\n          })\n      }\n    }\n    calculateTotal()\n  }, [parentLoading, token, lastQueryRequest])\n\n  const removeFacetSelection = ({\n    facet,\n    selectedValue,\n  }: FacetWithSelection) => {\n    if (facet.facetType === 'enumeration') {\n      applyChangesToValuesColumn(\n        lastQueryRequest,\n        facet as FacetColumnResultValues,\n        applyChanges!,\n        selectedValue?.value,\n        false,\n      )\n    } else {\n      applyChangesToRangeColumn(\n        lastQueryRequest,\n        facet as FacetColumnResultRange,\n        applyChanges!,\n        [RadioValuesEnum.ANY, RadioValuesEnum.ANY],\n      )\n    }\n  }\n\n  const removeSearchQuerySelection = (columnName: string, value: string) => {\n    const cloneLastQueryRequest = cloneDeep(lastQueryRequest)\n    if (!cloneLastQueryRequest.query.additionalFilters) {\n      return\n    }\n    cloneLastQueryRequest.query.additionalFilters = cloneLastQueryRequest.query.additionalFilters\n      ?.map(el => {\n        return {\n          columnName: el.columnName,\n          values:\n            el.columnName === columnName\n              ? el.values.filter(el => el !== value)\n              : el.values,\n          operator: ColumnSingleValueFilterOperator.LIKE,\n          concreteType:\n            'org.sagebionetworks.repo.model.table.ColumnSingleValueQueryFilter',\n        }\n      })\n      .filter(el => el.values.length > 0)\n    executeQueryRequest!(cloneLastQueryRequest)\n  }\n\n  const clearAll = () => {\n    const initQueryRequest = cloneDeep(getInitQueryRequest!())\n    initQueryRequest.query.additionalFilters = []\n    executeQueryRequest!(initQueryRequest)\n  }\n\n  const searchSelectionCriteriaPill = lastQueryRequest?.query.additionalFilters?.map(\n    el => {\n      const { columnName } = el\n      return el.values.map(value => {\n        return (\n          <SelectionCriteriaPill\n            key={value}\n            index={facetsWithSelection.length + 1}\n            filter={{\n              columnName,\n              value,\n            }}\n            onRemove={() => removeSearchQuerySelection(el.columnName, value)}\n          />\n        )\n      })\n    },\n  )\n\n  if (error) {\n    return <></>\n  }\n  return (\n    <div\n      className={`TotalQueryResults ${showNotch ? 'notch-down' : ''}`}\n      style={style}\n    >\n      <span className=\"SRC-boldText SRC-text-title SRC-centerContent\">\n        {frontText} {total} {unitDescription}\n        {isLoading && (\n          <span style={{ marginLeft: '2px' }} className={'spinner'} />\n        )}\n      </span>\n      <div className=\"TotalQueryResults__selections\">\n        {searchSelectionCriteriaPill}\n        {facetsWithSelection.map((selectedFacet, index) => (\n          <SelectionCriteriaPill\n            key={\n              selectedFacet.selectedValue?.value ?? selectedFacet.displayValue\n            }\n            facetWithSelection={selectedFacet}\n            index={index}\n            onRemove={removeFacetSelection}\n          ></SelectionCriteriaPill>\n        ))}\n      </div>\n      {facetsWithSelection.length > 0 && (\n        <button onClick={clearAll} className=\"TotalQueryResults__clearall\">\n          Clear All\n        </button>\n      )}\n    </div>\n  )\n}\n\nexport default TotalQueryResults\n","import * as React from 'react'\nimport {\n  DATASET,\n  FUNDER,\n  GENERIC_CARD,\n  MEDIUM_USER_CARD,\n} from '../utils/SynapseConstants'\nimport {\n  QueryBundleRequest,\n  QueryResultBundle,\n  EntityHeader,\n} from '../utils/synapseTypes/'\nimport { CardConfiguration } from './CardContainerLogic'\nimport GenericCard from './GenericCard'\nimport { Dataset, Funder } from './row_renderers'\nimport TotalQueryResults from './TotalQueryResults'\nimport UserCardList from './UserCardList'\nimport useGetInfoFromIds from '../utils/hooks/useGetInfoFromIds'\nimport loadingScreen from './LoadingScreen'\n\nconst PAGE_SIZE: number = 25\n\nexport type CardContainerProps = {\n  data?: QueryResultBundle\n  limit?: number\n  isHeader?: boolean\n  isAlignToLeftNav?: boolean\n  title?: string\n  executeQueryRequest?: (param: QueryBundleRequest) => void\n  facetAliases?: {}\n  getLastQueryRequest?: () => QueryBundleRequest\n  getNextPageOfData?: (queryRequest: QueryBundleRequest) => void\n  isLoading?: boolean\n  facet?: string\n  unitDescription?: string\n  hasMoreData?: boolean\n  showBarChart?: boolean\n  token?: string\n} & CardConfiguration\n\nexport const CardContainer = (props: CardContainerProps) => {\n  /**\n   * Handle a click on next or previous\n   *\n   * @memberof SynapseTable\n   */\n  const handleViewMore = () => {\n    const queryRequest = props.getLastQueryRequest!()\n    let offset = queryRequest.query.offset!\n    // paginate forward\n    offset += PAGE_SIZE\n    queryRequest.query.offset = offset\n    props.getNextPageOfData!(queryRequest)\n  }\n\n  const renderCard = (props: any, type: string) => {\n    switch (type) {\n      case DATASET:\n        return <Dataset {...props} />\n      case FUNDER:\n        return <Funder {...props} />\n      case GENERIC_CARD:\n        return <GenericCard {...props} />\n      default:\n        return <div /> // this should never happen\n    }\n  }\n\n  const ids = props.data?.queryResult.queryResults.tableId\n    ? [props.data?.queryResult.queryResults.tableId]\n    : []\n  const tableEntityConcreteType = useGetInfoFromIds<EntityHeader>({\n    ids,\n    type: 'ENTITY_HEADER',\n    token: props.token,\n  })\n  const {\n    data,\n    limit = Infinity,\n    isHeader = false,\n    facet,\n    unitDescription,\n    type,\n    isLoading,\n    secondaryLabelLimit = 3,\n    showBarChart = true,\n    title,\n    token,\n    getLastQueryRequest,\n    executeQueryRequest,\n    ...rest\n  } = props\n  // the cards only show the loading screen on initial load, this occurs when data is undefined\n  if (!data) {\n    return <div>{isLoading && loadingScreen}</div>\n  } else if (data && data.queryResult.queryResults.rows.length === 0) {\n    // data was retrieved from the backend but there is none to show, we return a empty fragment\n    // there could be a more informed UX decision here but the current use case right now\n    // should display nothing\n    return <React.Fragment />\n  }\n  const schema = {}\n  data.queryResult.queryResults.headers.forEach((element, index) => {\n    schema[element.name] = index\n  })\n\n  // We want to hide the view more button if:\n  //   1. The data fed in has !== PAGE_SIZE number of results\n  //   2. The hasMoreData prop is false\n  //   3. The limit is set to less than PAGE_SIZE\n  // below we show the view more button by following the opposite logic from above.\n  let showViewMore: boolean =\n    limit >= PAGE_SIZE && data.queryResult.queryResults.rows.length >= PAGE_SIZE\n  showViewMore = showViewMore && props.hasMoreData!\n\n  const showViewMoreButton = showViewMore && (\n    <div className=\"SRC-viewMore\">\n      <button\n        onClick={handleViewMore}\n        className=\"SRC-standard-button-shape SRC-light-button\"\n      >\n        View More\n      </button>\n    </div>\n  )\n  let cards\n  if (type === MEDIUM_USER_CARD) {\n    // Hard coding ownerId as a column name containing the user profile ownerId\n    // for each row, grab the column with the ownerId\n    const userIdColumnIndex = data.queryResult.queryResults.headers.findIndex(\n      el => el.columnType === 'USERID',\n    )\n    if (userIdColumnIndex === -1) {\n      throw Error(\n        'Type MEDIUM_USER_CARD specified but no columnType USERID found',\n      )\n    }\n    const listIds = data.queryResult.queryResults.rows.map(\n      el => el.values[userIdColumnIndex],\n    )\n    cards = <UserCardList data={data} list={listIds} size={MEDIUM_USER_CARD} />\n  } else {\n    // render the cards\n    cards = data.queryResult.queryResults.rows.map((rowData: any, index) => {\n      if (index < limit) {\n        const key = JSON.stringify(rowData.values)\n        const propsForCard = {\n          key,\n          type,\n          schema,\n          isHeader,\n          secondaryLabelLimit,\n          data: rowData.values,\n          selectColumns: data.selectColumns,\n          columnModels: data.columnModels,\n          tableEntityConcreteType:\n            tableEntityConcreteType[0] && tableEntityConcreteType[0].type,\n          tableId: props.data?.queryResult.queryResults.tableId,\n          token,\n          ...rest,\n        }\n        return renderCard(propsForCard, type)\n      }\n      return false\n    })\n  }\n\n  return (\n    <div>\n      {title && <h2 className=\"SRC-card-overview-title\">{title}</h2>}\n      {!title && unitDescription && showBarChart && (\n        <TotalQueryResults\n          token={token}\n          isLoading={isLoading!}\n          unitDescription={unitDescription}\n          executeQueryRequest={executeQueryRequest}\n          lastQueryRequest={getLastQueryRequest!()}\n          frontText={'Displaying'}\n        />\n      )}\n      {/* ReactCSSTransitionGroup adds css fade in property for cards that come into view */}\n      {cards}\n      {showViewMoreButton}\n    </div>\n  )\n}\n\nexport default CardContainer\n","import * as React from 'react'\nimport { SynapseClient, SynapseConstants } from '../utils'\nimport { getNextPageOfData } from '../utils/functions/queryUtils'\nimport {\n  insertConditionsFromSearchParams,\n  KeyValue,\n  SQLOperator,\n  parseEntityIdFromSqlStatement,\n} from '../utils/functions/sqlFunctions'\nimport { QueryBundleRequest, QueryResultBundle } from '../utils/synapseTypes/'\nimport CardContainer from './CardContainer'\nimport { GenericCardSchema, IconOptions } from './GenericCard'\n// TODO: this import nearly doubles the package size of SRC as a UMD build by ~400KB\n// will have to find a way to use individual lodash packages instead of the entire thing\nimport { cloneDeep, isEqual } from 'lodash-es'\nexport interface CardLink {\n  baseURL: string\n  // the key that will go into the url\n  URLColumnName: string\n  // the column name who's value will be used\n  matchColumnName: string\n  isMarkdown: false\n  // the value that will go into the url link should be surrounded with parenthesis, making the search\n  // param study=(ROSMAP) instead of study=ROSMAP\n  wrapValueWithParens?: boolean\n}\n\nexport type MarkdownLink = {\n  isMarkdown: true\n  // the columns whos value will be used for the markdown\n  matchColumnName: string\n}\n\nexport type MarkdownValue = {\n  isMarkdown: true\n}\n\n// Specify the indices in the values [] that should be rendered specially\nexport type LabelLinkConfig = (MarkdownLink | CardLink)[]\n\nexport type CommonCardProps = {\n  genericCardSchema?: GenericCardSchema\n  secondaryLabelLimit?: number\n  titleLinkConfig?: CardLink\n  labelLinkConfig?: LabelLinkConfig\n  descriptionLinkConfig?: MarkdownValue\n  rgbIndex?: number\n}\n\nexport type CardConfiguration = {\n  type: string\n  hasInternalLink?: boolean\n  iconOptions?: IconOptions\n} & CommonCardProps\n\nexport type CardContainerLogicProps = {\n  token?: string\n  limit?: number\n  title?: string\n  unitDescription?: string\n  sqlOperator?: SQLOperator\n  searchParams?: KeyValue\n  facet?: string\n  facetAliases?: {}\n  backgroundColor?: string\n  rgbIndex?: number\n  isHeader?: boolean\n  isAlignToLeftNav?: boolean\n  sql: string\n} & CardConfiguration\n\ntype State = {\n  data: QueryResultBundle | undefined\n  isLoading: boolean\n  queryRequest: QueryBundleRequest\n  totalResultsNoFacet: number\n  hasMoreData: boolean\n}\n\n/**\n * Class wraps around CardContainer and serves as a standalone logic container for rendering cards.\n * This same logic exists in QueryWrapper, but the two serve two distinct purposes, making this component\n * sufficiently distinct.\n *\n * @class CardContainerLogic\n * @extends {React.Component}\n */\nexport default class CardContainerLogic extends React.Component<\n  CardContainerLogicProps,\n  State\n> {\n  public static defaultProps = {\n    token: '',\n  }\n\n  public static defaultState = {\n    data: undefined,\n    isLoading: true,\n    queryRequest: {} as QueryBundleRequest,\n    totalResultsNoFacet: 0,\n    hasMoreData: true,\n  }\n\n  constructor(props: CardContainerLogicProps) {\n    super(props)\n    this.executeInitialQueryRequest = this.executeInitialQueryRequest.bind(this)\n    this.getLastQueryRequest = this.getLastQueryRequest.bind(this)\n    this.getNextPageOfData = this.getNextPageOfData.bind(this)\n    this.state = CardContainerLogic.defaultState\n  }\n\n  /**\n   * Compute default query request\n   *\n   * @memberof QueryWrapper\n   */\n  public componentDidMount() {\n    this.executeInitialQueryRequest()\n  }\n\n  /**\n   * @memberof QueryWrapper\n   *\n   */\n  public componentDidUpdate(prevProps: CardContainerLogicProps) {\n    /**\n     *  If token has changed (they signed in) or sql query has changed\n     *  or search params have updated then perform an update.\n     */\n    const { searchParams: prevSearchParams = {} } = prevProps\n    const { searchParams: currentSearchParams = {} } = this.props\n    const hasSearchParamsChanged = !isEqual(\n      prevSearchParams,\n      currentSearchParams,\n    )\n    const hasTokenChanged = this.props.token !== prevProps.token\n    const hasSqlChanged = this.props.sql !== prevProps.sql\n    if (hasTokenChanged || hasSqlChanged || hasSearchParamsChanged) {\n      this.executeInitialQueryRequest()\n    }\n  }\n\n  /**\n   * Pass down a deep clone (so no side affects on the child's part) of the\n   * last query request made\n   *\n   * @returns\n   * @memberof QueryWrapper\n   */\n  public getLastQueryRequest(): QueryBundleRequest {\n    return cloneDeep(this.state.queryRequest)\n  }\n\n  /**\n   * Grab the next page of data, pulling in 25 more rows.\n   *\n   * @param {*} queryRequest Query request as specified by\n   *                         https://docs.synapse.org/rest/org/sagebionetworks/repo/model/table/Query.html\n   * @memberof QueryWrapper\n   */\n  public async getNextPageOfData(queryRequest: QueryBundleRequest) {\n    this.setState({\n      isLoading: true,\n    })\n\n    await getNextPageOfData(\n      queryRequest,\n      this.state.data!,\n      this.props.token,\n    ).then(newState => {\n      this.setState({\n        ...newState,\n        isLoading: false,\n        queryRequest: cloneDeep(queryRequest),\n      })\n    })\n  }\n\n  /**\n   * Execute the initial query passed into the component\n   *\n   * @param {*} queryRequest Query request as specified by\n   *                         https://docs.synapse.org/rest/org/sagebionetworks/repo/model/table/Query.html\n   * @memberof QueryWrapper\n   */\n  public executeInitialQueryRequest() {\n    this.setState({\n      isLoading: true,\n    })\n\n    let sqlUsed = this.props.sql\n    if (this.props.searchParams) {\n      sqlUsed = insertConditionsFromSearchParams(\n        this.props.searchParams,\n        this.props.sql,\n        this.props.sqlOperator,\n      )\n    }\n    const entityId = parseEntityIdFromSqlStatement(sqlUsed)\n\n    // we don't set this in the state because it hardcodes the sql query, on componentDidUpdate\n    // we need the sql to change\n    const initQueryRequest: QueryBundleRequest = {\n      concreteType: 'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n      partMask:\n        SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS |\n        SynapseConstants.BUNDLE_MASK_QUERY_FACETS |\n        SynapseConstants.BUNDLE_MASK_QUERY_RESULTS |\n        SynapseConstants.BUNDLE_MASK_QUERY_COUNT,\n      entityId,\n      query: {\n        sql: sqlUsed,\n        limit: 25,\n        offset: 0,\n      },\n    }\n\n    SynapseClient.getQueryTableResults(initQueryRequest, this.props.token)\n      .then((data: QueryResultBundle) => {\n        const queryRequestWithoutCount = cloneDeep(initQueryRequest)\n        queryRequestWithoutCount.partMask =\n          SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS |\n          SynapseConstants.BUNDLE_MASK_QUERY_FACETS |\n          SynapseConstants.BUNDLE_MASK_QUERY_RESULTS\n\n        const hasMoreData =\n          data.queryResult.queryResults.rows.length ===\n          SynapseConstants.PAGE_SIZE\n        const newState = {\n          hasMoreData,\n          data,\n          queryRequest: queryRequestWithoutCount,\n          isLoading: false,\n          totalResultsNoFacet: data.queryCount!,\n        }\n        this.setState(newState)\n      })\n      .catch(err => {\n        console.log('Failed to get data ', err)\n      })\n  }\n\n  /**\n   * Render the children without any formatting\n   */\n  public render() {\n    // only forward the necessary props\n    const { sql, searchParams, token, ...rest } = this.props\n    return (\n      <CardContainer\n        {...rest}\n        data={this.state.data}\n        token={token}\n        getLastQueryRequest={this.getLastQueryRequest}\n        getNextPageOfData={this.getNextPageOfData}\n        hasMoreData={this.state.hasMoreData}\n        isLoading={this.state.isLoading}\n      />\n    )\n  }\n}\n","import * as React from 'react'\nimport CardContainerLogic, {\n  CardConfiguration,\n} from '../../../lib/containers/CardContainerLogic'\nimport { SynapseConstants } from '../../../lib'\nimport brainSvg from './icons/brain.svg'\nimport circleSvg from './icons/circle.svg'\nimport mouseSvg from './icons/mouse.svg'\nimport resilienceadSvg from './icons/resiliencead.svg'\n\ntype State = {\n  tabIndex: Number\n}\nexport const iconOptions = {\n  'AMP-AD': circleSvg,\n  'M2OVE-AD': brainSvg,\n  'MODEL-AD': mouseSvg,\n  'Resilience-AD': resilienceadSvg,\n}\n\nexport default class CardContainerLogicDemo extends React.Component<{}, State> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      tabIndex: 2,\n    }\n  }\n\n  render() {\n    const { tabIndex } = this.state\n    \n    const genericCardSchema: CardConfiguration = {\n      type: SynapseConstants.GENERIC_CARD,\n      genericCardSchema: {\n        type: SynapseConstants.DATASET,\n        title: 'portalDisplayName',\n        subTitle: 'centerName',\n        description: 'summary',\n        secondaryLabels: ['externalLink'],\n      },\n      labelLinkConfig: [\n        {\n          isMarkdown: true,\n          matchColumnName: 'externalLink',\n        },\n      ],\n    }\n    return (\n      <div>\n        <hr />\n        <p> Generic Card Rendering </p>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => this.setState({ tabIndex: 0 })}\n        >\n          Header Card\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => this.setState({ tabIndex: 1 })}\n        >\n          People Card\n        </button>\n        <button\n          className=\"btn btn-primary\"\n          onClick={() => this.setState({ tabIndex: 2 })}\n        >\n          Other Card\n        </button>\n        <div style={{ height: 50 }} />\n        {tabIndex === 0 && (\n          <CardContainerLogic\n            type={SynapseConstants.GENERIC_CARD}\n            sql={'SELECT * FROM syn17024173'}\n            searchParams={{ Program: 'AMP-AD' }}\n            genericCardSchema={{\n              type: 'Program',\n              title: 'Full Name',\n              subTitle: 'Short Description',\n              icon: 'Program',\n            }}\n            backgroundColor={'#5960a5'}\n            isHeader={true}\n            iconOptions={iconOptions}\n          />\n        )}\n        {tabIndex === 1 && (\n          <CardContainerLogic\n            type={SynapseConstants.MEDIUM_USER_CARD}\n            sql={'SELECT ownerID as ownerId FROM syn13897207'}            \n          />\n        )}\n        {tabIndex === 2 && (\n          <div className=\"container-fluid\">\n            <div className=\"row\">\n              <div className=\"col-md-10 col-md-offset-1\">\n                <CardContainerLogic\n                  sql={'SELECT * FROM syn18488466 group by externalLink'}\n                  unitDescription=\"studies\"\n                  {...genericCardSchema}\n                  secondaryLabelLimit={3}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n        <div style={{ height: 50 }} />\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\nimport { QueryWrapperChildProps } from './QueryWrapper'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {\n  faCaretDown,\n  faCaretUp,\n  faSearch,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { insertConditionsFromSearchParams } from '../utils/functions/sqlFunctions'\nimport TotalQueryResults from './TotalQueryResults'\nimport getColorPallette from './ColorGradient'\nimport { Dropdown } from 'react-bootstrap'\nimport { unCamelCase } from '../utils/functions/unCamelCase'\n\nexport const SEARCH_CLASS_CSS = 'SRC-search-component'\n\nlibrary.add(faCaretDown)\nlibrary.add(faCaretUp)\nlibrary.add(faSearch)\nlibrary.add(faTimes)\n\ntype SearchState = {\n  dropdownIndex: number\n  show: boolean\n  searchText: string\n  submittedSearchText: string\n  lastSearchedFacet: string\n}\nexport type Searchable = {\n  columnName: string\n  hintText: string\n}[]\n\nexport type SearchProps = {\n  searchable: Searchable\n  isQueryWrapperMenuChild?: boolean\n}\n\ntype InternalSearchProps = QueryWrapperChildProps & SearchProps\n\nclass Search extends React.Component<InternalSearchProps, SearchState> {\n  public inputRef: React.RefObject<HTMLInputElement>\n\n  constructor(props: InternalSearchProps) {\n    super(props)\n    this.state = {\n      dropdownIndex: 0,\n      show: false,\n      searchText: '',\n      submittedSearchText: '',\n      lastSearchedFacet: '',\n    }\n    this.inputRef = React.createRef()\n  }\n\n  componentDidUpdate(prevProps: InternalSearchProps) {\n    if (this.props.isLoading === false && prevProps.isLoading === true) {\n      // highlighting will sometimes outpace the render method for react, adding the slight delay\n      // mitigates this\n      setTimeout(this.highlightText, 100)\n    }\n  }\n\n  public toggleDropdown = (value: boolean) => (_: React.SyntheticEvent) => {\n    this.setState({\n      show: value,\n    })\n  }\n\n  public setDropdownIndex = (index: number) => (_: React.SyntheticEvent) => {\n    this.inputRef.current && this.inputRef.current.focus()\n    this.setState({\n      dropdownIndex: index,\n      show: false,\n    })\n  }\n\n  public highlightText = () => {\n    const { submittedSearchText, dropdownIndex } = this.state\n    const {\n      searchable,\n      rgbIndex,\n      facetAliases = {},\n      isQueryWrapperMenuChild = true,\n    } = this.props\n    const { colorPalette } = getColorPallette(rgbIndex!, 1)\n    const originalColor = colorPalette[0]\n    const searchItem = searchable[dropdownIndex]\n\n    const highlightedSpans = document.querySelectorAll<HTMLSpanElement>(\n      '.highlight',\n    )\n    highlightedSpans.forEach(span => {\n      span.outerHTML = span.innerText\n    })\n    if (submittedSearchText) {\n      const searchItemView =\n        facetAliases[searchItem.columnName] ||\n        unCamelCase(searchItem.columnName)\n      const frontText = isQueryWrapperMenuChild ? `.${SEARCH_CLASS_CSS} ` : ''\n      const querySelector = `${frontText}[data-search-handle=\"${searchItemView}\"]`\n      const trs = document.querySelectorAll<HTMLElement>(querySelector)\n      // Target elements and apply styles\n      trs.forEach(textElement => {\n        if (textElement.innerHTML !== null) {\n          const regex = new RegExp(submittedSearchText, 'gi')\n          const match = textElement.innerText.match(regex)\n          if (match) {\n            // innerHTML contains only text\n            textElement.innerHTML = textElement.innerHTML.replace(\n              regex,\n              match => {\n                return `<span style=\"background: ${originalColor}; color: white;\" class=\"highlight\">${match}</span>`\n              },\n            )\n          }\n        }\n      })\n    }\n  }\n\n  public static addEscapeCharacters = (searchText: string) => {\n    // We have to escape the following characters\n    // ' % \\\n    let escapedSearchText = searchText\n    // escape ' by adding additional '\n    escapedSearchText = escapedSearchText.split(\"'\").join(\"''\")\n    // escape % by adding \\\n    // eslint-disable-next-line no-useless-escape\n    escapedSearchText = escapedSearchText.split('%').join('%')\n    // escape \\ by adding \\\n    escapedSearchText = escapedSearchText.split('\\\\').join('\\\\\\\\')\n    return escapedSearchText\n  }\n\n  public clearSearchText = () => {\n    this.setState({\n      searchText: '',\n    })\n  }\n\n  public search = (event: React.SyntheticEvent<HTMLFormElement>) => {\n    // form completion by default causes the page to reload, so we prevent that\n    event.preventDefault()\n    const { searchText, dropdownIndex } = this.state\n\n    const { searchable } = this.props\n    const searchItem = searchable[dropdownIndex]\n    // Always grabs initQueryRequest so that it doesn't build a chain of\n    // LIKE clauses\n    const lastQueryRequestDeepCopy = this.props.getInitQueryRequest!()\n    const { sql } = lastQueryRequestDeepCopy.query\n    const searchParams = {\n      [searchItem.columnName]: Search.addEscapeCharacters(searchText),\n    }\n    const newSql = insertConditionsFromSearchParams(searchParams, sql)\n    lastQueryRequestDeepCopy.query.sql = newSql\n    lastQueryRequestDeepCopy.query.offset = 0\n    this.setState({\n      submittedSearchText: searchText,\n      lastSearchedFacet: searchItem.columnName,\n    })\n    this.props.executeQueryRequest!(lastQueryRequestDeepCopy)\n  }\n\n  public handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    this.setState({\n      searchText: event.currentTarget.value,\n    })\n  }\n\n  render() {\n    const {\n      searchable,\n      isLoading,\n      getLastQueryRequest,\n      unitDescription = '',\n      facetAliases = {},\n    } = this.props\n    const {\n      show,\n      dropdownIndex,\n      searchText,\n      submittedSearchText,\n      lastSearchedFacet,\n    } = this.state\n    const searchableItem = searchable[dropdownIndex]\n    const containerStyle: React.CSSProperties = {\n      border: '1px solid #DCDCDC',\n      display: 'flex',\n      marginTop: 10,\n      alignItems: 'center',\n    }\n    const fieldStyle: React.CSSProperties = {\n      background: '#F9F9F9',\n      height: '51px',\n      display: 'inline-flex',\n      alignItems: 'center',\n    }\n    const caretIconStyle: React.CSSProperties = {\n      fontSize: '16px',\n      marginRight: 8,\n    }\n    const searchIconStyle: React.CSSProperties = {\n      color: '#C4C4C4',\n      position: 'absolute',\n      left: 10,\n      fontSize: 16,\n    }\n    const cancelIconStyle: React.CSSProperties = {\n      width: 30,\n      height: 30,\n      position: 'absolute',\n      right: 10,\n    }\n    const inputStyle: React.CSSProperties = {\n      border: 1,\n      paddingLeft: 40,\n      height: 49,\n    }\n    const dropdownBtnStyle: React.CSSProperties = {\n      justifyContent: 'space-between',\n      margin: 0,\n      paddingLeft: 10,\n    }\n    const totalQueryResultsStyle: React.CSSProperties = {\n      margin: '20px 0px',\n    }\n    const curFacetDisplayText =\n      facetAliases[searchableItem.columnName] ||\n      unCamelCase(searchableItem.columnName)\n    const lastSearchedFacetDisplayText =\n      facetAliases[lastSearchedFacet] || unCamelCase(lastSearchedFacet)\n    const usedUnitDescription = submittedSearchText\n      ? `${unitDescription} containing \"${submittedSearchText}\" in ${lastSearchedFacetDisplayText}`\n      : unitDescription\n    return (\n      <div>\n        <p>\n          Search within <strong> {curFacetDisplayText} </strong> using keywords\n        </p>\n        <div style={containerStyle}>\n          <div className=\"SRC-centerContent SRC-fullWidth\">\n            <div\n              style={{\n                ...fieldStyle,\n                flex: 1,\n                borderRight: '1px solid #DCDCDC',\n              }}\n            >\n              <Dropdown\n                show={show}\n                onToggle={() => this.setState({ show: !show })}\n                className=\"SRC-inherit-height SRC-fullWidth\"\n              >\n                <Dropdown.Toggle\n                  style={dropdownBtnStyle}\n                  className=\"SRC-primary-color-hover-dropdown SRC-inlineFlex SRC-inherit-height SRC-fullWidth\"\n                  variant=\"light\"\n                  id=\"search-toggle\"\n                >\n                  {curFacetDisplayText}\n                  <FontAwesomeIcon\n                    style={caretIconStyle}\n                    icon={show ? 'caret-up' : 'caret-down'}\n                    color={show ? 'white' : undefined}\n                  />\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                  {searchable.map((el, index) => {\n                    const displayName =\n                      facetAliases[el.columnName] || unCamelCase(el.columnName)\n                    return (\n                      <Dropdown.Item\n                        // @ts-ignore\n                        onSelect={this.setDropdownIndex(index)}\n                        key={displayName}\n                        className=\"SRC-hand-cursor SRC-primary-background-color-hover\"\n                      >\n                        {displayName}\n                      </Dropdown.Item>\n                    )\n                  })}\n                </Dropdown.Menu>\n              </Dropdown>\n            </div>\n            <form\n              style={{\n                ...fieldStyle,\n                flex: 3,\n                alignItems: 'center',\n                position: 'relative',\n              }}\n              onSubmit={this.search}\n            >\n              <FontAwesomeIcon\n                size={'sm'}\n                style={searchIconStyle}\n                icon={'search'}\n              />\n              <input\n                placeholder={`e.g. \"${searchableItem.hintText}\"`}\n                style={inputStyle}\n                ref={this.inputRef}\n                onChange={this.handleChange}\n                value={searchText}\n                type=\"text\"\n                className=\"SRC-fullWidth\"\n              />\n              {searchText.length > 0 && (\n                <button\n                  type=\"reset\"\n                  className=\"SRC-button-focus-primary-color SRC-centerContentInline\"\n                  style={cancelIconStyle}\n                  onClick={this.clearSearchText}\n                  tabIndex={0}\n                >\n                  <FontAwesomeIcon\n                    size={'sm'}\n                    color={'#C4C4C4'}\n                    style={{ fontSize: 16 }}\n                    icon={'times'}\n                  />\n                </button>\n              )}\n            </form>\n          </div>\n        </div>\n        <TotalQueryResults\n          style={totalQueryResultsStyle}\n          isLoading={isLoading!}\n          frontText={'Displaying'}\n          token={this.props.token}\n          lastQueryRequest={getLastQueryRequest!()}\n          unitDescription={usedUnitDescription}\n        />\n      </div>\n    )\n  }\n}\n\nexport default Search\n","import * as React from 'react'\nimport QueryWrapper from 'lib/containers/QueryWrapper'\nimport Search, { Searchable } from 'lib/containers/Search'\nimport { SynapseConstants } from 'lib'\nimport { GenericCardSchema } from 'lib/containers/GenericCard'\nimport { CardConfiguration } from 'lib/containers/CardContainerLogic'\nimport CardContainer from 'lib/containers/CardContainer'\n\nexport const SearchDemo: React.SFC = () => {\n  const sql = 'SELECT * FROM syn20337467'\n  const facetAliases = {\n    contributor: 'Contributor',\n    diagnosis: 'Diagnosis',\n  }\n  const searchable: Searchable = [\n    {\n      columnName: 'summary',\n      hintText: 'summary',\n    },\n    {\n      columnName: 'contributor',\n      hintText: 'Jane',\n    },\n    {\n      columnName: 'diagnosis',\n      hintText: 'LOAD',\n    },\n    {\n      columnName: 'modelType',\n      hintText: 'hint',\n    },\n  ]\n  const genericCardSchema: GenericCardSchema = {\n    title: 'Title',\n    type: 'Generic Tool',\n    subTitle: 'softwareType',\n    description: 'summary',\n    icon: 'icon',\n    secondaryLabels: ['contributor', 'diagnosis', 'program'],\n  }\n  const cardConfiguration: CardConfiguration = {\n    type: SynapseConstants.GENERIC_CARD,\n    genericCardSchema,\n  }\n  return (\n    <div className=\"col-xs-8 col-xs-offset-2\">\n      <QueryWrapper\n        facetAliases={facetAliases}\n        rgbIndex={5}\n        initQueryRequest={{\n          entityId: 'syn20337467',\n          concreteType:\n            'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n          partMask:\n            SynapseConstants.BUNDLE_MASK_QUERY_COLUMN_MODELS |\n            SynapseConstants.BUNDLE_MASK_QUERY_FACETS |\n            SynapseConstants.BUNDLE_MASK_QUERY_SELECT_COLUMNS |\n            SynapseConstants.BUNDLE_MASK_QUERY_COUNT |\n            SynapseConstants.BUNDLE_MASK_QUERY_RESULTS,\n          query: {\n            sql,\n            limit: 25,\n            offset: 0,\n          },\n        }}\n        showBarChart={false}\n        unitDescription={'studies'}\n      >\n        <Search searchable={searchable} isQueryWrapperMenuChild={false} />\n        <CardContainer {...cardConfiguration} />\n      </QueryWrapper>\n    </div>\n  )\n}\n\nexport default SearchDemo\n","import * as React from 'react'\nimport ModalDownload from '../../../lib/containers/ModalDownload'\n\ntype State = {\n  showModal: boolean\n}\n\nclass ModalDownloadDemo extends React.Component<{}, State> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      showModal: false,\n    }\n  }\n\n  onClose = () => {\n    this.setState({\n      showModal: false,\n    })\n  }\n\n  onOpen = () => {\n    console.log('opening')\n    this.setState({\n      showModal: true,\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <button onClick={this.onOpen} className=\"btn btn-primary\">\n          {' '}\n          Show ModalDownload{' '}\n        </button>\n        {this.state.showModal && (\n          <ModalDownload\n            queryBundleRequest={{\n              concreteType:\n                'org.sagebionetworks.repo.model.table.QueryBundleRequest',\n              entityId: '',\n              // @ts-ignore\n              partMask: undefined,\n              query: {\n                sql: 'SELECT * from syn17328596',\n              },\n            }}\n            onClose={this.onClose}\n          />\n        )}\n      </div>\n    )\n  }\n}\n\nexport default ModalDownloadDemo\n","import React from 'react'\nimport ShowDownload from '../../../lib/containers/download_list/ShowDownload'\n\nconst ShowDownloadDemo = ({ token }: { token: string | undefined }) => {\n  if (!token) {\n    return <p> You need to sign in to for ShowDownload to render </p>\n  }\n  return (\n    <div>\n      <ShowDownload token={token} />\n    </div>\n  )\n}\nexport default ShowDownloadDemo\n","import { SynapseClient } from 'lib'\nimport {\n  FileUploadComplete,\n  FormData,\n  FormGroup,\n  ListRequest,\n  ListResponse,\n  StatusEnum,\n} from 'lib/utils/synapseTypes/'\nimport * as React from 'react'\nimport { TokenContext } from '../App'\n\ntype FormServicesIntegrationDemoState = {\n  token?: string\n  formGroup?: FormGroup\n  formData?: FormData\n  myFormDataList?: ListResponse\n  formAdminFormDataList?: ListResponse\n}\n\nclass FormServicesIntegrationDemo extends React.Component<\n  {},\n  FormServicesIntegrationDemoState\n> {\n  constructor(props: any) {\n    super(props)\n    this.state = {}\n    this.onCreateFormGroup = this.onCreateFormGroup.bind(this)\n    this.onCreateFormData = this.onCreateFormData.bind(this)\n    this.onUpdateFormData = this.onUpdateFormData.bind(this)\n    this.onSubmitFormData = this.onSubmitFormData.bind(this)\n    this.listMyFormData = this.listMyFormData.bind(this)\n    this.listFormAdminFormData = this.listFormAdminFormData.bind(this)\n    this.onReadFormDataFileHandleContents = this.onReadFormDataFileHandleContents.bind(\n      this,\n    )\n  }\n\n  public onCreateFormGroup(): void {\n    SynapseClient.createFormGroup(\n      'AAMP-ADExternalContribution(production)',\n      this.state.token!,\n    )\n      .then((data: FormGroup) => {\n        console.log('Successfully created FormGroup', data)\n        this.setState({ formGroup: data })\n      })\n      .catch((error: any) =>\n        console.error('Failed to create form group', error),\n      )\n  }\n  public onUpdateFormData(): void {\n    SynapseClient.uploadFile(\n      this.state.token,\n      'my test file',\n      new Blob(['hello form data 2']),\n    )\n      .then((fileUploadComplete: FileUploadComplete) => {\n        console.log(\n          'Successfully created test file handle, now update the form data!',\n        )\n        SynapseClient.updateFormData(\n          this.state.formData!.formDataId!,\n          'my test form data',\n          fileUploadComplete.fileHandleId,\n          this.state.token!,\n        )\n          .then((data: FormData) => {\n            console.log('Successfully updated FormData', data)\n            this.setState({ formData: data })\n          })\n          .catch((error: any) =>\n            console.error('Failed to update FormData', error),\n          )\n      })\n      .catch((error: any) =>\n        console.error('Failed to update a new file handle:', error),\n      )\n  }\n\n  public onCreateFormData(): void {\n    SynapseClient.uploadFile(\n      this.state.token,\n      'my test file',\n      new Blob(['hello form data']),\n    )\n      .then((fileUploadComplete: FileUploadComplete) => {\n        console.log(\n          'Successfully created test file handle, now create the form data!',\n        )\n        SynapseClient.createFormData(\n          this.state.formGroup!.groupId!,\n          'my test form data',\n          fileUploadComplete.fileHandleId,\n          this.state.token!,\n        )\n          .then((data: FormData) => {\n            console.log('Successfully created FormData', data)\n            this.setState({ formData: data })\n          })\n          .catch((error: any) =>\n            console.error('Failed to create FormData', error),\n          )\n      })\n      .catch((error: any) =>\n        console.error('Failed to create a new file handle:', error),\n      )\n  }\n\n  public onSubmitFormData(): void {\n    SynapseClient.submitFormData(\n      this.state.formData!.formDataId!,\n      this.state.token!,\n    )\n      .then((data: FormData) => {\n        console.log('Successfully submitted FormData', data)\n      })\n      .catch((error: any) => console.error('Failed to submit form data', error))\n  }\n\n  private listMyFormData = () => {\n    if (\n      this.state.token &&\n      this.state.formGroup &&\n      !this.state.myFormDataList\n    ) {\n      let request: ListRequest = {\n        groupId: this.state.formGroup.groupId!,\n        filterByState: [\n          StatusEnum.ACCEPTED,\n          StatusEnum.SUBMITTED_WAITING_FOR_REVIEW,\n          StatusEnum.WAITING_FOR_SUBMISSION,\n        ],\n      }\n      SynapseClient.listFormData(request, this.state.token)\n        .then((resp: ListResponse) => {\n          console.log('Successfully got a my FormData list', resp)\n          this.setState({ myFormDataList: resp })\n        })\n        .catch((error: any) =>\n          console.error('Failed to get my FormData list', error),\n        )\n    }\n  }\n\n  private listFormAdminFormData = () => {\n    if (\n      this.state.token &&\n      this.state.formGroup &&\n      !this.state.formAdminFormDataList\n    ) {\n      let request: ListRequest = {\n        groupId: this.state.formGroup.groupId!,\n        filterByState: [\n          StatusEnum.ACCEPTED,\n          StatusEnum.SUBMITTED_WAITING_FOR_REVIEW,\n        ],\n      }\n      SynapseClient.listFormDataAsFormAdmin(request, this.state.token)\n        .then((resp: ListResponse) => {\n          console.log('Successfully got FormGroup admin list', resp)\n          this.setState({ formAdminFormDataList: resp })\n        })\n        .catch((error: any) =>\n          console.error('Failed to get FormGroup admin FormData list', error),\n        )\n    }\n  }\n\n  private onReadFormDataFileHandleContents = () => {\n    SynapseClient.getFileHandleContentFromID(\n      this.state.formData!.dataFileHandleId,\n      this.state.token!,\n    )\n      .then((data: string) => {\n        console.log('Successfully fetched file handle contents: ', data)\n      })\n      .catch((error: any) =>\n        console.error('Failed to read form data file handle contents', error),\n      )\n  }\n\n  public componentDidUpdate() {\n    this.listMyFormData()\n    this.listFormAdminFormData()\n  }\n\n  render() {\n    return (\n      <TokenContext.Consumer>\n        {(token: string) => {\n          if (token !== this.state.token) {\n            this.setState({\n              token,\n            })\n          }\n          if (token) {\n            return (\n              <>\n                <div>\n                  <a onClick={this.onCreateFormGroup}>\n                    Create Form Group\n                    <br />\n                  </a>\n                  {!this.state.formData && (\n                    <a onClick={this.onCreateFormData}>\n                      Create Form Data\n                      <br />\n                    </a>\n                  )}\n                  {this.state.formData && (\n                    <a onClick={this.onReadFormDataFileHandleContents}>\n                      Get Form Data FileHandle contents\n                      <br />\n                    </a>\n                  )}\n\n                  {this.state.formData && (\n                    <a onClick={this.onUpdateFormData}>\n                      Update Form Data\n                      <br />\n                    </a>\n                  )}\n                  {this.state.formData && (\n                    <a onClick={this.onSubmitFormData}>\n                      Submit Form Data\n                      <br />\n                    </a>\n                  )}\n                </div>\n                {<h3>My FormData</h3>}\n                {this.state.myFormDataList && (\n                  <table>\n                    <thead>\n                      <tr>\n                        <th>Form Data name</th>\n                        <th>Data File Handle ID</th>\n                        <th>Status</th>\n                        <th>Rejection Reason</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.myFormDataList.page.map(value => {\n                        return (\n                          <tr key={value.formDataId}>\n                            <td>{value.name}</td>\n                            <td>{value.dataFileHandleId}</td>\n                            <td>{value.submissionStatus.state}</td>\n                            <td>{value.submissionStatus.rejectionMessage}</td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </table>\n                )}\n                {<h3>FormGroup Admin FormData</h3>}\n                {this.state.formAdminFormDataList && (\n                  <table>\n                    <thead>\n                      <tr>\n                        <th>Form Data name</th>\n                        <th>Data File Handle ID</th>\n                        <th>Status</th>\n                        <th>Rejection Reason</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.formAdminFormDataList.page.map(value => {\n                        return (\n                          <tr key={value.formDataId}>\n                            <td>{value.name}</td>\n                            <td>{value.dataFileHandleId}</td>\n                            <td>{value.submissionStatus.state}</td>\n                            <td>{value.submissionStatus.rejectionMessage}</td>\n                          </tr>\n                        )\n                      })}\n                    </tbody>\n                  </table>\n                )}\n              </>\n            )\n          } else\n            return (\n              <>\n                <p>Please log in and reload this route</p>\n              </>\n            )\n        }}\n      </TokenContext.Consumer>\n    )\n  }\n}\n\nexport default FormServicesIntegrationDemo\n","import * as React from 'react'\nimport { Checkbox } from '../../../lib/containers/widgets/Checkbox'\nimport { RadioGroup } from '../../../lib/containers/widgets/RadioGroup'\nimport ThemesPlot from '../../../lib/containers/widgets/themes-plot/ThemesPlot'\nimport {\n  PlotProps,\n  ClickCallbackParams,\n} from '../../../lib/containers/widgets/themes-plot/types'\nimport { Range, RangeValues } from '../../../lib/containers/widgets/Range'\nimport { RangeSlider } from '../../../lib/containers/widgets/RangeSlider'\nimport { useState } from 'react'\n\ntype WigetDemoPros = {\n  token: string\n}\n\nexport const WidgetDemo: React.FunctionComponent<WigetDemoPros> = (\n  props: WigetDemoPros,\n) => {\n  const options = [\n    { label: 'option 1', value: 'option1' },\n    { label: 'option 2', value: 'option2' },\n    { label: 'option 3', value: 'option3' },\n  ]\n  const [check1, setCheck1] = useState(true)\n  const [check2, setCheck2] = useState(false)\n  const [optionValue, setOptionValue] = useState('option2')\n  const [rangeNumberValue, setRangeNumberValue] = useState(() => {\n    const result: RangeValues = {\n      min: '10.5',\n      max: '30',\n    }\n    return result\n  })\n  const [rangeDateValue, setRangeDateValue] = useState(() => {\n    const result: RangeValues = {\n      min: new Date(2019, 5, 10).toISOString(),\n      max: new Date(2019, 6, 11).toISOString(),\n    }\n    return result\n  })\n\n  const [rangeSliderValue, setRangeSliderValue] = useState({\n    min: '10',\n    max: '25',\n  })\n\n  const topBarPlotProps: PlotProps = {\n    entityId: 'syn21641485',\n    xField: 'totalCount',\n    yField: 'groupBy',\n    groupField: 'consortium',\n    whereClause: 'totalCount is not NULL',\n    colors: {\n      CSBC: 'rgba(64,123,160, 1)',\n      'PS-ON': 'rgba(91,176,181,1)',\n    },\n  }\n\n  const sideBarPlotProps: PlotProps = {\n    entityId: 'syn21649281',\n    xField: 'totalCount',\n    yField: 'theme',\n    groupField: 'consortium',\n    countLabel: 'projects',\n    plotStyle: {\n      backgroundColor: '#f5f9fa',\n    },\n    colors: {\n      CSBC: '#4788A5',\n      'PS-ON': '#5bb0b5',\n    },\n  }\n\n  const dotPlotProps: PlotProps = {\n    entityId: 'syn21639584',\n    xField: 'totalCount',\n    yField: 'theme',\n    groupField: 'groupBy',\n    infoField: 'themeDescription',\n    whereClause: \"groupBy IN ('publications', 'tools', 'datasets')\",\n    markerSymbols: {\n      tools: 'y-down',\n      datasets: 'diamond-x',\n      publications: 'circle',\n    },\n    plotStyle: {\n      markerLine: 'rgba(0, 0, 0,1)',\n      markerFill: 'rgba(255, 255, 255,1)',\n      markerSize: 11,\n      backgroundColor: '#f5f9fa',\n    },\n  }\n\n  const plotCallback = ({ facetValue, type }: ClickCallbackParams) => {\n    alert(`facetValue: ${facetValue} type: ${type}`)\n  }\n\n  return (\n    <div className=\"container\">\n      <div style={{ fontWeight: 'bold' }}></div>\n      <h4 style={{ marginTop: '20px' }}>Checkbox</h4>\n      Checkbox 1 is {check1 ? 'checked' : 'unchecked'}\n      <br />\n      Checkbox 2 is {check2 ? 'checked' : 'unchecked'}\n      <br />\n      <Checkbox\n        label=\"Initially Checked Checkbox\"\n        id=\"ch1\"\n        checked={true}\n        onChange={(checked: boolean) => setCheck1(checked)}\n      ></Checkbox>\n      <Checkbox\n        label=\"Initially Unchecked Checkbox\"\n        id=\"ch2\"\n        onChange={(checked: boolean) => setCheck2(checked)}\n      ></Checkbox>\n      <hr></hr>\n      <h4 style={{ marginTop: '20px' }}>Radio</h4>\n      Option Value is: {optionValue}\n      <br />\n      <RadioGroup\n        id=\"radioGroup1\"\n        options={options}\n        value={optionValue}\n        onChange={(value: string) => setOptionValue(value)}\n      ></RadioGroup>\n      <hr></hr>\n      <h4 style={{ marginTop: '20px' }}>Number Range</h4>\n      Number Range Value is:\n      {` ${rangeNumberValue.min} - ${rangeNumberValue.max}`}\n      <br />\n      <Range\n        type=\"number\"\n        initialValues={{ min: rangeNumberValue.min, max: rangeNumberValue.max }}\n        onChange={(values: RangeValues) => setRangeNumberValue(values)}\n      ></Range>\n      <hr></hr>\n      <h4>Date Range</h4>\n      Number Date Value is: {rangeDateValue.min} - {rangeDateValue.max}\n      <br />\n      <Range\n        type=\"date\"\n        initialValues={{ min: rangeDateValue.min, max: rangeDateValue.max }}\n        onChange={(values: RangeValues) => setRangeDateValue(values)}\n      ></Range>\n      <hr></hr>\n      <h4>Range Slider</h4>\n      Range Slider Value is: {rangeSliderValue.min} - {rangeSliderValue.max}\n      <br />\n      <RangeSlider\n        initialValues={rangeSliderValue}\n        onChange={(values: { min: string; max: string }) =>\n          setRangeSliderValue(values)\n        }\n        domain={['0', '100']}\n        step={1}\n      ></RangeSlider>\n      <ThemesPlot\n        token={props.token}\n        onPointClick={plotCallback}\n        topBarPlot={topBarPlotProps}\n        sideBarPlot={sideBarPlotProps}\n        dotPlot={dotPlotProps}\n      ></ThemesPlot>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport AccessRequirementList from 'lib/containers/access_requirement_list/AccessRequirementList'\n\ntype AccessRequirementDemoProps = {\n  token: string\n}\n\nexport const AccessRequirementDemo: React.FunctionComponent<AccessRequirementDemoProps> = props => {\n  const { token } = props\n  const [\n    displayAccessRequirement,\n    setDisplayAccessRequirement,\n  ] = React.useState<boolean>(false)\n  const currentWindowLocation = window.location.href\n  const [inputValue, setInputValue] = React.useState<string>('')\n\n  const getAccessRequirement = () => {\n    if (inputValue !== '' && inputValue.startsWith('syn')) {\n      setDisplayAccessRequirement(!displayAccessRequirement)\n    }\n  }\n\n  return (\n    <div>\n      {displayAccessRequirement ? (\n        <AccessRequirementList\n          onHide={() => {\n            window.location.href = currentWindowLocation\n            setDisplayAccessRequirement(false)\n          }}\n          entityId={inputValue}\n          token={token}\n        />\n      ) : (\n        <>\n          <p>SynId for Self Sign Access: syn3850484</p>\n          <p>SynId for Terms Of Use: syn2426398</p>\n          <p>SynId for Managed ACT Access: syn3191087</p>\n          <p>SynId for ACT Access: syn12634840</p>\n\n          <input\n            id=\"AccessRequirementInput\"\n            type=\"text\"\n            placeholder=\"Synapse Id\"\n            onChange={event => {\n              setInputValue(event.target.value)\n            }}\n          ></input>\n          <button\n            className=\"get-access-requirement-button\"\n            onClick={getAccessRequirement}\n          >\n            Get Access Requirement\n          </button>\n        </>\n      )}\n    </div>\n  )\n}\n","import React, { useState } from 'react'\n\ntype Props = {\n  userId: string\n}\n\nexport default function TemplateComponent({ userId }: Props) {\n  const [count, setCount] = useState<number>(0)\n\n  return (\n    <div>\n      <button\n        style={{ backgroundColor: 'blue', color: 'white' }}\n        onClick={() => setCount(count + 1)}\n      >\n        Click to increment count!\n      </button>\n      <p> Count = {count} </p>\n\n      <p> Passed in userId = {userId} </p>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport TemplateComponent from '../../../lib/containers/TemplateComponent'\n\nexport default function TemplateComponentDemo() {\n  /*\n    Setup component with props for various scenarios\n  */\n  return <TemplateComponent userId={'1234'} />\n}\n","import * as React from 'react'\nimport SynapsePlot from 'lib/containers/widgets/SynapsePlot'\n\ntype SynapsePlotDemoProps = {\n  token: string\n}\n\nexport const SynapsePlotDemo: React.FunctionComponent<SynapsePlotDemoProps> = ({token}) => {\n  return (\n    <SynapsePlot\n      token={token}\n      widgetparamsMapped={{\n        query:'SELECT \\'date\\', survey_1, survey_2, survey_3, survey_4 FROM syn22314856',\n        title:'New Participants Per Survey Per Day',\n        xtitle:'Date',\n        ytitle: 'Count',\n        type: 'scatter',\n        horizontal: 'true',\n        // xaxistype:,\n        showlegend:'true'\n      }\n      }      \n    />\n  )\n}","import * as React from 'react'\nimport { Button } from 'react-bootstrap'\nimport homepage_1 from '../../../images/homepage_1.png'\nimport organizeResearch from '../../../images/organizeResearch.svg'\nimport getCredit from '../../../images/getCredit.svg'\nimport collaborate from '../../../images/collaborate.svg'\nimport dataSharing from '../../../images/dataSharing.svg'\nimport rImage from '../../../images/rClient.svg'\nimport python from '../../../images/python.svg'\nimport terminal from '../../../images/terminal.svg'\nimport java from '../../../images/java.svg'\nimport ProjectViewCarousel from '../../../lib/containers/home_page/project_view_carousel/ProjectViewCarousel'\n\nexport const SynapseHomepage: React.FunctionComponent = () => {\n  return (\n    <div className=\"bootstrap-4-backport SynapseHomepage\">\n      <div className=\"SynapseHomepage__Section PrimaryBackground\">\n        <div className=\"HeroContainer\">\n          <div className=\"Headline\">\n            <div>\n              <span className=\"Headline-Strong\">Organize</span>\n              <span className=\"Headline-Light\">\n                {' '}\n                your digital research assets.\n              </span>\n            </div>\n            <div>\n              <span className=\"Headline-Strong\">Get credit</span>\n              <span className=\"Headline-Light\"> for your research.</span>\n            </div>\n            <div>\n              <span className=\"Headline-Strong\">Collaborate</span>\n              <span className=\"Headline-Light\">\n                {' '}\n                with your colleagues and the public.\n              </span>\n            </div>\n          </div>\n          <img src={homepage_1} alt=\"\" className=\"HeroImage\" />\n          <div className=\"SignUpButtonContainer\">\n            <Button variant=\"light\">Log in to Synapse</Button>\n            <Button variant=\"primary-900\">Register Now</Button>\n          </div>\n        </div>\n      </div>\n      <div className=\"SynapseHomepage__Section WhiteBackground\">\n        <div className=\"FlexContainerReverse\" style={{}}>\n          <img src={organizeResearch} className=\"SectionGraphic\" alt=\"\"></img>\n          <div className=\"SectionTextFlexContainer\">\n            <h2>Organize Your Digital Research Assets</h2>\n            <div>\n              <h3>Access Your Data Anywhere</h3>\n              <p className=\"SectionBody\">\n                Synapse provides APIs to store or access your data from the web\n                or programmatically via one of our supported analytical clients\n                (<a>R</a>, <a>Python</a>, <a>Command Line</a>).\n              </p>\n            </div>\n            <div>\n              <h3>Query Structured Data</h3>\n              <p className=\"SectionBody\">\n                Use Synapse Tables to query structured data right from your web\n                browser, or from any analytical client.\n              </p>\n            </div>\n            <Button variant=\"primary\">Get Started Now</Button>\n          </div>\n        </div>\n      </div>\n      <div className=\"SynapseHomepage__Section OffWhiteBackground\">\n        <div className=\"FlexContainer\">\n          <img src={getCredit} className=\"SectionGraphic\" alt=\"\"></img>\n          <div className=\"SectionTextFlexContainer\">\n            <h2>Get Credit For Your Research</h2>\n            <div>\n              <h3>Record Provenance</h3>\n              <p className=\"SectionBody\">\n                Synapse provides tools to record and display provenance of your\n                analysis - giving you credit for each step of the work you do!\n              </p>\n            </div>\n            <div>\n              <h3>Mint a DOI</h3>\n              <p className=\"SectionBody\">\n                A digital object identifier (DOI) provides provides a persistent\n                and easy way to reference your digital assets in publications -\n                including data, code, or analysis results.\n              </p>\n            </div>\n            <Button variant=\"primary\">Get Started Now</Button>\n          </div>\n        </div>\n      </div>\n      <div className=\"SynapseHomepage__Section WhiteBackground\">\n        <div className=\"FlexContainerReverse\">\n          <img className=\"SectionGraphic\" src={collaborate} alt=\"\"></img>\n          <div className=\"SectionTextFlexContainer\">\n            <h2>Collaborate</h2>\n            <div>\n              <h3>Communicate Your Findings</h3>\n              <p className=\"SectionBody\">\n                Use the Synapse Wiki services to communicate your Project&apos;s\n                research findings by embedding rich content such as images,\n                Tables, Provenance, and even LaTeX equations.\n              </p>\n            </div>\n            <div>\n              <h3>Share Your Research</h3>\n              <p className=\"SectionBody\">\n                New Synapse Projects are private by default - share with your\n                colleagues, collaborators, and even make your work public!\n                Create Synapse Teams to manage your collaborations.\n              </p>\n            </div>\n            <Button variant=\"primary\">Get Started Now</Button>\n          </div>\n        </div>\n      </div>\n      <div className=\"SynapseHomepage__Section OffWhiteBackground\">\n        <div className=\"FlexContainer\">\n          <img src={dataSharing} className=\"SectionGraphic\" alt=\"\"></img>\n          <div className=\"SectionTextFlexContainer\">\n            <h2>Our Data Sharing Principles</h2>\n            <div>\n              <p className=\"SectionBody\">\n                Synapse operates under a complete governance process that\n                includes well-documented Terms and Conditions of Use, guidelines\n                and operating procedures, privacy enhancing technologies, as\n                well as the right of audit and external reviews.{' '}\n              </p>\n            </div>\n            <Button variant=\"primary\">Learn More About Data Sharing</Button>\n          </div>\n        </div>\n      </div>{' '}\n      <div className=\"SynapseHomepage__Section WhiteBackground\">\n        <div className=\"FlexContainerReverse\">\n          {/* TODO: don't use space-between */}\n          <div className=\"ClientFlexContainer SectionGraphic\">\n            <div className=\"ClientFlexItem\">\n              <img src={rImage}></img>\n              <span>R Client</span>\n            </div>\n            <div className=\"ClientFlexItem\">\n              <img src={python}></img>\n              <span>Python Client</span>\n            </div>\n            <div className=\"ClientFlexItem\">\n              <img src={terminal}></img>\n              <span>Command Line Client</span>\n            </div>\n            <div className=\"ClientFlexItem\">\n              <img src={java}></img>\n              <span>Java Client</span>\n            </div>\n          </div>\n          <div className=\"SectionTextFlexContainer\">\n            <h2>Synapse Easily Integrates Into Your Workflow</h2>\n            <div>\n              <p className=\"SectionBody\">\n                Create projects, upload &amp; download files, generate\n                provenance, query, create wikis and more all from the comfort of\n                your own code.\n              </p>\n            </div>\n            <Button variant=\"primary\">Learn More about REST API</Button>\n          </div>\n        </div>{' '}\n      </div>{' '}\n      <div className=\"SynapseHomepage__Section OffWhiteBackground\">\n        <div className=\"SynapseHomepage__Section__Centered\">\n          <h2>Synapse In Action</h2>\n          <ProjectViewCarousel entityId={'syn23567477'} />\n        </div>\n      </div>{' '}\n      <div className=\"SynapseHomepage__Section WhiteBackground\">\n        <div className=\"SynapseHomepage__Section__Centered\">\n          <h2>Our Partners</h2>\n          <div className=\"PartnerFlexContainer\">\n            <div className=\"PartnerFlexItem\">\n              <a href=\"http://www.nhlbi.nih.gov/\" target=\"_new\">\n                <img\n                  src=\"https://s3.amazonaws.com/static.synapse.org/images/nih-heart.svg\"\n                  width={'186px'}\n                />\n              </a>\n            </div>\n            <div className=\"PartnerFlexItem\">\n              <a href=\"http://www.nimh.nih.gov/\" target=\"_new\">\n                <img\n                  src={\n                    'https://s3.amazonaws.com/static.synapse.org/images/nih-mental.png'\n                  }\n                  width=\"141px\"\n                />\n              </a>\n            </div>\n            <div className=\"PartnerFlexItem\">\n              <a href=\"http://www.sloan.org/\" target=\"_new\">\n                <img\n                  src=\"https://s3.amazonaws.com/static.synapse.org/images/sloan.svg\"\n                  width={'186px'}\n                />\n              </a>\n            </div>\n            <div className=\"PartnerFlexItem\">\n              <a href=\"http://www.nia.nih.gov/\" target=\"_new\">\n                <img\n                  src=\"https://s3.amazonaws.com/static.synapse.org/images/nih-aging.svg\"\n                  width={'186px'}\n                />\n              </a>\n            </div>\n            <div className=\"PartnerFlexItem\">\n              <a href=\"http://www.lsdfa.org/\" target=\"_new\">\n                <img\n                  src=\"https://s3.amazonaws.com/static.synapse.org/images/life-sciences.svg\"\n                  width={'186px'}\n                />\n              </a>\n            </div>\n            <div className=\"PartnerFlexItem\">\n              <a href=\"http://www.ctf.org/\" target=\"_new\">\n                <img\n                  src=\"https://s3.amazonaws.com/static.synapse.org/images/ctf.svg\"\n                  width={'186px'}\n                />\n              </a>\n            </div>\n            <div className=\"PartnerFlexItem\">\n              <a href=\"http://www.n-tap.org/\" target=\"_new\">\n                <img\n                  src=\"https://s3.amazonaws.com/static.synapse.org/images/ntap.png\"\n                  width=\"113px\"\n                />\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"SynapseHomepage__Section PrimaryBackground\">\n        <div className=\"SynapseHomepage__Section__Centered\">\n          <div\n            style={{\n              margin: 'auto',\n              maxWidth: '1400px',\n              display: 'flex',\n              flexDirection: 'column',\n            }}\n          >\n            <h2 style={{ color: '#fff' }}>Sign up for Synapse today</h2>\n            <div className=\"SignUpButtonContainer\" style={{ margin: 'auto' }}>\n              <Button variant=\"light\">Log in to Synapse</Button>\n              <Button variant=\"primary-900\">Register Now</Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { Link, Route } from 'react-router-dom'\nimport CardContainerLogicDemo from './CardContainerLogicDemo'\nimport SearchDemo from './SearchDemo'\nimport ModalDownloadDemo from './ModalDownloadDemo'\nimport ShowDownloadDemo from './ShowDownloadDemo'\nimport FormServicesIntegrationDemo from './FormServicesIntegrationDemo'\nimport DownloadListTable from 'lib/containers/download_list/DownloadListTable'\nimport { WidgetDemo } from './WidgetDemo'\nimport { RouteChildrenProps } from 'react-router'\nimport { AccessRequirementDemo } from './AccessRequirementDemo'\nimport TemplateComponentDemo from './TemplateComponentDemo'\nimport Resources from 'lib/containers/home_page/resources/Resources'\nimport { SynapsePlotDemo } from './SynapsePlotDemo'\nimport { ExternalFileHandleLink } from 'lib/containers/ExternalFileHandleLink'\nimport { SynapseHomepage } from './SynapseHomepage'\n\n/**\n * Demo of features that can be used from src/demo/utils/SynapseClient\n * module\n */\nconst App = ({\n  match,\n  token,\n}: {\n  match?: RouteChildrenProps['match']\n  token: string\n}) => {\n  if (!match) {\n    return <div />\n  }\n  return (\n    <div>\n      <h2>Links to components under development </h2>\n      <ul>\n        <li>\n          <Link to={`${match.url}/SynapseHomepage`}>Synapse Homepage Demo</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/SearchDemo`}>SearchDemo</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/CardContainerLogicDemo`}>\n            CardContainerLogicDemo\n          </Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/FormServicesIntegrationDemo`}>\n            FormServicesIntegrationDemo\n          </Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/ModalDownloadDemo`}>ModalDownload</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/DownloadListTableDemo`}>\n            DownloadListTableDemo\n          </Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/WidgetDemo`}>WidgetDemo</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/AccessRequirementDemo`}>\n            AccessRequirementDemo\n          </Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/TemplateComponentDemo`}>\n            TemplateComponentDemo\n          </Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/ShowDownloadDemo`}>ShowDownloadDemo</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/SynapsePlotDemo`}>SynapsePlotDemo</Link>\n        </li>\n        <li>\n          <Link to={`${match.url}/ExternalFileHandleLink`}>\n            ExternalFileHandleLink\n          </Link>\n        </li>\n      </ul>\n      <Route\n        exact={true}\n        path={`${match.url}/SynapseHomepage`}\n        render={() => <SynapseHomepage />}\n      />\n\n      <Route\n        exact={true}\n        path={`${match.url}/SearchDemo`}\n        render={() => <SearchDemo />}\n      />\n\n      <Route\n        exact={true}\n        path={`${match.url}/CardContainerLogicDemo`}\n        component={CardContainerLogicDemo}\n      />\n\n      <Route\n        exact={true}\n        path={`${match.url}/FormServicesIntegrationDemo`}\n        component={() => <FormServicesIntegrationDemo />}\n      />\n      <Route\n        exact={true}\n        path={`${match.url}/ModalDownloadDemo`}\n        component={() => <ModalDownloadDemo />}\n      />\n\n      <Route\n        exact={true}\n        path={`${match.url}/DownloadListTableDemo`}\n        component={() => (\n          <div className=\"container download-list-demo\">\n            <div className=\"col-xs-10\">\n              <DownloadListTable\n                token={token}\n                listUpdatedCallback={() => {\n                  console.log('DownloadList updated')\n                }}\n              />\n            </div>\n          </div>\n        )}\n      />\n\n      <Route\n        exact={true}\n        path={`${match.url}/WidgetDemo`}\n        component={() => <WidgetDemo token={token} />}\n      />\n\n      <Route\n        exact={true}\n        path={`${match.url}/AccessRequirementDemo`}\n        component={() => <AccessRequirementDemo token={token} />}\n      />\n\n      <Route\n        exact={true}\n        path={`${match.url}/TemplateComponentDemo`}\n        component={() => <TemplateComponentDemo />}\n      />\n\n      <Route\n        exact={true}\n        path={`${match.url}/ShowDownloadDemo`}\n        component={() => <ShowDownloadDemo token={token} />}\n      />\n\n      <Route\n        exact={true}\n        path={`${match.url}/SynapsePlotDemo`}\n        component={() => <SynapsePlotDemo token={token} />}\n      />\n\n      <Route\n        exact={true}\n        path={`${match.url}/ResourcesDemo`}\n        component={() => (\n          <div className=\"container\">\n            {' '}\n            <Resources entityId=\"syn22311127\" token={token} />{' '}\n          </div>\n        )}\n      />\n\n      <Route\n        exact={true}\n        path={`${match.url}/ExternalFileHandleLink`}\n        component={() => (\n          <ExternalFileHandleLink synId={'syn22276050'} token={token} />\n        )}\n      />\n\n      <Route exact={true} path={match.path} component={() => <div />} />\n    </div>\n  )\n}\n\nexport default App\n","import * as React from 'react'\nimport { Link, BrowserRouter as Router, Route } from 'react-router-dom'\nimport Login from '../../lib/containers/Login'\nimport logoSvg from '../../images/logo.svg'\nimport '../style/App.scss'\nimport '../style/DemoStyle.scss'\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport Demo from './Demo'\nimport Playground from './playground/Playground'\nimport SynapseFormWrapper from '../../lib/containers/synapse_form_wrapper/SynapseFormWrapper'\nimport SynapseFormSubmissionsGrid from '../../lib/containers/synapse_form_wrapper/SynapseFormSubmissionsGrid'\nimport { SynapseClient } from '../../lib/utils/'\nimport { RouteChildrenProps } from 'react-router'\nimport { Alert } from 'react-bootstrap'\n\n/**\n * Demo of features that can be used from src/demo/utils/SynapseClient\n * module\n */\n\ntype AppState = {\n  token: string\n  getSessionCalled: boolean\n}\nexport const TokenContext = React.createContext('')\n\nexport default class App extends React.Component<{}, AppState> {\n  constructor(props: any) {\n    super(props)\n    this.state = {\n      token: '',\n      getSessionCalled: false,\n    }\n  }\n\n  handleChange = (updatedState: {}): void => {\n    this.setState(updatedState)\n  }\n\n  public componentDidMount() {\n    // Note:  All portals should do this once on the initial app load.\n    // This looks for the session token cookie (HttpOnly, unable to directly access), and initialize the session if it does exists.\n    SynapseClient.detectSSOCode()\n    SynapseClient.getSessionTokenFromCookie()\n      .then(sessionToken =>\n        this.handleChange({ token: sessionToken, getSessionCalled: true }),\n      )\n      .catch((error: any) => {\n        console.error(error)\n        this.setState({\n          getSessionCalled: true,\n        })\n      })\n  }\n\n  getSession = async () => {\n    SynapseClient.detectSSOCode()\n    SynapseClient.getSessionTokenFromCookie()\n      .then(sessionToken => {\n        this.handleChange({ token: sessionToken })\n      })\n      .catch((error: any) => {\n        console.error(error)\n      })\n  }\n\n  renderLoginAndSignout(token: string): JSX.Element {\n    const signedInState = (\n      <div className=\"bg-success text-center\" role=\"alert\">\n        You are logged in.&nbsp;\n        <button\n          onClick={() => {\n            SynapseClient.signOut(this.getSession)\n          }}\n        >\n          <span aria-hidden=\"true\">Sign out</span>\n        </button>\n      </div>\n    )\n\n    const notSignedInState = (\n      <div className=\"text-center\">\n        <h4>Synapse Production (Google SSO redirects here)</h4>\n        <Login sessionCallback={this.getSession} theme={'light'} icon={true} />\n        <details>\n          <summary>\n            Synapse Staging (Google SSO redirects to staging site)\n          </summary>\n          <Login\n            sessionCallback={this.getSession}\n            theme={'dark'}\n            icon={true}\n            googleRedirectUrl={\n              'https://staging.synapse.org/Portal/oauth2callback?oauth2provider=GOOGLE_OAUTH_2_0'\n            }\n          />\n        </details>\n        <hr />\n      </div>\n    )\n\n    if (token && token !== '') {\n      return signedInState\n    } else {\n      return notSignedInState\n    }\n  }\n\n  \n  public render(): JSX.Element {\n    const { token, getSessionCalled } = this.state\n\n    const alert = <Alert\n        dismissible={false}\n        show={true}\n        variant={'warning'}\n        transition={false}\n      >\n        <h4>@Deprecated</h4>\n        <p>Demo a new component by creating a .md file of the same name (Button.md for Button.tsx), and run the styleguidist server: <code>yarn start-docs</code></p>\n      </Alert>\n\n    if (!getSessionCalled) {\n      // This lets us keep better track of API calls made, it avoids having the token cause an unecessary\n      // component update\n      return (\n        <div>\n          <div className=\"App-header text-center\">\n            <img src={logoSvg} className=\"App-logo\" alt=\"logo\" />\n            <h4 className=\"white-text\">Synapse React Client Demo</h4>            \n          </div>\n          {alert}\n          <p> Getting session token... </p>\n        </div>\n      )\n    }\n    return (\n      <TokenContext.Provider value={token}>\n        <Router basename={process.env.PUBLIC_URL}>\n          <div>\n            <div className=\"App-header text-center\">\n              <img src={logoSvg} className=\"App-logo\" alt=\"logo\" />\n              <h4 className=\"white-text\">Synapse React Client Demo</h4>              \n            </div>\n            {alert}\n            {this.renderLoginAndSignout(token)}\n            <ul>\n              <li>\n                <Link to=\"/\">Demo</Link>\n              </li>\n              <li>\n                <Link to=\"/Playground\">Playground</Link>\n              </li>\n              <li>\n                <Link to=\"/drugUploadTool\">Drug Upload Tool</Link>\n              </li>\n              <li>\n                <Link to=\"/contribReqForm\">\n                  AMP-AD external data contribution{' '}\n                </Link>\n              </li>\n            </ul>\n            <Route exact={true} path=\"/\" component={Demo} />\n            <Route\n              path=\"/Playground\"\n              component={(props: RouteChildrenProps) => (\n                <Playground {...props} token={token} />\n              )}\n            />\n            <Route\n              exact={true}\n              path=\"/drugUploadTool\"\n              render={props => {\n                const searchParamsProps: any = {}\n                // https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams -- needs polyfill for ie11\n                const searchParams = new URLSearchParams(props.location.search)\n                searchParams.forEach((value, key) => {\n                  searchParamsProps[key] = value\n                })\n                return !props.location.search ? (\n                  <SynapseFormSubmissionsGrid\n                    pathpart=\"drugUploadTool\"\n                    token={token}\n                    formClass=\"drug-upload-tool\"\n                    formGroupId=\"9\"\n                    itemNoun=\"Compound\"\n                  />\n                ) : (\n                  <SynapseFormWrapper\n                    {...props}\n                    formSchemaEntityId=\"syn20680102\"\n                    fileNamePath=\"naming.compound_name\"\n                    formUiSchemaEntityId=\"syn20693568\"\n                    formNavSchemaEntityId=\"syn20680027\"\n                    token={token}\n                    formTitle=\"Your Submission\"\n                    formClass=\"drug-upload-tool\"\n                    searchParams={searchParamsProps}\n                  />\n                )\n              }}\n            />\n\n            {/*------------------- contributions request form ---------------------------------*/}\n            <Route\n              exact={true}\n              path=\"/contribReqForm\"\n              render={props => {\n                let searchParamsProps: any = {}\n                // https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams -- needs polyfill for ie11\n                const searchParams = new URLSearchParams(props.location.search)\n                searchParams.forEach((value, key) => {\n                  searchParamsProps[key] = value\n                })\n                return !props.location.search ? (\n                  <SynapseFormSubmissionsGrid\n                    pathpart=\"contribReqForm\"\n                    formGroupId=\"11\"\n                    token={token}\n                    formClass=\"contribution-request\"\n                    itemNoun={'Contribution Request'}\n                  />\n                ) : (\n                  <SynapseFormWrapper\n                    {...props}\n                    formSchemaEntityId=\"syn20692910\"\n                    fileNamePath=\"study.submission_name\"\n                    formUiSchemaEntityId=\"syn20692911\"\n                    formNavSchemaEntityId=\"syn20968007\"\n                    isWizardMode={true}\n                    token={token}\n                    formTitle=\"Your Contribution Request\"\n                    formClass=\"contribution-request\"\n                    searchParams={searchParamsProps}\n                  />\n                )\n              }}\n            />\n          </div>\n        </Router>\n      </TokenContext.Provider>\n    )\n  }\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport App from './demo/containers/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","// Folder exports\nexport * from './Download'\nexport * from './EvaluationQueryTable'\nexport * from './Table'\nexport * from './AccessRequirement'\n// https://basarat.gitbooks.io/typescript/docs/tips/barrel.html\nexport * from './AccessCodeResponse'\nexport * from './AccessControlList'\nexport * from './AddFilesToDownloadListRequest'\nexport * from './AddFilesToDownloadListResponse'\nexport * from './AddPartResponse'\nexport * from './AttachmentData'\nexport * from './BatchFileRequest'\nexport * from './BatchFileResult'\nexport * from './BatchPresignedUploadUrlRequest'\nexport * from './BatchPresignedUploadUrlResponse'\nexport * from './BulkFileDownloadRequest'\nexport * from './BulkFileDownloadResponse'\nexport * from './Entity'\nexport * from './EntityHeader'\nexport * from './EntityId'\nexport * from './EntityLookupRequest'\nexport * from './Evaluation'\nexport * from './EvaluationQueryTable'\nexport * from './FileDownloadSummary'\nexport * from './FileEntity'\nexport * from './FileHandle'\nexport * from './FileHandleAssociation'\nexport * from './FileHandleResults'\nexport * from './ExternalFileHandleInterface'\nexport * from './FileResult'\nexport * from './FileUploadComplete'\nexport * from './Forms'\nexport * from './LoginRequest'\nexport * from './LoginResponse'\nexport * from './MultipartUploadRequest'\nexport * from './MultipartUploadStatus'\nexport * from './OAuthClientPublic'\nexport * from './OIDCAuthorizationRequest'\nexport * from './OAuthConsentGrantedResponse'\nexport * from './OIDCAuthorizationRequestDescription'\nexport * from './PaginatedResults'\nexport * from './PartPresignedUrl'\nexport * from './ReferenceList'\nexport * from './ResourceAccess'\nexport * from './RestrictionInformation'\nexport * from './Statistics'\nexport * from './Submission'\nexport * from './SubmissionContributor'\nexport * from './SynapseVersion'\nexport * from './UserBundle'\nexport * from './UserGroupHeader'\nexport * from './UserGroupHeaderResponsePage'\nexport * from './UserPreference'\nexport * from './UserProfile'\nexport * from './VerificationSubmission'\nexport * from './WikiPage'\nexport * from './AccessApproval'\nexport * from './WikiPageKey'\n","export * from './QueryTableResults'","module.exports = __webpack_public_path__ + \"static/media/file-dotted.2dcc2eac.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/Data2.1104e430.svg\";","module.exports = __webpack_public_path__ + \"static/media/subscribe_plus.f7a0ebbd.svg\";","export * from './DownloadList'\nexport * from './DownloadOrder'","export * from './AsyncJobId'\nexport * from './AsynchronousJobStatus'\nexport * from './ColumnModel'\nexport * from './ColumnType'\nexport * from './CsvTableDescription'\nexport * from './DownloadFromTableRequest'\nexport * from './DownloadFromTableResult'\nexport * from './FacetColumnRequest'\nexport * from './FacetColumnResult'\nexport * from './FacetType'\nexport * from './Query'\nexport * from './QueryBundleRequest'\nexport * from './QueryResult'\nexport * from './QueryResultBundle'\nexport * from './SelectColumn'\nexport * from './SumFileSizes'","// https://docs.synapse.org/rest/org/sagebionetworks/repo/model/table/ColumnType.html\nexport enum ColumnType {\n  STRING = 'STRING',\n  DOUBLE = 'DOUBLE',\n  BOOLEAN = 'BOOLEAN',\n  INTEGER = 'INTEGER',\n  DATE = 'DATE',\n  FILEHANDLEID = 'FILEHANDLEID',\n  ENTITYID = 'ENTITYID',\n  LINK = 'LINK',\n  LARGETEXT = 'LARGETEXT',\n  USERID = 'USERID',\n  STRING_LIST = 'STRING_LIST',\n  INTEGER_LIST = 'INTEGER_LIST',\n  BOOLEAN_LIST = 'BOOLEAN_LIST',\n  DATE_LIST = 'DATE_LIST',\n}\n","export enum EntityColumnType {\n  STRING = 'STRING',\n  DOUBLE = 'DOUBLE',\n  BOOLEAN = 'BOOLEAN',\n  INTEGER = 'INTEGER',\n  DATE = 'DATE',\n  FILEHANDLEID = 'FILEHANDLEID',\n  ENTITYID = 'ENTITYID',\n  LINK = 'LINK',\n  LARGETEXT = 'LARGETEXT',\n  USERID = 'USERID',\n  STRING_LIST = 'STRING_LIST',\n  INTEGER_LIST = 'INTEGER_LIST',\n  BOOLEAN_LIST = 'BOOLEAN_LIST',\n  DATE_LIST = 'DATE_LIST',\n}\n\n// https://docs.synapse.org/rest/org/sagebionetworks/repo/model/table/SelectColumn.html\nexport type SelectColumn = {\n  name: string // The required display name of the column\n  columnType: EntityColumnType\n  // The column type determines the type of data that can be stored in a co\n  id: string // The optional ID of the select column, if this is a direct column selected\n}\n","export * from './AccessRequirement'\nexport * from './RestrictableObjectDescriptor'\nexport * from './SelfSignAccessRequirement'\nexport * from './SelfSignAccessRequirementInterface'\nexport * from './TermsOfUseAccessRequirement'\nexport * from './AccessRequirementStatus'\nexport * from './ManagedACTAccessRequirement'\nexport * from './ACTAccessRequirement'\n","import { RestrictableObjectDescriptor } from './RestrictableObjectDescriptor'\n\nexport enum ACCESS_TYPE {\n  CREATE = 'CREATE',\n  READ = 'READ',\n  UPDATE = 'UPDATE',\n  DELETE = 'DELETE',\n  CHANGE_PERMISSIONS = 'CHANGE_PERMISSIONS',\n  DOWNLOAD = 'DOWNLOAD',\n  UPLOAD = 'UPLOAD',\n  PARTICIPATE = 'PARTICIPATE',\n  SUBMIT = 'SUBMIT',\n  READ_PRIVATE_SUBMISSION = 'READ_PRIVATE_SUBMISSION',\n  UPDATE_SUBMISSION = 'UPDATE_SUBMISSION',\n  DELETE_SUBMISSION = 'DELETE_SUBMISSION',\n  TEAM_MEMBERSHIP_UPDATE = 'TEAM_MEMBERSHIP_UPDATE',\n  SEND_MESSAGE = 'SEND_MESSAGE',\n  CHANGE_SETTINGS = 'CHANGE_SETTINGS',\n  MODERATE = 'MODERATE',\n}\n\nexport interface AccessRequirement {\n  versionNumber: number //\tThe version number issued to this version on the object.\n  id: number //\tThe unique immutable ID. Provided by the system, the user may not set this field.\n  etag: string //\tSynapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.\n  createdOn: string //\tThe date this object was created. Provided by the system, the user may not set this field.\n  modifiedOn: string //\tThe date this object was last modified. Provided by the system, the user may not set this field.\n  createdBy: string //\tThe user that created this object. Provided by the system, the user may not set this field.\n  modifiedBy: string //\tThe user that last modified this object. Provided by the system, the user may not set this field.\n  subjectIds: Array<RestrictableObjectDescriptor> // The IDs of the items controlled by this Access Requirement. Required when creating or updating.\n  accessType: ACCESS_TYPE //\tThe enumeration of possible permission.\n  concreteType: string //\tIndicates which type of AccessRequirement this object represents. Provided by the system, the user may not set this field.\n}\n","import { FileHandleAssociation } from './FileHandleAssociation'\n\n// https://docs.synapse.org/rest/org/sagebionetworks/repo/model/file/ZipFileFormat.html\nexport enum ZipFileFormat {\n  CommandLineCache = 'CommandLineCache', // This is the default format. Zip file format structure is: (%1000)//\n  Flat = 'Flat', // Files are writtent to the zip 'flat' with no directory structure.\n  //Each file is named after the original file. Duplicate file names are appended with a number in parenthesis to ensure all names are unique.\n}\n\n// Request for a bulk file download.\n// https://docs.synapse.org/rest/org/sagebionetworks/repo/model/file/BulkFileDownloadRequest.html\nexport type BulkFileDownloadRequest = {\n  concreteType: 'org.sagebionetworks.repo.model.file.BulkFileDownloadRequest'\n  requestedFiles: FileHandleAssociation[] // The files to be included in the download.\n  zipFileName: string // Optional parameter to set the name of the resulting zip file.\n  zipFileFormat?: ZipFileFormat // Enumeration of all possible zip file formats produced by bulk file download worker\n}\n","export * from './Evaluation'\nexport * from './EvaluationRound'\nexport * from './EvaluationRoundLimit'\nexport * from './SubmissionQuota'\n","import { SubmissionQuota } from './SubmissionQuota'\n\nexport enum EvaluationStatus {\n  PLANNED = 'PLANNED',\n  OPEN = 'OPEN',\n  CLOSED = 'CLOSED',\n  COMPLETED = 'COMPLETED',\n}\n\n// https://docs.synapse.org/rest/org/sagebionetworks/evaluation/model/Evaluation.html\nexport type Evaluation = {\n  id?: string\n  etag?: string\n  name?: string\n  description?: string\n  ownerId?: string\n  createdOn?: string\n  contentSource?: string\n  status?: EvaluationStatus\n  submissionInstructionsMessage?: string\n  submissionReceiptMessage?: string\n  /** @deprecated use REST APIs for EvaluationRound instead */\n  quota?: SubmissionQuota\n}\n","import { FileHandleAssociateType } from './FileHandleAssociation'\n\n// The download status of this file.\nexport enum FileDownloadStatus {\n  SUCCESS = 'SUCCESS',\n  FAILURE = 'FAILURE',\n}\n\n// If the download status of this file is set to 'FAILURE', then this will be the failure code. Null for 'SUCCESS'.\nexport enum FileDownloadCode {\n  NOT_FOUND = 'NOT_FOUND',\n  UNAUTHORIZED = 'UNAUTHORIZED',\n  DUPLICATE = 'DUPLICATE',\n  EXCEEDS_SIZE_LIMIT = 'EXCEEDS_SIZE_LIMIT',\n  UNKNOWN_ERROR = 'UNKNOWN_ERROR',\n}\n\n// https://docs.synapse.org/rest/org/sagebionetworks/repo/model/file/FileDownloadSummary.html\nexport type FileDownloadSummary = {\n  fileHandleId: string //\tThe file handle id of a requested file.\n  associateObjectId: string //\tThe ID of the object associated with the file\n  associateObjectType: FileHandleAssociateType //\tEnumeration of all possible objects types that can be associated with a file.\n  zipEntryName: string //\tThe zip entry name used for this file. This entry includes both the path and file name. The value will only be set if the status is set to 'SUCCESS'\n  status: FileDownloadStatus //\tThe download status of this file.\n  failureMessage: string //\tIf the download status of this file is set to 'FAILURE', then this will be the failure message. Null for 'SUCCESS'.\n  failureCode: FileDownloadCode | null // If the download status of this file is set to 'FAILURE', then this will be the failure code. Null for 'SUCCESS'.\n}\n","import { Entity } from './Entity'\nimport { AssertionError } from 'assert'\n\n// https://docs.synapse.org/rest/org/sagebionetworks/repo/model/FileEntity.html\nexport interface FileEntity extends Entity {\n  concreteType: 'org.sagebionetworks.repo.model.FileEntity'\n  versionNumber?: number // \tThe version number issued to this version on the object.\n  versionLabel?: string // \tThe version label for this entity\n  versionComment?: string // \tThe version comment for this entity\n  versionUrl?: string // \tThe full URL of this exect version. This URL is provided by Synapse.\n  versions?: string // \tThe URL to get all versions of this entity. This URL is provided by Synapse.\n  dataFileHandleId: string // \tID of the file associated with this entity.\n  fileNameOverride?: string // \tAn optional replacement for the name of the uploaded file. This is distinct from the entity name. If omitted the file will retain its original name.\n}\n\nexport function assertIsFileEntity(val: Entity): asserts val is FileEntity {\n  if (val.concreteType !== 'org.sagebionetworks.repo.model.FileEntity') {\n    throw new AssertionError({\n      message: `File Entity exepcted but found ${val}`,\n    })\n  }\n}\n","// http://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/file/FileHandleAssociateType.html\nexport enum FileHandleAssociateType {\n  FileEntity = 'FileEntity',\n  TableEntity = 'TableEntity',\n  WikiAttachment = 'WikiAttachment',\n  WikiMarkdown = 'WikiMarkdown',\n  UserProfileAttachment = 'UserProfileAttachment',\n  MessageAttachment = 'MessageAttachment',\n  TeamAttachment = 'TeamAttachment',\n  SubmissionAttachment = 'SubmissionAttachment',\n  VerificationSubmission = 'VerificationSubmission',\n  AccessRequirementAttachment = 'AccessRequirementAttachment',\n  DataAccessRequestAttachment = 'DataAccessRequestAttachment',\n  DataAccessSubmissionAttachment = 'DataAccessSubmissionAttachment',\n}\n\nexport type FileHandleAssociation = {\n  fileHandleId: string //\tThe ID of the FileHandle.\n  associateObjectId: string //\tThe ID of the object associated with the file\n  associateObjectType: FileHandleAssociateType //\tEnumeration of all possible objects types that can be associated with a file.\n}\n","import { FileHandle } from './FileHandle'\nimport { AssertionError } from 'assert'\n\nexport enum ExternalFileHandleConcreteTypeEnum {\n  ProxyFileHandle = 'org.sagebionetworks.repo.model.file.ProxyFileHandle',\n  ExternalObjectStoreFileHandle = 'org.sagebionetworks.repo.model.file.ExternalObjectStoreFileHandle',\n  ExternalFileHandle = 'org.sagebionetworks.repo.model.file.ExternalFileHandle',\n}\n\n/*\nhttps://docs.synapse.org/rest/org/sagebionetworks/repo/model/file/ExternalObjectStoreFileHandle.html\nRepresents a file stored in an S3 Bucket to which Synapse cannot access. \nTogether with ExternalObjectStorageLocationSetting, this object provides the information the client requires to access the S3 file.\n\n*/\nexport type ExternalObjectStoreFileHandle = ExternalFileHandleInterface & {\n  concreteType: ExternalFileHandleConcreteTypeEnum.ExternalObjectStoreFileHandle // This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle\n  filePath: string //\tSTRING\tThe relative path of this file within the proxy.\n}\n\nexport function assertIsExternalFileHandle(\n  x?: FileHandle,\n): asserts x is ExternalFileHandle {\n  if (\n    x?.concreteType !== ExternalFileHandleConcreteTypeEnum.ExternalFileHandle\n  ) {\n    throw new AssertionError({\n      message: ` ExternalFileHandle expected but found ${x}`,\n    })\n  }\n}\n\n/*\n  https://docs.synapse.org/rest/org/sagebionetworks/repo/model/file/ExternalFileHandle.html\n  An ExternalFileHandle represents a file that is not stored in Synapse. Instead, ExternalFileHandles reside somewhere accessible via a URL. Synapse will attempt to generate a preview for any external URL that can be publicly read.\n*/\nexport type ExternalFileHandle = ExternalFileHandleInterface & {\n  concreteType: ExternalFileHandleConcreteTypeEnum.ExternalFileHandle // This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle\n  externalURL: string //\tThe external URL of this file.\n}\n\n/*\n https://docs.synapse.org/rest/org/sagebionetworks/repo/model/file/ProxyFileHandle.html\n Reference to a file that accessible via a proxy server. Each ProxyFileHandle must reference a ProxyStorageLocationSettings that defines how the files are accessed.\n*/\nexport type ProxyFileHandle = ExternalFileHandleInterface & {\n  concreteType: ExternalFileHandleConcreteTypeEnum.ProxyFileHandle // This is used to indicate the implementation of this interface. For example, an S3FileHandle should be set to: org.sagebionetworks.repo.model.file.S3FileHandle\n  filePath: string //\tSTRING\tThe relative path of this file within the proxy.\n}\n\n// https://www.typescriptlang.org/docs/handbook/advanced-types.html#typeof-type-guards\nexport function implementsExternalFileHandleInterface(\n  x: ExternalFileHandleInterface,\n): x is ExternalFileHandleInterface {\n  return Object.values<string>(ExternalFileHandleConcreteTypeEnum).includes(\n    x.concreteType,\n  )\n}\n\n/* \n  Defines FileHandles for files that are stored externally and can not be controlled by Synapse. \n  All file access authentication and download/upload/delete operations are delegated the client.\n\n  Note - while the interface is empty this keeps parity between the backend and frontend types.\n*/\nexport interface ExternalFileHandleInterface extends FileHandle {}\n","//https://docs.synapse.org/rest/org/sagebionetworks/repo/model/form/FormGroup.html\nexport type FormGroup = {\n  groupId: string\n  name: string\n  createdBy: string\n  createdOn: string\n}\n\n// see https://docs.synapse.org/rest/org/sagebionetworks/repo/model/form/FormData.html\nexport type FormData = {\n  formDataId: string\n  etag: string\n  groupId: string\n  name: string\n  createdBy: string\n  createdOn: string\n  modifiedOn: string\n  dataFileHandleId: string\n  submissionStatus: SubmissionStatus\n}\n\n// see https://docs.synapse.org/rest/org/sagebionetworks/repo/model/form/FormChangeRequest.html\nexport type FormChangeRequest = {\n  name: string\n  fileHandleId: string\n}\n\n// see https://docs.synapse.org/rest/org/sagebionetworks/repo/model/form/FormRejection.html\nexport type FormRejection = {\n  reason: string\n}\n\n// see https://docs.synapse.org/rest/org/sagebionetworks/repo/model/form/SubmissionStatus.html\nexport type SubmissionStatus = {\n  submittedOn?: string\n  reviewedOn?: string\n  reviewedBy?: string\n  state: StatusEnum\n  rejectionMessage?: string\n}\n\n// see https://docs.synapse.org/rest/org/sagebionetworks/repo/model/form/StatusEnum.html\nexport enum StatusEnum {\n  WAITING_FOR_SUBMISSION = 'WAITING_FOR_SUBMISSION',\n  SUBMITTED_WAITING_FOR_REVIEW = 'SUBMITTED_WAITING_FOR_REVIEW',\n  ACCEPTED = 'ACCEPTED',\n  REJECTED = 'REJECTED',\n}\n\n// see https://docs.synapse.org/rest/org/sagebionetworks/repo/model/form/ListRequest.html\nexport type ListRequest = {\n  filterByState?: StatusEnum[]\n  groupId: string\n  nextPageToken?: string\n}\n\n// see https://docs.synapse.org/rest/org/sagebionetworks/repo/model/form/ListResponse.html\nexport type ListResponse = {\n  page: FormData[]\n  nextPageToken?: string\n}\n","// see https://docs.synapse.org/rest/org/sagebionetworks/repo/model/RestrictableObjectType.html\nexport enum RestrictableObjectType {\n  ENTITY = 'ENTITY',\n  EVALUATION = 'EVALUATION',\n  TEAM = 'TEAM',\n}\n\n// see https://docs.synapse.org/rest/org/sagebionetworks/repo/model/RestrictionInformationRequest.html\nexport type RestrictionInformationRequest = {\n  restrictableObjectType: RestrictableObjectType\n  objectId: string\n}\n\n// see https://docs.synapse.org/rest/org/sagebionetworks/repo/model/RestrictionLevel.html\nexport enum RestrictionLevel {\n  OPEN = 'OPEN',\n  RESTRICTED_BY_TERMS_OF_USE = 'RESTRICTED_BY_TERMS_OF_USE',\n  CONTROLLED_BY_ACT = 'CONTROLLED_BY_ACT',\n}\n\n// see https://docs.synapse.org/rest/org/sagebionetworks/repo/model/RestrictionInformationResponse.html\nexport type RestrictionInformationResponse = {\n  restrictionLevel: RestrictionLevel\n  hasUnmetAccessRequirement: boolean\n}\n","export enum ApprovalState {\n  APPROVED = 'APPROVED',\n  REVOKED = 'REVOKED',\n}\n\nexport interface AccessApproval {\n  id?: number //\tThe unique immutable ID\n  etag?: string //\tSynapse employs an Optimistic Concurrency Control (OCC) scheme to handle concurrent updates. Since the E-Tag changes every time an entity is updated it is used to detect when a client's current representation of an object is out-of-date.\n  createdOn?: string //\tThe date this object was created.\n  modifiedOn?: string //\tThe date this object was last modified.\n  createdBy?: string //\tThe user that created this object.\n  modifiedBy?: string //\tThe user that last modified this object.\n  requirementId: number //\tThe ID of the Access Requirement that this object approves.\n  requirementVersion?: number //\tThe version of the Access Requirement that this object approves.\n  submitterId: string //\tThe user who performed the necessary action(s) to gain this approval.\n  accessorId: string //\tThe ID of the principal (user or group) approved for access\n  expiredOn?: string //\tThe date this object will be expired.\n  state: ApprovalState //\tJSON enum for the state of AccessApproval\n}\n","// https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/ObjectType.html\n\nexport enum ObjectType {\n    ENTITY = 'ENTITY',\n    ENTITY_CONTAINER = 'ENTITY_CONTAINER', \t\n    PRINCIPAL = 'PRINCIPAL',\t\n    ACTIVITY = 'ACTIVITY',\t\n    EVALUATION = 'EVALUATION',\t\n    SUBMISSION = 'SUBMISSION',\t\n    EVALUATION_SUBMISSIONS = 'EVALUATION_SUBMISSIONS',\t\n    FILE = 'FILE',\t\n    MESSAGE = 'MESSAGE', \n    WIKI = 'WIKI',\t\n    FAVORITE = 'FAVORITE',\t\n    ACCESS_REQUIREMENT = 'ACCESS_REQUIREMENT',\t\n    ACCESS_APPROVAL = 'ACCESS_APPROVAL',\t\n    TEAM = 'TEAM',\t\n    TABLE = 'TABLE',\t\n    ACCESS_CONTROL_LIST = 'ACCESS_CONTROL_LIST',\t\n    PROJECT_SETTING = 'PROJECT_SETTING',\t\n    VERIFICATION_SUBMISSION = 'VERIFICATION_SUBMISSION',\t\n    CERTIFIED_USER_PASSING_RECORD = 'CERTIFIED_USER_PASSING_RECORD',\t\n    FORUM = 'FORUM',\t\n    THREAD = 'THREAD',\t\n    REPLY = 'REPLY',\t\n    FORM_GROUP = 'FORM_GROUP',\t\n    FORM_DATA = 'FORM_DATA',\t\n    ENTITY_VIEW = 'ENTITY_VIEW',\t\n    USER_PROFILE = 'USER_PROFILE',\t\n    DATA_ACCESS_REQUEST = 'DATA_ACCESS_REQUEST',\t\n    DATA_ACCESS_SUBMISSION = 'DATA_ACCESS_SUBMISSION',\t\n    DATA_ACCESS_SUBMISSION_STATUS = 'DATA_ACCESS_SUBMISSION_STATUS',\t\n    MEMBERSHIP_INVITATION = 'MEMBERSHIP_INVITATION',\n}\n\n// https://rest-docs.synapse.org/rest/org/sagebionetworks/repo/model/dao/WikiPageKey.html\n\nexport type WikiPageKey = {\n    \n    wikiPageId: string\t//The ID of the wiki page.\n    ownerObjectId: string\t//The owner of this page.\n    ownerObjectType: ObjectType\t//JSON enum for the types of objects in Synapse.\n\n  }\n  ","module.exports = __webpack_public_path__ + \"static/media/study-active.bc52e72b.svg\";","module.exports = __webpack_public_path__ + \"static/media/study-complete.b012f80b.svg\";","module.exports = __webpack_public_path__ + \"static/media/DNA_Two.d8f80972.svg\";","module.exports = __webpack_public_path__ + \"static/media/organizations.67d2a8a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/person.0d77b8e6.svg\";","module.exports = __webpack_public_path__ + \"static/media/mouse.4a97f235.svg\";","module.exports = __webpack_public_path__ + \"static/media/chart2.570e6894.svg\";","module.exports = __webpack_public_path__ + \"static/media/file.ff06cc8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_plus.0e50c501.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_minus.e81d9a4f.svg\";","module.exports = __webpack_public_path__ + \"static/media/json-form-tool-no-submissions.e64940c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/brain.c6301611.svg\";","module.exports = __webpack_public_path__ + \"static/media/circle.ed6d433a.svg\";","module.exports = __webpack_public_path__ + \"static/media/mouse.7e294e96.svg\";","module.exports = __webpack_public_path__ + \"static/media/resiliencead.7500217a.svg\";","module.exports = __webpack_public_path__ + \"static/media/homepage_1.350ecf7b.png\";","module.exports = __webpack_public_path__ + \"static/media/organizeResearch.ced8fba8.svg\";","module.exports = __webpack_public_path__ + \"static/media/getCredit.a849487e.svg\";","module.exports = __webpack_public_path__ + \"static/media/collaborate.773e1605.svg\";","module.exports = __webpack_public_path__ + \"static/media/dataSharing.58278321.svg\";","module.exports = __webpack_public_path__ + \"static/media/rClient.c3244f52.svg\";","module.exports = __webpack_public_path__ + \"static/media/python.ff739730.svg\";","module.exports = __webpack_public_path__ + \"static/media/terminal.2f025777.svg\";","module.exports = __webpack_public_path__ + \"static/media/java.d08abb59.svg\";"],"sourceRoot":""}