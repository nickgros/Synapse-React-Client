{"version":3,"sources":["lib/utils/functions/colorPalette.ts","demo/containers/App.tsx","index.tsx"],"names":["COLOR_PALETTE_EVEN","COLOR_PALETTE_ODD","App","React","props","map","color","key","style","background","width","height","ReactDOM","document","getElementById"],"mappings":"sSAAMA,G,qBAA+B,CACnC,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,uBAGIC,EAA8B,CAClC,qBACE,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,sBCpNiBC,GAFOC,gBAAoB,I,kDAG9C,WAAYC,GAAa,uCACjBA,G,qDAIN,OACE,2BACE,gDACA,2BACGJ,EAAmBK,KAAI,SAAAC,GACtB,OACE,uBACEC,IAAKD,EACLE,MAAO,CAAEC,WAAYH,EAAOI,MAAO,OAAQC,OAAQ,UAElDL,OAKT,+CACA,2BACGL,EAAkBI,KAAI,SAAAC,GACrB,OACE,uBACEC,IAAKD,EACLE,MAAO,CAAEC,WAAYH,EAAOI,MAAO,OAAQC,OAAQ,UAElDL,Y,GA7BgBH,cCLjCS,SAAgB,gBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.81c605ed.chunk.js","sourcesContent":["const COLOR_PALETTE_EVEN: string[] = [\n  'hsl(183, 38%, 53%)',\n  'hsl(183, 38%, 63%)',\n  'hsl(183, 38%, 72%)',\n  'hsl(183, 37%, 81%)',\n  'hsl(183, 37%, 91%)',\n  'hsl(202, 33%, 89%)',\n  'hsl(204, 33%, 78%)',\n  'hsl(203, 34%, 66%)',\n  'hsl(203, 34%, 55%)',\n  'hsl(203, 43%, 44%)',\n  'hsl(332, 56%, 52%)',\n  'hsl(332, 56%, 62%)',\n  'hsl(333, 56%, 72%)',\n  'hsl(331, 55%, 81%)',\n  'hsl(331, 55%, 90%)',\n  'hsl(256, 22%, 87%)',\n  'hsl(256, 22%, 74%)',\n  'hsl(256, 22%, 61%)',\n  'hsl(256, 24%, 48%)',\n  'hsl(256, 42%, 35%)',\n  'hsl(39, 75%, 50%)',\n  'hsl(38, 75%, 60%)',\n  'hsl(38, 74%, 70%)',\n  'hsl(39, 75%, 80%)',\n  'hsl(39, 73%, 90%)',\n  'hsl(173, 39%, 86%)',\n  'hsl(174, 38%, 73%)',\n  'hsl(175, 38%, 59%)',\n  'hsl(175, 45%, 46%)',\n  'hsl(175, 80%, 32%)',\n  'hsl(218, 25%, 31%)',\n  'hsl(219, 14%, 45%)',\n  'hsl(219, 11%, 59%)',\n  'hsl(218, 11%, 73%)',\n  'hsl(218, 11%, 86%)',\n  'hsl(27, 67%, 89%)',\n  'hsl(26, 68%, 79%)',\n  'hsl(26, 68%, 68%)',\n  'hsl(26, 68%, 58%)',\n  'hsl(26, 75%, 47%)',\n  'hsl(120, 29%, 49%)',\n  'hsl(120, 28%, 59%)',\n  'hsl(120, 28%, 69%)',\n  'hsl(120, 28%, 79%)',\n  'hsl(120, 27%, 90%)',\n  'hsl(221, 46%, 91%)',\n  'hsl(223, 47%, 81%)',\n  'hsl(223, 46%, 72%)',\n  'hsl(223, 47%, 63%)',\n  'hsl(223, 47%, 54%)',\n  'hsl(357, 66%, 42%)',\n  'hsl(357, 48%, 54%)',\n  'hsl(358, 48%, 65%)',\n  'hsl(357, 48%, 77%)',\n  'hsl(358, 49%, 88%)',\n  'hsl(183, 37%, 91%)',\n  'hsl(183, 37%, 81%)',\n  'hsl(183, 38%, 72%)',\n  'hsl(183, 38%, 63%)',\n  'hsl(183, 38%, 53%)',\n  'hsl(203, 43%, 44%)',\n  'hsl(203, 34%, 55%)',\n  'hsl(203, 34%, 66%)',\n  'hsl(204, 33%, 78%)',\n  'hsl(202, 33%, 89%)',\n  'hsl(331, 55%, 90%)',\n  'hsl(331, 55%, 81%)',\n  'hsl(333, 56%, 72%)',\n  'hsl(332, 56%, 62%)',\n  'hsl(332, 56%, 52%)',\n  'hsl(256, 42%, 35%)',\n  'hsl(256, 24%, 48%)',\n  'hsl(256, 22%, 61%)',\n  'hsl(256, 22%, 74%)',\n  'hsl(256, 22%, 87%)',\n  'hsl(39, 73%, 90%)',\n  'hsl(39, 75%, 80%)',\n  'hsl(38, 74%, 70%)',\n  'hsl(38, 75%, 60%)',\n  'hsl(39, 75%, 50%)',\n  'hsl(175, 80%, 32%)',\n  'hsl(175, 45%, 46%)',\n  'hsl(175, 38%, 59%)',\n  'hsl(174, 38%, 73%)',\n  'hsl(173, 39%, 86%)',\n  'hsl(218, 11%, 86%)',\n  'hsl(218, 11%, 73%)',\n  'hsl(219, 11%, 59%)',\n  'hsl(219, 14%, 45%)',\n  'hsl(218, 25%, 31%)',\n  'hsl(26, 75%, 47%)',\n  'hsl(26, 68%, 58%)',\n  'hsl(26, 68%, 68%)',\n  'hsl(26, 68%, 79%)',\n  'hsl(27, 67%, 89%)',\n  'hsl(120, 27%, 90%)',\n  'hsl(120, 28%, 79%)',\n  'hsl(120, 28%, 69%)',\n  'hsl(120, 28%, 59%)',\n  'hsl(120, 29%, 49%)',\n  'hsl(223, 47%, 54%)',\n  'hsl(223, 47%, 63%)',\n  'hsl(223, 46%, 72%)',\n  'hsl(223, 47%, 81%)',\n  'hsl(221, 46%, 91%)',\n  'hsl(358, 49%, 88%)',\n  'hsl(357, 48%, 77%)',\n  'hsl(358, 48%, 65%)',\n  'hsl(357, 48%, 54%)',\n  'hsl(357, 66%, 42%)',\n]\n\nconst COLOR_PALETTE_ODD: string[] = [\n  'hsl(203, 43%, 44%)',\n    'hsl(203, 34%, 55%)',\n    'hsl(203, 34%, 66%)',\n    'hsl(204, 33%, 78%)',\n    'hsl(202, 33%, 89%)',\n    'hsl(331, 55%, 90%)',\n    'hsl(331, 55%, 81%)',\n    'hsl(333, 56%, 72%)',\n    'hsl(332, 56%, 62%)',\n    'hsl(332, 56%, 52%)',\n    'hsl(256, 42%, 35%)',\n    'hsl(256, 24%, 48%)',\n    'hsl(256, 22%, 61%)',\n    'hsl(256, 22%, 74%)',\n    'hsl(256, 22%, 87%)',\n    'hsl(39, 73%, 90%)',\n    'hsl(39, 75%, 80%)',\n    'hsl(38, 74%, 70%)',\n    'hsl(38, 75%, 60%)',\n    'hsl(39, 75%, 50%)',\n    'hsl(175, 80%, 32%)',\n    'hsl(175, 45%, 46%)',\n    'hsl(175, 38%, 59%)',\n    'hsl(174, 38%, 73%)',\n    'hsl(173, 39%, 86%)',\n    'hsl(218, 11%, 86%)',\n    'hsl(218, 11%, 73%)',\n    'hsl(219, 11%, 59%)',\n    'hsl(219, 14%, 45%)',\n    'hsl(218, 25%, 31%)',\n    'hsl(26, 75%, 47%)',\n    'hsl(26, 68%, 58%)',\n    'hsl(26, 68%, 68%)',\n    'hsl(26, 68%, 79%)',\n    'hsl(27, 67%, 89%)',\n    'hsl(120, 27%, 90%)',\n    'hsl(120, 28%, 79%)',\n    'hsl(120, 28%, 69%)',\n    'hsl(120, 28%, 59%)',\n    'hsl(120, 29%, 49%)',\n    'hsl(223, 47%, 54%)',\n    'hsl(223, 47%, 63%)',\n    'hsl(223, 46%, 72%)',\n    'hsl(223, 47%, 81%)',\n    'hsl(221, 46%, 91%)',\n    'hsl(358, 49%, 88%)',\n    'hsl(357, 48%, 77%)',\n    'hsl(358, 48%, 65%)',\n    'hsl(357, 48%, 54%)',\n    'hsl(357, 66%, 42%)',\n    'hsl(183, 38%, 53%)',\n    'hsl(183, 38%, 63%)',\n    'hsl(183, 38%, 72%)',\n    'hsl(183, 37%, 81%)',\n    'hsl(183, 37%, 91%)',\n    'hsl(202, 33%, 89%)',\n    'hsl(204, 33%, 78%)',\n    'hsl(203, 34%, 66%)',\n    'hsl(203, 34%, 55%)',\n    'hsl(203, 43%, 44%)',\n    'hsl(332, 56%, 52%)',\n    'hsl(332, 56%, 62%)',\n    'hsl(333, 56%, 72%)',\n    'hsl(331, 55%, 81%)',\n    'hsl(331, 55%, 90%)',\n    'hsl(256, 22%, 87%)',\n    'hsl(256, 22%, 74%)',\n    'hsl(256, 22%, 61%)',\n    'hsl(256, 24%, 48%)',\n    'hsl(256, 42%, 35%)',\n    'hsl(39, 75%, 50%)',\n    'hsl(38, 75%, 60%)',\n    'hsl(38, 74%, 70%)',\n    'hsl(39, 75%, 80%)',\n    'hsl(39, 73%, 90%)',\n    'hsl(173, 39%, 86%)',\n    'hsl(174, 38%, 73%)',\n    'hsl(175, 38%, 59%)',\n    'hsl(175, 45%, 46%)',\n    'hsl(175, 80%, 32%)',\n    'hsl(218, 25%, 31%)',\n    'hsl(219, 14%, 45%)',\n    'hsl(219, 11%, 59%)',\n    'hsl(218, 11%, 73%)',\n    'hsl(218, 11%, 86%)',\n    'hsl(27, 67%, 89%)',\n    'hsl(26, 68%, 79%)',\n    'hsl(26, 68%, 68%)',\n    'hsl(26, 68%, 58%)',\n    'hsl(26, 75%, 47%)',\n    'hsl(120, 29%, 49%)',\n    'hsl(120, 28%, 59%)',\n    'hsl(120, 28%, 69%)',\n    'hsl(120, 28%, 79%)',\n    'hsl(120, 27%, 90%)',\n    'hsl(221, 46%, 91%)',\n    'hsl(223, 47%, 81%)',\n    'hsl(223, 46%, 72%)',\n    'hsl(223, 47%, 63%)',\n    'hsl(223, 47%, 54%)',\n    'hsl(357, 66%, 42%)',\n    'hsl(357, 48%, 54%)',\n    'hsl(358, 48%, 65%)',\n    'hsl(357, 48%, 77%)',\n    'hsl(358, 49%, 88%)',\n    'hsl(183, 37%, 91%)',\n    'hsl(183, 37%, 81%)',\n    'hsl(183, 38%, 72%)',\n    'hsl(183, 38%, 63%)',\n    'hsl(183, 38%, 53%)',\n]\n\nexport { COLOR_PALETTE_EVEN, COLOR_PALETTE_ODD }\n","import * as React from 'react'\nimport '../style/App.scss'\nimport '../style/DemoStyle.scss'\nimport '@fortawesome/fontawesome-free/css/all.css'\nimport {\n  COLOR_PALETTE_EVEN,\n  COLOR_PALETTE_ODD,\n} from 'lib/utils/functions/colorPalette'\n\nexport const TokenContext = React.createContext('')\n\nexport default class App extends React.Component {\n  constructor(props: any) {\n    super(props)\n  }\n\n  public render(): JSX.Element {\n    return (\n      <div>\n        <h2>Color Palette Even</h2>\n        <div>\n          {COLOR_PALETTE_EVEN.map(color => {\n            return (\n              <div\n                key={color}\n                style={{ background: color, width: '100%', height: '100px' }}\n              >\n                {color}\n              </div>\n            )\n          })}\n        </div>\n        <h2>Color Palette Odd</h2>\n        <div>\n          {COLOR_PALETTE_ODD.map(color => {\n            return (\n              <div\n                key={color}\n                style={{ background: color, width: '100%', height: '100px' }}\n              >\n                {color}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n}\n","import * as React from 'react'\nimport * as ReactDOM from 'react-dom'\nimport 'react-app-polyfill/ie11'\nimport 'react-app-polyfill/stable'\nimport App from './demo/containers/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}